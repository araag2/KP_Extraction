Ruteo en redes ad hoc
﻿
La propuesta de esta línea de investigación es
mejorar el rendimiento de determinados protocolos de ruteo de redes wireless ad-hoc para que
puedan realizar su trabajo en un menor tiempo y,
en consecuencia, favorecer el funcionamiento de
las aplicaciones que los utilizan. Los protocolos
seleccionados son los de uso más común en
este tipo de redes. Las modificaciones y las
pruebas correspondientes se realizarán utilizando
el simulador NS-2.
Palabras Claves: ad-hoc, ruteo, DSDV, DSR,
AODV, NS-2
2. Introducción
Una de las principales ventajas de las redes
wireless es la de permitir la movilidad de los
usuarios sin desconectarse de la red. Sin embargo, en las redes infraestructura, esa movilidad
está limitada por el área de cobertura de la
estación base o access point. En determinadas
situaciones, esta área puede ser muy pequeña o,
en el peor de los casos, podría no existir una estación base, lo cual no posibilitaría que los nodos
se puedan comunicar. Además, existen distintos
escenarios donde nos podríamos encontrar con
la necesidad de desplegar una red de manera
simple y rápida, como puede ser cuando existen
catástrofes naturales, operaciones de rescate,
guerras, etc. Las redes ad-hoc son muy atractivas
para resolver estas situaciones porque se pueden
formar dinámicamente mediante la colaboración
de todos los nodos que la integran. No hay
necesidad de que exista un acuerdo previo en lo
que respecta al rol específico que cada nodo debe
asumir. La red es descentralizada. Toda la actividad de la red, incluyendo el descubrimiento de su
topología o el envío de mensajes, es realizada por
los nodos que la integran.
Este tipo de redes tienen una topología dinámica y arbitraria que puede cambiar rápidamente
y de manera impredecible debido a que los
nodos son libres de moverse aleatoriamente.
La principal consecuencia de esta movilidad es
que los links pueden formarse y romperse con
mucha frecuencia, lo que implica que la red
debe ser auto-configurable y auto-organizada.
Obviamente, el camino entre un origen y un
determinado destino que atraviesa varios nodos
intermedios puede, repentinamente, modificarse.
Cuando esto sucede, la red debe ser capaz de
encontrar un nuevo camino en el menor tiempo
posible. Todos los nodos que componen la red
deben cooperar para lograrlo. Esta funcionalidad
requiere que cada uno de los integrantes de la
                      18WICC 2010 - XII Workshop de Investigadores en Ciencias de la Computación
red sea capaz de reenviar datos en nombre de
otros miembros, es decir, que funcionen como un
router.
Aunque el despliegue de este tipo de redes es
bastante sencillo, es necesario tener en cuenta
varios factores, además de los explicados con
anterioridad, para lograr que alcancen un correcto
funcionamiento, como son: capacidad limitada de
las baterías, calidad variable del enlace, enlaces
unidireccionales, ruteo, etc.
En una red wireless del tipo infraestructura, la
comunicación entre los nodos que la componen
es single-hop. Todos los nodos se comunican,
directamente, con la estación base. Pero, en
una red ad-hoc, puede suceder que dos nodos
cualquiera no se puedan conectar, directamente,
entre ellos, aunque si lo pueden hacer utilizando
nodos intermedios, es decir, la comunicación
entre un origen y un destino podría ser multi-hop.
Es por esa característica, la de multi-hop, que
se requiere la presencia de un protocolo de ruteo
que permita encontrar las posibles rutas entre un
origen y un destino. Este protocolo debe ser ejecutado en todos los nodos que conforman la red.
Debido a los limitados recursos con que cuenta
una red ad-hoc, el diseño de protocolos de ruteo
eficientes y confiables se ha transformado en un
gran desafío.
3. Protocolos de ruteo ad-hoc
3.1. Clasificación de los protocolos de
ruteo
Como es sabido, en las redes cableadas los algoritmos de ruteo se pueden clasificar en dos grupos: link-state y distance-vector, que, aunque tienen un correcto desempeño en ese tipo de redes,
no pueden escalar para grandes redes ad-hoc y no
son capaces de adecuarse a los constantes cambios topológicos que existen en una red de estas características. Para solucionar estos inconvenientes se les realizaron algunas adaptaciones.
También, nuevos protocolos específicos para esta
clase de redes han sido desarrollados.
La gran cantidad de protocolos de ruteo (más
de 30 protocolos [1]) existentes se los puede agrupar de la siguiente forma: plano (flat), jerárquico
(hierarchical) y posición geográficamente asistida
(Geographic position assisted) [2] [3]. En el ruteo
plano, o ruteo uniforme, todos los nodos son
idénticos en lo que a su rol y responsabilidad,
dentro de la red, se refiere. En cambio, en el ruteo
jerárquico existen determinados nodos que tienen
una obligación diferente en el funcionamiento
del protocolo. Por último, en los protocolos de
posición geográficamente asistida los nodos pueden ser ayudados por algún dispositivo especial,
como puede ser un dispositivio GPS.
Dentro del ruteo plano, que es sobre el grupo
que en principio desarrollaremos nuestro trabajo, los protocolos se pueden dividir en tres grupos
según la forma en que los nodos obtienen y mantienen la información de ruteo: proactivos (tabledriven), reactivos (on-demand) e híbridos [3]. Los
protocolos proactivos intentan mantener la información de ruteo a todos los demás nodos de la
red consistente y actualizada, por lo tanto, si un
nodo necesita una ruta la obtiene inmediatamente. Si se produce un cambio en la topología de
la red, éste se notifica por toda la red. Como los
nodos mantienen esta información en tablas, también se los conoce como table-driven. Estas tablas
son enviadas periódicamente a todos sus vecinos.
Aun cuando no sean utilizadas, las rutas a todos
los destinos posibles se obtienen y mantienen en
cada uno de los nodos. Por su parte, en un protocolo reactivo, también conocidos como eventdriven, las rutas son buscadas, únicamente, cuando se necesitan. El proceso de descubrimiento de
ruta es iniciado por el origen y, si se encuentra
una ruta hacia el destino deseado, ésta se mantiene hasta que el destino deja de ser accesible. Los
protocolos proactivos tienen la ventaja de un menor retardo end-to-end porque las rutas deberían
estar disponibles al momento de necesitar establecer una conexión pero, tienen como desventaja,
que generan una mayor cantidad de tráfico para
mantener las tablas actualizadas, por lo que pueden presentar problemas de escalabilidad en redes
grandes. Por último, los protocolos híbridos combinan los méritos de estos dos tipos de protocolos
y, además, solucionan sus limitaciones.
                      19WICC 2010 - XII Workshop de Investigadores en Ciencias de la Computación
4. Trabajos Realizados
Para comenzar el estudio se realizaron
comparaciones de tres de los protocolos de
ruteo ad-hoc más utilizados. Los protocolos
seleccionados fueron Destination-Sequenced
Distance-Vector(DSDV) [4], Dynamic Source
Routing(DSR) [5][6] y Ad-hoc On-demand
Distance Vector(AODV) [7]. DSDV pertenece a
la familia de protocolo table-driven o proactivos;
DSR y AODV a la de event-driven o reactivos.
Estos dos últimos fueron escogidos porque presentan un funcionamiento totalmente diferente a
pesar de corresponder a la misma familia.
Para las pruebas se utilizó el simulador NS-2
[10]. Se generó un escenario de prueba, de
900x900 mts, en el cual se dispusieron, aleatoriamente, 90 nodos. Los nodos generaban tráfico
CBR (Constant Bit Rate). El tiempo total de
simulación fue de 900 segundos. Se realizaron
simulaciones con 3, 15, 25 y 40 conexiones. Por
cada una de estos escenarios, se fueron variando
los tiempos de pausa del desplazamiento de los
nodos. En total, se escogieron 7: 0 (en constante
movimiento), 25, 50, 100, 250, 500 y 900 (sin
movimiento). Los métricas que que se comparon
fueron: Packet Delivery Rate, Average Delal y
Routing Overhead. Existen otros trabajos previos
donde se realizaron pruebas de comparación
entre protocolos de ruteo ad-hoc [8][9]
De acuerdo a las pruebas realizadas, el resultado obtenido indica un mejor funcionamiento de
los protocolos de ruteo event-driven, o reactivos,
pero sin llegar a ser netamente superiores. En algunas simulaciones o métricas medidas, el protocolo proactivo obtuvo un mejor funcionamiento.
Independientemente del tipo de protocolo utilizado, el principal problema que presentan es la gran
cantidad de tráfico que generan para lograr su finalidad. Esto ocurre con mayor intensidad en los
protocolos proactivos (DSDV).
5. Objetivos
Nuestra línea de investigación consiste en
realizar mejoras a los protocolos de ruteo ad-hoc
analizados para lograr un mejor funcionamiento
de los mismos y, en consecuencia, de las aplicaciones que los utilizan.
En primer lugar, proponemos realizar modificaciones al protocolo de ruteo DSDV. Este
protocolo, que utiliza hop-count como métrica,
solamente almacena la mejor ruta aprendida a
cada destino posible. Cada vez que pierde la
ruta a un destino, tiene que empezar a buscar
una nueva ruta lo que provoca un incremento en
el delay de las comunicaciones. Si cada nodo
almacenase dos o más de las mejores rutas a cada
destino, estos tiempos podrían mejorarse.
Otra modificación a realizar, sin importar el tipo de protocolo utilizado, es proveer a estos protocolos de cierta calidad de servicio para que puedan determinar las rutas con cierta prioridad con
respecto a otro tipo de tráfico. El tráfico correspondiente a los protocolos de ruteo tendrá una
prioridad alta para que las rutas se puedan formar con mayor rapidez. Para esta modificación se
piensa en utilizar el estándar IEEE 802.11e que es
el que permite la utilización de Calidad de Servicio en redes wireless.
6. Trabajo Actual
Actualmente, estamos empezando a modificar
el código del protocolo DSDV con el fin de
implementar las modificaciones antes descriptas.
Para esto hacemos uso del simulador NS-2.34
[10]. Todos los protocolos seleccionados están
implementados en este simulador. Pensamos que
si se permite que el protocolo almacene dos, o
más, rutas posibles a un destino su tiempo de
respuesta podría disminuir.
Teniendo en cuenta que la cantidad de posibles
caminos alternativos entre dos extremos puede ser
muy grande es importante establecer un equilibrio entre el número de rutas almacenadas en memoria y la porción de memoria que este proceso
consume. Si, por ejemplo, los nodos se identifican mediante direcciones IPv6, las tablas de ruteo podrían consumir demasiada memoria almacenando una gran cantidad de rutas alternativas.
                      20WICC 2010 - XII Workshop de Investigadores en Ciencias de la Computación
Nosotros pensamos que con dos rutas como máximo para cada par de extremos es suficiente.
7. Formación de Recursos Humanos
Actualmente, un integrante del proyecto se encuentra en el estudio del código del protocolo
DSDV. Este trabajo se realiza en conjunto con integrantes del Departamento de Informática de la
Universidad de Minho, Portugal.
