Sistemas distribuidos de tiempo real
﻿
El objetivo de esta línea de investigación es el estudio y desarrollo de sistemas de software
que poseen restricciones temporales. Resulta de interés el estudio de diferentes
metodologías para la especificación y desarrollo de aplicaciones en tiempo real, así como
las plataformas donde dichas aplicaciones pueden ejecutarse.
Se trabaja experimentalmente con distintos tipos de hardware y software entre los que
pueden mencionarse placas A/D, mini-robots, máquinas multimicroprocesadores y
diferentes sistemas operativos.
Interesan especialmente las aplicaciones que involucren decisiones que van desde el
hardware a utilizar hasta la plataforma sobre la que correrá dicha aplicación.
Palabras Claves
Tiempo Real, Ingeniería de Software, Dispositivos  A/D, mini-Robots, RT-LINUX, QNX
                                                
1 Profesor Adjunto Dedicación Exclusiva. Fac. de Informática. UNLP. hramon@lidi.info.unlp.edu.ar
2 JTP Semidedicación. Fac. de Informática. UNLP. E-mail: fromero@lidi.info.unlp.edu.ar
3 Profesora Titular Dedicación Exclusiva. Fac. de Informática. UNLP. ppesado@lidi.info.unlp.edu.ar
4 Profesor Adjunto Dedicación Exclusiva. Fac. de Informática. UNLP. pbertone@lidi.info.unlp.edu.ar
5 Profesor Adjunto Semidedicación. Fac. de Informática. UNLP. mboraccia@lidi.info.unlp.edu.ar
6 JTP Semidedicación. Fac. de Informática. UNLP. pthomas@lidi.info.unlp.edu.ar
7 JTP Semidedicación. Fac. de Informática. UNLP. sesponda@lidi.info.unlp.edu.ar
8 Calle 50 y 115 1er Piso, (1900) La Plata, Argentina, TE/Fax +(54) (221) 422-7707. http://lidi.info.unlp.edu.ar
Introducción
Los sistemas de tiempo real (STR)  y los sistemas distribuidos de tiempo Real (SDTR) son
sistemas de tiempo crítico, es decir, se trata de aplicaciones para las cuales el tiempo en que
se produce la respuesta  es un requerimiento esencial.
Por lo general, un  STR o SDTR incluye un conjunto de dispositivos independientes
(hardware y software) que operan a diferentes velocidades.
Deben satisfacer requerimientos de performance. Comparando con un sistema tradicional,
se debe tener especial control sobre la  utilización de recursos, mejora en los tiempos de
respuesta y manejo de distintas prioridades.
Existen algunas diferencias importantes entre un sistema de software tradicional y uno de
tiempo real:
• Control de dispositivos externos.
• Procesamiento de mensajes que pueden llegar en intervalos irregulares.
• Detección y control de  condiciones de falla.
• Modelización de condiciones concurrentes.
• Alocación y control de procesos concurrentes.
• Manejo las comunicaciones entre procesos.
• Protección de datos compartidos.
• Manejo de requerimientos de tiempos y performance.
• Testeo y debug de procesos concurrentes.
• Diseño de simuladores del hardware que no se encuentra disponible durante la fase
de pruebas.
• Selección del hardware adecuado para soportar el diseño del software.
• Distribución  de tareas.
Se espera que un STR se ejecute en forma continua, automática y segura, teniendo un
impacto en los costos de desarrollo y la seguridad.
En particular nos interesan las aplicaciones industriales, caracterizadas por la distribución y
el control del tiempo.
Calramente un STR tiene que emplear herramientas de desarrollo y modelado diferentes a
las utilizadas en el desarrollo de software tradicional que es la temática correspondiente a
los temas del  Subproyecto 2 del III-LIDI en relación a la Ingeniería de Software de
Sistemas Distribuidos y Sistemas Distribuidos en Tiempo Real.
Líneas de Investigación y Desarrollo
Se plantea 6 temas de estudio:
• Análisis de plataformas para desarrollo de aplicaciones de Tiempo Real
• Ingeniería de Software orientada a Tiempo Real
• Dispositivos de Tiempo Real
• Robótica
• Migración de datos y procesos en ambiente distribuidos de Tiempo Real.
• Políticas de scheduling en SDTR
Resultados Obtenidos/Esperados
• Se ha estudiado RT-Linux, explorando sus posibilidades para el desarrollo de
aplicaciones distribuidas en tiempo real, realizando ejemplos concretos.
• Se han realizado benchamark sobre sistemas operativos tradicionales para evaluar la
posibilidad de ejecutar sistemas con restricciones blandas.
• Se han investigado las Estrategias en Planificadores y su impacto en los sistemas en
STR.
• Se han realizado experiencia reales en RT-Linux y QNX: en cuanto al desarrollo de
aplicaciones, análisis de sobrecarga y planificadores.
• Testing orientado a aplicaciones distribuidas en tiempo real [BEIZER 1999].
• Modelización con UML para sistemas complejos de tiempo real [DOUGLASS
2000].
• Definición de benchmark para evaluación de RTOS.
• Manejo de un robot empleando lógica difusa.
• Ampliación de capacidad de procesamiento del robot por empleo del PIC MPS 430.
•  Uso de simuladores de robots (Kephera).
• Utilización de MathLab en aplicaciones de control en Tiempo Real.
• Estudios sobre replicación y consistencia, tolerancia a fallos, migración de datos y
procesos en bases de datos distribuidas.
Formación de Recursos Humanos
Se encuentran en desarrollo tres tesis de postgrado en temas relacionados a Elicitación de
Requrimientos, commit y actualización de réplicas en bases de datos distribuidas y
aplicaciones robóticas.
