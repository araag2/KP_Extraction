Algoritmos evolutivos y su aplicabilidad en la tarea de clasificación
﻿
En este artículo se describe en forma breve una 
de las líneas de investigación que se están llevando a cabo 
en el Laboratorio de Tecnologías Emergentes (LabTEm) 
sobre Algoritmos Evolutivos y su aplicabilidad como 
técnica alternativa y/o complementario en tareas de 
Minería de Datos, especificamente clasificación. 
Factores como el avance tecnológico asociado al 
continuo abaratamiento de los costos, hace que los 
volumenes de datos almacenados crezca 
exponencialmente. En la actualidad, estamos en una etapa 
en la que no es fácil visualizar e interpretar los datos que 
están almacenados. Existen muchos dominios en los 
cuales la acumulación de datos es altísima y por 
consiguiente se hace cada vez más difícil poder obetener 
información relevante para la toma de decisiones basadas 
en dichos datos. 
La tarea de Minería de Datos implica ''escabar'' 
en esa inmensidad de datos, en búsqueda de patrones, 
asociaciones o predicciones que permitan transformar esa 
maraña de datos en información útil. En particular esta 
línea de investigación aplicará Algoritmos Evolutivos en 
la de la tarea de clasificación.  
 
1. Introducción 
 
En los últimos años, ha existido un gran 
crecimiento en nuestras capacidades de generar y colectar 
datos, debido básicamente al gran poder de procesamiento 
de las máquinas y a su bajo costo de almacenamiento. Sin 
embargo, dentro de estas enormes masas de datos existe 
una gran cantidad de información "oculta", de gran 
importancia estratégica, a la que no se puede acceder por 
las técnicas clásicas de recuperación de la información. 
En [1] se define la minería de datos como el 
proceso de extraer conocimiento útil y comprensible, 
previamente desconocido, desde grandes cantidades de 
datos almacenados en distintos formatos. Esta tarea no 
siempre parte de un conocimiento previo de lo que se 
busca en el conjunto de datos disponibles, por el contrario, 
es muy frecuente que no sepamos de antemano lo que se 
busca. Es decir, se realiza una búsqueda de patrones 
desconociendo aquel que pueda surgir. 
La minería de datos tiene dos grandes retos: por 
un lado, trabajar con grandes volúmenes de datos, 
procedentes principalmente de sistemas de información, 
con los problemas que esto conlleva  (ruido, datos 
ausentes, intratabilidad, volatilidad de los datos, entre 
otras cosas) y por otro lado, usar técnicas adecuadas para 
analizar los mismos y extraer conocimiento novedoso y 
útil. La minería de datos consiste principalmente de dos 
pasos, pre-procesamiento de datos, durante el cual las 
características o atributos relevantes se extraen de los 
datos, y reconocimiento en estas características de 
patrones no triviales de información útil.  
El pre-procesamiento de los datos es una tarea 
crítica y consume mucho tiempo. Para asegurar el éxito 
del proceso de minería de datos, es importante que las 
características extraídas sean relevantes al problema y 
representativas de los datos. Dependiendo del tipo de 
datos que esta siendo minado, la actividad de preprocesamiento puede requerir varias sub-actividades. Si la 
cantidad de datos en muy grande, se puede tomar una 
muestra y realizar el trabajo con menos instancias. Se 
elimina el ruido en los datos y se extraen las características 
relevantes. A veces los datos provienen de diversas 
fuentes y se requiere una fusión de los mismos para que 
puedan ser minados. Al finalizar esta actividad, se tiene un 
vector de características para cada instancia de datos. 
Dependiendo del problema y de los datos, puede ser 
necesario reducir el número de características usando 
selección de características o técnicas de reducción de la 
dimensión. Luego que esta actividad de pre-procesamiento 
ha finalizado, los datos están preparados para detectar los 
patrones través del uso de algoritmos que llevan a cabo 
alguna de las siguientes tareas: clasificación, clustering, 
regresión, etc.  
Por lo anteriormente expuesto es importante 
diferenciar en la minería de datos, el tipo de tareas que se 
suelen abordar y las técnicas utilizadas en cada caso. 
Como ejemplos de tareas generales se pueden mencionar 
el aprendizaje de conceptos, clasificación, categorización, 
regresión, agrupamiento (o clustering), correlaciones y 
análisis de asociación. Estas tareas pueden ser abordadas 
mediante distintos métodos o técnicas que suelen 
adaptarse mejor de acuerdo a la tarea sobre la cual se 
trabajará. Entre las técnicas más conocidas se puede 
mencionar el aprendizaje de reglas de clasificación, reglas 
de asociación, reglas relacionales, reglas difusas, árboles 
de decisión (y regresión), ecuaciones de regresión, redes 
neuronales, metaheurísticas, etc. 
Los Algoritmos Evolutivos (AEs) son 
metaheurísticas que emplean modelos computacionales 
del proceso evolutivo. Existen una gran variedad de AEs, 
los principales incluyen: Algoritmos Genéticos [2,3], 
Programación Evolutiva [4,5], Estrategias Evolutivas [6,7] 
y Programación Genética [8]. Todos estos algoritmos 
comparten un concepto base común que es simular la 
evolución de los individuos que forman la población 
usando un conjunto de operadores predefinidos. 
Comúnmente se usan dos tipos de operadores: de 
selección y de búsqueda. Los operadores de búsqueda más 
usados son la mutación y la recombinación. 
El operador de selección depende 
principalmente de la medida percibida de la aptitud 
(fitness) de cada individuo y da fuerza a la selección 
natural y a la supervivencia del que más se ajusta. Los 
operadores de recombinación y mutación perturban en 
forma estocástica a los individuos proveyendo eficiencia 
en la exploración del espacio de búsqueda. Esta 
perturbación se controla principalmente por el usuario que 
define el porcentaje de recombinación y el de mutación. 
Aunque simplista del punto de vista de un biólogo, estos 
algoritmos son lo suficientemente complejos para 
proporcionar mecanismos de búsqueda robustos y 
poderosos y han mostrado su fuerza resolviendo duros 
problemas de optimización.   
Los AEs son una de las metaheurísticas más 
difundidas en la actualidad. Los mismos están siendo 
usados para resolver una gran variedad de problemas del 
mundo real, entre estos problemas, se encuentra el desafío 
de la minería de datos. 
En relación al uso de AEs en minería de datos, 
en [9,10], Cantú Paz et al. [11] y [12] se describen algunas 
de las aplicaciones más importantes de esta técnica en las 
distintas etapas de la extracción de conocimiento. 
Particularizando en actividades recientes trabajos como 
[13,14] utilizan a los algoritmos evolutivos en la selección 
de características, en clasificación [15,16,17,18,19,20] y 
en clustering [21,22, 23]. 
 
2. Algoritmos Evolutivos en la tarea 
de clasificación 
 
En AEs hay dos maneras principales de 
representar conjuntos de reglas. En el enfoque de 
“Michigan” [24, 25], cada individuo en la población 
representa una regla de longitud fija, y la población entera 
representa el objetivo. En contraste, en el enfoque de 
“Pittsburgh” [26,27,28], cada individuo de tamaño 
variable representa un conjunto entero de reglas. Las dos 
representaciones tienen sus méritos e inconvenientes y se 
han usado con éxito en sistemas clasificadores que son 
sistemas basados en reglas que combinan refuerzo de 
aprendizaje y algoritmos evolutivos. 
Existen trabajos en los que se discute el uso de 
algoritmos evolutivos, particularmente, algoritmos 
genéticos y la programación genética, en minería de datos 
y descubrimiento de conocimiento enfocándose en la tarea 
de clasificación [10]. En particular, se estudia cómo la 
representación de los individuos, los operadores genéticos 
y la función de aptitud tienen que ser adaptados para 
extraer conocimiento de alto nivel de los datos. 
Otros enfoques se basan en programación 
genética para generar prototipos en un problema de 
clasificación [15]. En este contexto, el conjunto de 
prototipos con los cuales se puede determinar el origen de 
las muestras de un conjunto de datos, se codifica con un 
multiárbol, es decir un conjunto de árboles, que 
representan el cromosoma. A diferencia de otros enfoques, 
los cromosomas son de longitud variable y esto permite 
tratar aquellos problemas de clasificación en los cuales 
una o más clases tienen subclases. 
Se ha desarrollo una estructura para un 
clasificador basado en reglas difusas genéticas. Primero, el 
problema de clasificación se divide en varios problemas de 
dos clases siguiendo el esquema de binarización de clases 
difusa. Luego se evoluciona la regla difusa para las dos 
clases de problemas usando el enfoque de aprendizaje 
interactivo Michigan, y finalmente las reglas 
evolucionadas se integran usando el esquema de 
binarización de clases difuso [16].  
Los algoritmos genéticos y las redes neuronales 
artificiales (ANNs) se han usado juntas para entrenar o 
ayudar en el entrenamiento de las redes, para buscar los 
pesos de la red, para buscar los parámetros de aprendizaje 
apropiados, para reducir el tamaño del conjunto de 
entrenamiento seleccionando las características más 
pertinentes o para diseñar la estructura de la red 
[29,30,31]. Entrenar una ANN es una tarea de 
optimización con la meta de encontrar un conjunto de  
pesos que minimizan alguna medida de error. El espacio 
de búsqueda tiene muchas  dimensiones y es probable que 
contenga óptimos locales múltiples. Los AEs evitan 
quedar atrapados en un óptimo local  probando 
simultáneamente las regiones múltiples del espacio. 
Algunos algoritmos comienzan con una población 
aleatoria y usan los pesos encontrados por el AE en la red 
sin ningún refinamiento [32, 33, 34]. Otros usan 
backpropagation u otros métodos para refinar los pesos 
encontrados por el AE [35,36]. La motivación para este 
enfoque es que los AEs rápidamente identifican regiones 
prometedoras del espacio de búsqueda, pero no adecuan 
los parámetros muy rápidamente. Así que, se usa AEs para 
encontrar un prometedor conjunto inicial de pesos desde el 
cual un método basado en el gradiente puede alcanzar 
rápidamente un óptimo. En otros casos los algoritmos 
refinan los resultados encontrados por un algoritmo de 
aprendizaje NN. Aunque los AEs no refinan las soluciones 
muy rápido, ha habido algunos intentos de mejorar la 
población inicial del AE con soluciones encontradas con 
backpropagation [37]. 
Además, ciertos enfoques usan AEs para diseñar 
la topología de una ANN: usando una codificación directa 
para especificar cada conexión de la red o evolucionando 
una especificación indirecta de la conectividad. 
La idea importante detrás de las codificaciones 
directas es que una red neuronal puede considerarse como 
un grafo dirigido dónde cada nodo representa una neurona 
y cada arco  es una conexión. Un método común de 
representar grafos dirigidos es una matriz binaria de 
conectividad. La matriz de conectividad  puede ser 
fácilmente representada en el AE y varios trabajos han 
usado este enfoque con éxito [38, 39]. Usando este método 
se mostró que el AE podría encontrar topologías que 
aprenden más rápidamente que la red típica totalmente 
conectada [40]. 
Un enfoque para representaciones indirectas es 
usar una gramática para codificar reglas que gobiernan el 
desarrollo de una red. En [41] se introdujo el enfoque 
basado en la gramática más temprana. Otro ejemplo de un 
sistema de desarrollo basado en gramática [42] donde cada 
individuo contiene las reglas para un sistema Lindenmayer 
( sistema-L), que son cadenas paralelas  que rescriben las 
gramáticas (cada regla aplicable se usa en cada paso de la 
derivación). Los sistemas-L se han usado para modelar el 
desarrollo de organismos vivientes. Para evaluar la 
aptitud, el sistema usa reglas del sistema-L para generar 
una cadena que representa la estructura de una red 
neuronal. Luego, la red se entrena usando backpropagation 
y la aptitud se determina por la combinación de la 
exactitud de las clasificaciones en el entrenamiento y el 
conjunto de prueba. 
Los árboles de decisión son también métodos de 
clasificación populares. Debido a que la programación 
genética tradicionalmente usa árboles para representar las 
soluciones se presenta un ejemplo de Programación 
Genética (PG) en clasificación dónde la aptitud de cada 
árbol de decisión esta basado en la exactitud del conjunto 
de entrenamiento [43]. Luego se extendió la medida de 
aptitud para incluir términos relacionados al tamaño del 
árbol, y se determino que la PG podría encontrar árboles 
pequeños comparables en exactitud a aquéllos encontrados 
por C4.5 para algunos casos de prueba [44]. Otros 
enfoques usan la PG tradicional complementándola con un 
método de selección multi-objetivo que intenta minimizar 
simultáneamente el tamaño del árbol y los errores de la 
clasificación [45].  
En [46] se presentó un algoritmo evolutivo 
interactivo que permite al usuario evaluar combinaciones 
de atributos que describen los datos. El objetivo del 
sistema es encontrar nuevas variables que pueden describir 
los datos concisamente y para luego utilizarse en un 
algoritmo de la clasificación tradicional. Cada individuo 
en el algoritmo usa dos árboles de PG para representar 
nuevas variables que son una transformación de los 
atributos originales. Las dos nuevas variables pueden 
considerarse nuevos ejes en que el conjunto de 
entrenamiento se proyecta y se muestra el resultado. 
Todos los individuos se procesan de esta manera y se 
presentan al usuario que decide qué proyecciones 
muestran algunas estructuras interesantes. Los individuos 
seleccionados pasan por crossover y mutación, y el ciclo 
se repite. 
Actualmente algunos trabajos utilizan 
clasificadores SVM (Support Vector Machine) y en [19] se 
propone un modelo para combinar múltiples clasificadores 
SVM. Realizar la combinación de multiples clasificadores 
es una forma natural de descubrir información útil y así 
mejorar la performance de los clasificadores individuales. 
Uno de los desafíos de la clasificación de datos 
de microarray es seleccionar un número mínimo de genes 
relevantes que puedan maximizar la exactitud de la 
clasificación. Se han propuesto varios métodos de 
selección de genes así como sus correspondientes 
clasificadores. Uno de los métodos de análisis existente es 
un enfoque híbrido basado en un algoritmo genético y la 
probabilidad de clasificación máxima (GA/MLHD). Se 
utiliza un algoritmo genético inteligente (IGA) que usa 
control de los genes y una función de fitness mejorada. 
Esto permite determinar el número mínimo de genes 
relevantes e identificar estos genes, mientras 
simultáneamente se maximiza la exactitud en la 
clasificación, la robustez de los genes seleccionados y la 
exactitud, especialmente para el conjunto de datos que 
tienen numerosas categorías y un gran número de genes de 
prueba en su interior [21]. 
La clasificación de los datos del microarray ha 
surgido como un tema importante en el transcurso de esta 
última década. Para varios métodos de selección de 
características y clasificadores, es muy dificultoso 
encontrar un método perfecto para clasificar los datos en 
el microarray en [17] se propone un algoritmo genético 
especializado para obtener en un tiempo razonable 
diversos ensambles de características y clasificadores. Los 
experimentos han demostrado que el método propuesto 
encuentra varios ensambles buenos que son superiores a 
los que se encuentran con clasificadores individuales. 
Recientemente se ha utilizado Programación 
genética para la clasificación supervisada [20]. Se presenta 
un método supervisado de clasificación de patrones de 
proteoma cinético basado en programación genética que 
permite la extracción de patrones definidos por el usuario 
de una base de datos de perfiles cinéticos. El método 
combina la robustez del algoritmo de programación 
genética con la flexibilidad dada por la interacción del 
usuario. 
 
3. Línea de Investigación 
 
En los últimos años nuestro grupo de 
investigación se enfocó en el desarrollo y conocimiento de 
los diferentes enfoques relacionados al campo de la 
inteligencia computacional, en particular al de 
computación evolutiva [47, 48, 49, 50]. Simultáneamente, 
ha surgido un gran número de enfoques metaheurísticos, 
muchos de ellos bio-inspirados, los que a pesar ciertas de 
diferencias conceptuales en su diseño, comparten muchos 
aspectos que permiten entre otras cosas: a) aplicar 
conceptos que originalmente fueran diseñados para otra 
heurística o metaheurística con el objetivo de lograr 
mejoras substanciales, b) diseñar enfoques híbridos que 
aprovechen las ventajas relativas de cada enfoque 
involucrado, c) incorporar criterios de búsqueda más 
avanzados. 
Por esta razón una de las líneas de investigación 
en el proyecto es la aplicabilidad de metaheurísticas como 
enfoque alternativo y/o complementario en tareas de 
minería de datos, específicamente en clasificación. 
La presente propuesta tiene por objetivo 
desarrollar técnicas avanzadas o mejoradas de minería de 
datos basadas en el enfoque evolutivo. Las técnicas 
derivadas estarán dirigidas a tareas de clasificación 
supervisada y aplicadas sobre distintos problemas del 
mundo real. La calidad de dichas técnicas será contrastada 
con técnicas existentes. 
 
