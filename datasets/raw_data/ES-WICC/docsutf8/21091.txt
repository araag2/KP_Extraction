Comunicación grupal para agentes móviles
﻿
En los sistemas de agentes móviles, la capacidad de comunicación entre los agentes y con la aplicación que les da 
origen resulta indispensable, principalmente para la interacción entre los agentes, a efectos de mejorar la performance 
de la aplicación, y para actividades  de managment sobre los mismos. En estos casos, se hace necesaria la capacidad de 
comunicación grupal o multicast, que permite la transferencia de información de un agente o de la aplicación a varios 
agentes  identificados como integrantes de un grupo . Si bien la mayoría de los sistemas de agentes móviles ofrecen 
comunicación grupal a través de la conformación de grupos y envío de información al grupo, ésta se limita 
generalmente a entornos de red local o a aplicaciones que cubriendo mayores áreas, involucran a una pequeña cantidad 
de agentes. En casos de aplicaciones con grandes cantidades de agentes cubriendo áreas extensas de la Internet, los 
mecanismos adoptados (transmisiones individuales o uso de broadcast)  no resultan escalables Se hace necesario contar 
entonces con soportes de comunicación grupal que sustenten esta capacidad ofrecida por los sistemas de agentes 
móviles. 
En el presente trabajo se presenta el estado actual de implementación de un sistema de agentes móviles simple de 
utilizar, cuyo objetivo es servir de banco de pruebas a módulos que soporten funciones necesarias para la comunicación 
grupal entre los agentes, tales como chequeo de red y comunicación multicast, Este sistema soporta aplicaciones de 
agentes móviles, permitiendo a su vez la incorporación y análisis de heurísticas para armado y mantenimiento de 
árboles de distribución multicast. 
 
 
1. Introducción y objetivo del desarrollo 
En las aplicaciones de agentes móviles, un agente o conjunto de agentes generados 
inicialmente se traslada de un servidor a otro posiblemente generando copias (clones) de ellos 
mismos para llevar a cabo las funciones necesarias para cumplir con su objetivo.  
Una de las características salientes de dichos sistemas, es que al migrar los agentes a los 
lugares donde se encuentra la información a procesar, evitan la carga en la red y la demora 
resultantes de transferir volúmenes importantes de datos sobre los que deben operar. Sin embargo, 
esto no significa que se eliminen las necesidades de comunicación. Además de la comunicación 
necesaria para el proceso de migración, debe considerarse la producida por las interacciones entre la 
aplicación de origen y los agentes, y de estos entre sí. Por ejemplo para managment en el primer 
caso, y para la comunicación de un agente a los demás de resultados parciales obtenidos, a efectos 
de mejorar la performance de la aplicación. 
En ambos casos, los destinatarios de la información son la totalidad o grupos de agentes, 
característica que hace que adquiera importancia el concepto de comunicación grupal (uno a varios) 
en los sistemas de agentes móviles.  
Sin embargo, si bien estos sistemas ofrecen facilidades de comunicación grupal a alto nivel a 
través o de la confornación de grupos y del envío de mensajes a estos grupos, existe un vacío entre 
esta facilidad ofrecida y la comunicación real a llevarse a cabo en la red: las alternativas empleadas 
para concretar la comunicación grupal son en general, utilizar transmisión broadcast en la red local, 
que no es escalable a grandes áreas de la Internet, o realizar transmisiones individuales a cada 
miembro del grupo, que no escala a aplicaciones con gran número de agentes. 
Una tercera alternativa, que en principio resultaría la más natural y eficiente, es el uso de las 
facilidades multicast provistas por el nivel de red Estas consisten en el soporte provisto por los 
routers al tráfico grupal, principalmente la construcción y mantenimiento de árboles de distribución 
que permiten que la información emitida por un nodo a un grupo, sea enviada a todos los 
integrantes del mismo. Sin embargo, para implementar este tipo de facilidades, los routers deben ser 
configurados explícitamente, requiriendo protocolos específicos y consumiendo recursos de proceso 
y ancho de banda. Pese a que la transmis1ión multicast nativa en la Internet data de 1989 [Deering, 
1989], aun no se ha extendido a grandes áreas de la red, contándose con una red virtual de prueba 
(MBONE) [Savetz, 1998] que tampoco ha logrado extenderse a la totalidad de la Internet. Otro 
problema grave que presenta este soporte, es el uso de protocolo UDP, no confiable, lo que hace 
que sea costoso proveer transmisión confiable a las aplicaciones., En realidad, para proveer 
confiabilidad a las aplicaciones, debe implementarse un nivel denominado multicast confiable, que 
corre sobre UDP.[1], requerimiento de suma importancia en el tipo de aplicación que nos ocupa. 
Para una caracterización de los requerimientos de este tipo de aplicaciones, ver [Rigotti, 2003], 
[Rigotti, 2004]. 
 
Debido a los inconvenientes que presentan las soluciones mencionadas, se ha recurrido a 
una alternativa que consiste en la implementación de multicast en un nivel superior a IP, residente 
en los hosts [Janotti, 2000] [Chu, 2000] [Castro, 2002].. Si bien esta alternativa resulta ventajosa 
desde el punto de vista de la flexibilidad en la provisión de servicios, su facilidad de 
implementación y su extendibilidad en la red, debe tenerse en cuenta la eficiencia de los árboles 
multicast construidos, ya que los equipos finales no disponen en principio de la información 
topológica necesaria. 
 
El objetivo de este trabajo es desarrollar un sistema de soporte para agentes móviles muy 
simple en sus funciones y sencillo de utilizar, que permita la implementación de diferentes sistemas 
de agentes móviles con el fin de comprobar su funcionamiento.  
En particular, este soporte contempla (y esta orientado por el momento exclusivamente a ese 
objetivo) el desarrollo de facilidades de comunicación multicast ofrecidas a los agentes móviles..  
De esta manera, es posible desarrollar diferentes alternativas de soporte multicast a los 
agentes móviles, e incluirlas en el sistema de soporte, lo cual permite luego comprobar su 
funcionamiento en casos reales (acotados desde ya por la cantidad de equipos que es posible utilizar 
en una aplicación real –no simulada-). La comprobación a través de simulación, serviría para 
verificar y extrapolar los resultados obtenidos en el caso real, a escenarios con grandes cantidades 
de agentes dispersos en toda la Internet. 
Para no tener que realizar dos implementaciones diferentes del soporte multicast y de la 
aplicación, uno para la implementación del sistema real y otro para la simulación, se contempla la 
posibilidad  de utilizar Java Network Simulator [JNS], en la medida en que sea posible un traslado 
relativamente sencillo de la aplicación real a la simulada.. 
 
2. Componenetes y estructura del sistema 
Los componentes principales del desarrollo en curso son los servidores de agentes móviles 
cuyo objeto es soportar agentes y módulos. El fin los módulos es agregar funcionalidad a los 
servidores, mientras que los agentes móviles, producen la actividad necesaria para chequear el 
comportamiento y performance de las heurísticas implementadas en los módulos 
 
El servidor está siendo desarrollado en Java, utilizándose Swing para la interfaz gráfica. 
Debido a que el objetivo es la simplicidad y facilidad de uso a la hora de desarrollar agentes 
múviles de chequeo y módulos de comunicación multicast que implementen diferentes heurísticas, 
su funcionalidad abarca aspectos limitados.  
Los servidores de agentes móviles se identifican a través de su dirección IP y el puerto de 
escucha para atender solicitudes de servidores remotos. Esto permite que sea posible instalar mas de 
                                                 
1 En realidad, para proveer confiabilidad a las aplicaciones, debe implementarse un nivel denominado multicast 
confiable, que corre sobre UDP 
un servidor en un host (en máquinas virtuales java separadas) para facilitar las pruebas, tanto del 
sistema como de los módulos a agregar. 
Las características salientes de los servidores, son las facilidades ofrecidas a los agentes, su 
capacidad de incorporar módulos que agreguen funcionalidad adicional, como por ejemplo 
multicast (el objetivo principal de este trabajo), y su interfaz grafica orientada al debugging de 
dichos módulos.  
 
Las facilidades que se le ofrecen a los agentes moviles son  migración entre servidores, en la 
cual el agente debe especificar la identificación única del servidor destino, la clonación y envío de 
mensajes unicast a otros agentes, caso en que el agente debe especificar la ubicación del destino, 
compuesta de la identificación única del servidor actual del agente y la identificación única del 
agente. Dos funciones adicionales que están previstas, son el envío de mensajes multicast (en el 
caso de que se encuentre operativo un modulo multicast) y el envío de información unicast a un 
agente destino especificando sólo su identificación única (en el caso en que se encuentre operativo 
un modulo de localización de agentes),. 
 
Los módulos son objetos que se registran con el servidor de agentes y cumplen con una 
función determinada. El servidor les provee un canal de comunicación con sus pares en otros 
equipos y acceso a otros módulos locales que prestan colaboración, por ejemplo un módulo 
multicast encargado de la construcción del árbol multicast, puede consultar, si esta disponible, a un 
modulo de chequeo de red, quien informara sobre diferentes características de la red (demoras, etc) 
que posibilitaran que el primero construya el árbol en base a esa información. Debe remarcarse que 
un primer objetivo de este trabajo es la evaluación de diferentes heurísticas de construcción y 
mantenimiento de árboles multicast, implementadas en respectivos módulos. Posiblemente se 
requiera además la implementación del módulo de chequeo de red ya mencionado.. 
 
La interfaz, gráfica, desarrollada con Swing, tiene como objetivo que el usuario pueda 
visualizar información relativa al estado del servidor y de los agentes, tal como agentes atendidos 
por el servidor, servidores adyacentes (desde el punto de vista del árbol multicast), etc. 
Adicionalmente, permite ejecutar comandos dirigidos al servidor, siendo los principales las 
operaciones con agentes (generación, clonado, migración y eliminación), y las relativas a 
conectividad con otros servidores (conectarse y desconectarse de un servidor remoto). Permite 
además, invocar la interfaz gráfica de los agentes que residen en el servidor, siempre que éstos 
tengan dicha capacidad. 
 
Los agentes móviles son objetos capaces de desplazarse de un servidor a otro, para lo cual 
ofrecen una interfaz simple, con las funciones necesarias para dicho objetivo. Se está desarrollando 
un agente simple genérico, que no posee más funcionalidad que la mencionada, presentando además 
una interfaz gráfica que permite visualizar su estado en el host donde se encuentra e introducir 
comandos. Estos se refieren a funcionalidad tal como migración y clonación, pudiendo agregarse 
aquellos relativos a la aplicación que ejecutan. 
 
 
 
La estructura del servidor se muestra en la figura 1. El nivel inferior, constituido por el 
soporte de comunicaciones ofrecido por TCP y accedido a traves de Sockets, provee el 
establecimiento y finalizacion de conexiones entre los servidores. En el caso en que no se utilice 
soporte multicast, estas conexiones sólo se mantienen el tiempo necesario para que se lleve a cabo 
la función para la que fueron establecidas (por ejemplo, transferir un agente). En Casio de utilizar 
multicast, los nodos adyacentes en el árbol (no necesariamente adyacentes desde el punnto de vista 
de la topología de la red), mantienen estas conexiones mientras dure tal relación. 
En un nivel intermedio podemos distinguir la funcion del servidor de agentes, que incluye el 
manejo de conexiones y multicast (y otras posibles funciones), mientras que en el nivel supoerior se 
encuentran los agentes móviles. 
 
Como puede observarse, existe un módulo encargado de recibir solicitudes de conexión por 
parte de servidores remotos;. una vez aceptada la conexión a nivel socket, lo notifica al 
administrador de conexiones, quien se encarga de generar un thread que implementa el protocolo 
entre los servidores. De manera similar, el administrador de conexiones genera un thread por cada 
requerimiento local (originado en el servidor de agentes) para establecer una conexión remota.  
Este módulo, actúa como proxy del servidor remoto,  implementando una interfaz que 
permite que el servidor local invoque de manera transparente a un servidor remoto. Puede 
observarse también el móduko multicast, que interactúa sólo con el servidor, quien le provee 
comunicación remota con sus módulos pares, y local con otros módulos con funciones 
complementarias.   
Soporte de comunicaciones. TCP 
Administrador de 
conexiones con 
servidores adyacentes 
Receptor de 
conexiones entrantes 
protocolo Server-server 
Modulo multicast 
Servidor de agentes 
Agente móvil 
Interfaz 
grafica 
Interfaz 
grafica 
Fig. 1. Estructura del servidor 
El soporte de comunicaciones es TCP, lo que permitirá ofrecer un servicio confiable a la 
aplicación sin incurrir en excesivo consumo de recursos y una complejidad no deseada en el 
servidor. 
 
3. Conclusión 
Se ha presentado un trabajo en desarrollo, que consiste en la implementación de un servidor 
de agentes móviles, limitado en su funcionalidad, cuyo objetivo es permitir la implementación y 
testeo de heurísticas para construcción de árboles multyicast. Si bien dichas heurísticas se podrán 
probar en escenarios reales, es importante contar con un soporte similar de simulación para probar 
su escalabilidad. Por este motivo, se está evaluando la posibilidad de integrar al proyecto un 
servidor de agentes con idéntica funcionalidad implementado en Java Network Simulator [JNS].. 
Debe destacarse que si bien el objetivo primario del proyecto es la construcción de árboles 
multicast, el mismo prevé incorporar otros módulos en el futuro, tales como chequeo del estado de 
la red, función de localización de agentes y módulo de transmisión confiable. 
 
4.
