Una solución multiparadigma para el desarrollo de software
﻿
La línea de investigación orientada al desarrollo multiparadigma se enmarca dentro del
proyecto de investigación ”Técnicas Avanzadas
y Análisis para el Desarrollo Multiparadigma”
2. Resumen
En el proceso de desarrollo de software, es
necesario ser capaces de identificar la naturaleza del problema a resolver para elegir las
herramientas y técnicas que mejor se adapten
a la situación, y den respuesta a la naturaleza
multidimensional de los problemas de software
complejos. Una aproximación multiparadigma
parece ser lo opción indicada teniendo en cuenta que usualmente un único paradigma no alcanza en el dominio del problema a resolver. Nuestro objetivo es establecer modelos, procesos y
técnicas para mejorar el desarrollo de sistemas
en un ambiente multiparadigma.
Palabras clave: Programación multiparadigma,
Lenguajes de Programación, Abstracción, Dominios complejos.
3. Introducción
Un producto de software está compuesto
de un número importante de diversos artefactos que representan porciones diferentes
del software, obtenidos a lo largo del proceso
de desarrollo (requerimientos, especificación,
diseño, código fuente, casos de testeo, etc.).
Los sistemas de software evolucionan en el
tiempo, y a medida que el software cambia y
crece, todos los artefactos que lo componen
evolucionan a su vez, en diferentes formas.
Los problemas que representan las aplicaciones de software son usualmente complejos,
y tienen una naturaleza multidimensional. Los
desarrolladores tienden a pensar de formas
diferentes dependiendo de la naturaleza del
problema que les toca resolver. Asimismo
es importante lograr los resultados esperados,
en el tiempo esperado y con la calidad esperada.
1
                      536WICC 2010 - XII Workshop de Investigadores en Ciencias de la Computación
En este contexto es importante aplicar las
técnicas y prácticas mas apropiadas para el
problema a resolver. Y aquí las abstracciones
juegan un rol principal, enfocándose en la
esencia del problema y excluyendo los detalles,
analizando concordancias y diferencias. La
abstracción es una herramienta clave del diseño
de software que permite tratar la creciente
complejidad de los sitemas informáticos.
La mayoría de los paradigmas de software
están arraigados en un modelo clásico de
abstracción basado en categorias formadas
por propiedades comunes. Para analizar mas
allá de este modelo, es necesario mostrar que
algunos dominios del mundo real no responden
estrictamente al modelo clasico, sino mas
bien, que la combinación de características de
diferentes paradigmas dentro de un dominio es
la vía adecuada para representar problemas y
soluciones de dominios reales y alcanzar metas
mas altas de independencia de desarrollo y
capacidad de mantenimiento [12].
El paradigma orientado a objetos brinda una
poderosa herramienta para capturar las abstracciones de muchos dominios de aplicación,
presentando una forma natural de mdularizar
una aplicación. Sin embargo ningún paradigma
es capaz de resolver todos los problemas de forma sencilla y eficiente, por lo tanto es útil poder
elegir entre distintas técnicas de programación
dependiendo del tipo de problema [10, 6].
En este escenario el desarrollo multiparadigma tiene como principal objetivo proveer
al programador con un conjunto variado de
herramientas de manera que cuando enfrente
un problema no se vea forzado a utilizar una
única técnica de programación, sino que tenga
la libertad de seleccionar la técnica de solución
que mejor se adapte a las características del
problema a resolver.
Pero, ¿qué es un paradigma?. En tecnologías
de software un paradigma representa las directivas para crear abstracciones. El paradigma es
el principio por el cual un problema puede ser
comprendido y descompuesto en componentes
manejables. En particular un paradigma de
programación es el modo de conceptualizar lo
que significa realizar una computación y cómo
las tareas a llevarse a cabo sobre una computadora deben ser estructuradas y organizadas. El
lenguaje en el cual un programador piensa un
problema influirá en modo básico fundamental
la forma en la cual un algoritmo es desarrollado.
La comparación entre paradigmas se basa en
la facilidad de uso por el programador que no
puede disociarse de la naturaleza del problema
a resolver. Un lenguaje de programación puede
soportar distintos paradigmas de programación
con el objetivo de que un programador utilice
el más conveniente a la hora de resolver un
problema. Un lenguaje de programación multiparadigma es un lenguaje de programación que
soporta mas de un paradigma de programación.
Timothy Budd, en [17] sostiene que: ”la idea
de un lenguaje multiparadigma es proveer un
framework en el que los programadores puedan
trabajar en una variedad de estilos, mezclando
libremente las construcciones características de
los diferentes paradigmas. La meta de diseño de
tales lenguajes es permitir a los programadores
utilizar la mejor herramienta para un trabajo,
admitiendo que ningún paradigma resuelve
todos los problemas en la forma mas fácil o
mas eficiente”.
Varios lenguajes han demostrado que orientación a objetos y programación funcional
pueden complementarse, formando un equipo
exitoso [16]. Por su parte el desarrollo orientado a aspectos se presenta apropiado para asistir
al desarrollador en aislar puntos de variación en
un programa. Esto ayuda al programa a evolucionar y adaptarse a nuevos requerimientos de
cambio durante el ciclo de vida del programa.
Si bien la programación orientada a aspectos
en general se ha presentado como extensión
de la orientación a objetos, y básicamente en
las situaciones en que los lenguajes soporten
herencia y polimorfismo de subtipos, es de
interés investigar los resultados que se pueden
obtener al tomar otros paradigmas anfitriones.
                      537WICC 2010 - XII Workshop de Investigadores en Ciencias de la Computación
En particular, un lenguaje que se está tomando como caso de estudio y plataforma de
desarrollo dada sus características únicas es
Ciao Prolog [3]. Ciao es un lenguaje multiparadigma basado en expansiones sintácticas
que implementan distintos paradigmas mediante la técnica de compilación de control.
También se esta analizando el lenguaje multiparadigma Oz [7, 11], que fue diseñado
para combinar en forma armónica conceptos que tradicionalmente están relacionados
con paradigmas de programación diferentes.
Oz tiene subconjuntos que representan un
lenguaje lógico, un lenguaje funcional, un
lenguaje orientado a objetos y un lenguaje
concurrente de flujo de datos, y mas. Otros
lenguajes de interás son: Leda, soporta los
paradigmas imperativo, orientado a objetos,
lógico y funcional [17]; Python, combina el
paradigma imperativo,funcional, orientado objetos y orientado a aspectos; Ruby, Scala, y mas.
4. Líneas de Investigación y
Desarrollo
Para lograr los objetivos planteados se están
abordando distintas temáticas en el contexto del
desarrollo multiparadigma, como:
bases para la definición del paradigma orientado a agentes Se pretende establecer las bases para dar origen a una
definición definitiva del paradigma orientado a agentes. Se esta trabajando sobre
Ciao FLUX, una primera aproximación a
una extensión del lenguaje multiparadigma
Ciao Prolog que permite dotar a agentes
con capacidades cognitivas de alto nivel,
mediante una adaptación del método de
programación de agentes FLUX. La bondad más importante que brinda Ciao, sin
embargo, es la facilidad con la que permite
realizar extensiones del lenguaje, ya sea
a nivel sintáctico, semántico o de control
[9, 8]. Se eligió Ciao Prolog como lenguaje anfitrión por su facilidad de extensión y
porque posee un gran repertorio de módulos que permiten implementar autonomía,
reactividad, proactividad, habilidad social
y movilidad, características fundamentales
a la hora de programar agentes.
Análisis y adecuación de técnicas orientadas a aspectos en paradigmas básicos.
En general, al trabajar con lenguajes de
AOP, la lógica de los aspectos se entrelaza
en la aplicación destino, y en esta situación
múltiples aspectos, desarrollados de forma independiente pueden producir comportamiento inesperado en el sistema. Resulta de interés analizar el beneficio que
pueda producir la aplicación de conceptos de orientación a aspectos en lenguajes
no orientados a objetos y multiparadigma
[4, 2].
Análisis de diversos paradigmas de desarrollo de software Nos interesa determinar
cuales son los efectos de considerar varios paradigmas en el proceso de desarrollo
de software. Consideraremos, el desarrollo de software orientado a aspectos, ingeniería de software basada en componentes,
desarrollo de software orientado a características [5, 1, 15], etc.
Análisis y comparación de lenguajes multiparadigma Interesa estudiar la posibilidad de extender algunos lenguajes, incorporando características multiparadigma. Se está realizando un análisis de
los lenguajes que tienen características
multiparadigma (Ciao Prolog, Ruby, Oz,
Python, Scala, etc) para definir un entorno
comparativo de los mismos [6, 16, 14].
5. Resultados esperados
El desarrollo multiparadigma permite la construcción de sistemas mediante la selección del
paradigma apropiado en cada situación. El producto de la presente propuesta puede ser de utilidad para el desarrollo de aplicaciones en dominios particulares y que deban cumplir con
                      538WICC 2010 - XII Workshop de Investigadores en Ciencias de la Computación
propiedades particulares, tales como eficiencia,
seguridad y calidad, brindando apoyo al desarrollador para la evaluación y selección de las
mejores técnicas y paradigmas para la construcción de sistemas en gran escala.
6. Formación de Recursos
Humanos
El mayor impacto del presente proyecto se
centra en la formación de recursos humanos,
consolidación de grupos de investigación e interacción entre grupos interdisciplinarios. Parte
de los autores están dando sus primeros pasos
en investigación. Actualmente se están desarrollando en el contexto del proyecto 3 tesinas de
grado, cuya finalización está prevista para el segundo semestre del corriente año. Asimismo se
están desarrollando 1 tesis de magister y 2 tesis
doctorales y se prevee la iniciación de nuevos
estudios de posgrado.
