Construcción de herramientas didácticas para la enseñanza y ejercitación práctica en laboratorio de informática teórica en las carreras con informática
﻿
 
Para poder impartir conocimientos de 
informática teórica, es necesario contar 
con un conjunto de herramientas didácticas 
(simuladores, casos reales de aplicación, 
programas fuentes, material de estudio, 
entre otros) que permitan centrarnos en los 
problemas disciplinares, aportando sólidas 
bases teóricas y claros ejemplos de 
aplicaciones a la resolución problemas 
reales.  
Los estudiantes presentan dificultad para 
asimilar estos tópicos ya que los mismos 
están muy cercanos a la matemática y son 
fuertemente abstractos. Concientes de que 
estamos preparando futuros profesionales, 
nuestra preocupación es la de mostrar 
claramente la aplicabilidad de estas 
herramientas conceptuales, no sólo a la 
construcción de compiladores (enfoque 
tradicional de la teoría de los autómatas y 
lenguajes) sino a la resolución de 
problemas en general.  
Por otro lado, es necesario lograr la 
integración de conocimientos de Teoría de 
la Computación, Programación e Ingeniería 
de Software, permitiendo a los educandos 
probar sus modelos teóricos, inspeccionar 
y modificar las herramientas, optimizarlas y 
analizar su complejidad, alcanzando de 
esta forma un aprendizaje significativo. 
Por lo tanto nuestro esfuerzo, está 
orientados al desarrollo de estas 
herramientas y materiales de estudio, 
sentando bases sólidas de conocimientos 
teóricos, con una gran ejercitación y 
aplicabilidad de los mismos. 
 
Palabras Claves: Informática Teórica, 
Máquinas abstractas, Gramáticas 
Formales, Autómatas, Compiladores 
 
 
1. INTRODUCCION 
 
Los contenidos de informática Teórica, 
incluidos en el núcleo común de las 
carreras con informática, son brindados  en 
la carrera de Sistemas de Información de 
la Universidad Tecnológica Nacional FRC, 
por la asignatura Sintaxis y Semántica del 
Lenguaje (SSL). 
Tales contenidos son: lenguajes y 
gramáticas formales, teoría de autómatas, 
traducción de lenguajes, máquinas 
computadoras teóricas, computabilidad, 
complejidad y compiladores. 
Los tópicos abordados son difíciles de 
asimilar por los estudiantes, ya que los 
mismos están muy cercanos a la 
matemática y son fuertemente abstractos. 
La importancia de una completa 
asimilación de estos contenidos, radica en 
que los mismos no sólo tienen efectiva 
aplicabilidad en la construcción de 
compiladores, sino en temas tan diversos 
dentro de la disciplina informática como 
son la ingeniería de requerimientos o 
programación de dispositivos móviles y 
embebidos. 
Los estudiantes efectúan prácticas de 
diseño de máquinas abstractas, sin  contar 
con herramientas para la experimentación 
en computadora, que muestren a los 
estudiantes en forma clara la aplicabilidad 
de los contenidos teóricos para la 
resolución de problemas reales. Esta 
dificultad manifiesta de relacionar la teoría 
y sus posibles aplicaciones, se ha 
advertido en las evaluaciones parciales y 
finales de la asignatura.  
Otra dificultad con la que se enfrentan los 
estudiantes, es que al recurrir al  material 
de estudio desde distintas fuentes 
bibliográficas, estas abordan los 
contenidos de manera diferentes y con 
nomenclaturas que confunden al 
estudiante y dificultan el aprendizaje. 
Para poder asimilar en forma completa  los 
contenidos curriculares de la asignatura 
SSL, deben realizar práctica efectiva de los 
mismos utilizando simuladores de 
máquinas abstractas, estudiando el 
funcionamiento y los programas fuente de 
los simuladores, de un generador de 
analizadores léxicos y de un generador de 
analizadores sintácticos, herramientas que 
estarán construidas utilizando Lenguajes 
de programación avanzados. 
Si bien existe una gran cantidad de 
bibliografía y herramientas de software 
para el estudio de estos temas, las mismas 
los abordan en forma parcializada, sin 
integración adecuada, con diferentes 
nomenclaturas y definiciones dispares, no 
resultan didácticamente adecuadas para 
llevar adelante el proceso de enseñanzaaprendizaje permitiendo la correcta 
transposición de los contenidos teóricos en 
aplicaciones de la realidad. 
Este proyecto tiene como objetivos lograr 
profundo conocimiento teórico y práctico, 
de las técnicas y herramientas 
conceptuales de la Informática Teórica 
relacionadas con la construcción de 
compiladores, actualizar la currícula de las 
materias relacionadas con esta temática de 
la carrera de Ingeniería en Sistemas de 
Información, propender a la actualización y 
al perfeccionamiento docente e involucrar 
a alumnos en el estudio y la investigación 
de temas fundamentales de su carrera. 
Los aspectos teóricos, para el abordaje de 
la temática planteada, esta muy difundida y 
es bastante generalizada: sobre la teoría 
de autómatas y lenguajes formales, es 
completo lo publicado en [1] [2] [3] [4] [8] 
[10], con respecto y específicamente a la 
aplicabilidad en el modelo abstracto sobre 
la máquina ram [5] [6]. Con respecto a lo 
publicado sobre la utilización de técnicas y 
herramientas para la construcción de 
compiladores [7] [8] [9], es variado y 
extenso, pero los mismos no se ajustan en 
lo didáctico, para ser transferido en forma 
directa a los alumnos en una carrera de 
grado en informática.  
En la web, existen varios sitios en donde 
se pueden acceder a simuladores, 
generalmente la mayoría de ellos son 
únicamente para máquinas de Turing en 
donde, de acuerdo a la bibliografía de 
origen, varían en la definición formal de 
sus componentes. Por lo tanto, para lograr 
un aprendizaje significativo y de esta 
manera asimilar en forma completa  los 
contenidos curriculares de teoría de 
autómatas, gramáticas formales, 
traducción de lenguajes y compiladores 
impartidos en la asignatura sintaxis y 
semántica del lenguaje, se debe elaborar 
una estrategia didáctica para la enseñanza 
de los contenidos, en base a una 
nomenclatura uniforme que permita en 
forma unívoca, la representación de los 
temas abordados. Se deberá construir un 
conjunto de herramientas disponibles para 
ejecutar desde la web  “simuladores” que 
le permitan al alumno realizar una práctica 
efectiva, utilizando estos simuladores de 
máquinas abstractas, estudiando y 
comprendiendo el funcionamiento de los  
programas fuente de los simuladores, de 
los generadores de analizadores léxicos y 
de un generador de analizadores 
sintácticos. 
El presente proyecto tiene una incidencia 
directa en la generación de conocimientos, 
ya que como resultado, se generará  
material de uso didáctico que proveerá un 
amplio beneficio, para docentes y alumnos, 
ya que todo el desarrollo de este proyecto 
estará disponible para la enseñanza de los 
contenidos de informática Teórica en 
carreras con informática. 
2. OBJETIVO GENERAL 
 
El objetivo del proyecto es lograr que los 
estudiantes fijen los contenidos 
curriculares de teoría de autómatas, 
gramáticas formales, traducción de 
lenguajes y compiladores impartidos en la 
asignatura SSL, realizando práctica 
efectiva de los mismos en simuladores de 
máquinas abstractas, estudiando el 
funcionamiento y los programas fuente de 
los simuladores, de un generador de 
analizadores léxicos y de un generador de 
analizadores sintácticos, herramientas 
éstas construidas utilizando lenguajes de 
programación avanzados. 
Además, se alentará la conformación de 
grupos de trabajo para la experimentación 
en laboratorio con los programas fuentes 
de las herramientas, permitiendo 
modificaciones que agreguen nuevas 
funcionalidades y para optimizar su 
funcionamiento. 
Como beneficios adicionales, las 
herramientas y su documentación estarán 
desarrolladas en idioma español y los 
estudiantes y docentes de SSL tomarán un 
primer contacto con las últimas tecnologías 
de desarrollo de productos informáticos.     
 
Objetivos Específicos 
 
Cognitivos: lograr profundo conocimiento 
teórico y práctico, de las técnicas y 
herramientas conceptuales de la 
informática teórica, relacionadas con la 
construcción de compiladores, con el 
reconocimiento general de patrones, la 
programación automática desde una 
especificación formal, la traducción de 
códigos y los modelos de computación 
lineal e introducirnos a los modelos 
paralelos.  
 
Académicos: actualizar la currícula de las 
materias relacionadas con esta temática de 
la carrera de ingeniería en sistemas de 
información, propender a la actualización y 
al perfeccionamiento docente e involucrar 
a alumnos en el estudio serio y la 
investigación de temas fundamentales de 
su carrera. 
 
3. METODOLOGÍA 
 
Para el desarrollo de este proyecto de 
investigación se utilizará el método 
científico, con la aplicación de  un 
desarrollo experimental, el cuál comenzará 
con la recolección del material sobre este 
temática que ya se encuentra publicado, 
continuando con la selección y clasificación 
del mismo, y se procederá a la unificación 
de la nomenclatura y simbología utilizada. 
Posteriormente se definirá el lenguaje de 
programación a utilizar para la 
construcción de los simuladores, 
capacitando a todo el grupo de trabajo en 
el lenguaje de programación adoptado.  
Se establecerá la estrategia didáctica para 
abordar los contenidos de manera de 
facilitar el aprendizaje de los alumnos. Se 
definirá la arquitectura y el modelo 
orientado a objetos, para construir los 
simuladores, y se determinará la estructura 
para la construcción del sitio web  del 
proyecto en donde estarán disponibles los 
simuladores para que los alumnos realicen 
las prácticas, conjuntamente con el 
material teórico de estudio sobre los 
contenidos de la asignatura.  
Se definirá en forma precisa y exhaustiva 
un modelo teórico, la máquina de acceso 
aleatorio (RAM), el cuál servirá de guía 
para la aplicación práctica de los 
conceptos teóricos en referencia a la 
construcción de un compilador para tal 
modelo. Luego éste modelo teórico será 
adecuado para poder ser implementado en 
un computador real, analizando las 
implicancias en lo referente a lo que el  
poder de cálculo se refiere. Con la 
definición del modelo teórico resultante 
adecuado a una implementación práctica 
en un computador, se seguirán  todo del 
pasos en el diseño de un compilador para 
este lenguaje, esto es la definición formal 
de su gramática, realización de un 
generador de analizadores léxico a través 
de una gramática formal (solo existen en la 
actualidad a través de expresiones 
regulares), a continuación y previo a la 
realización de analizador sintáctico se 
debatirá las ventajas de las conveniencias 
de la normalización de las gramáticas en 
formas normales ya sean en FNC o FNG, y 
su implicancia en la determinación de la 
construcción de la máquina abstracta 
(autómata de pila) a través de los 
analizadores sintácticos LL(k) o  LR(k). 
Para la concreción de todas las actividades 
anteriores, será necesario la construcción 
de simuladores, que son el objeto de este 
proyecto, que se constituirán en 
herramientas didácticas para poder 
ejemplificar y visualizar los conceptos 
teóricos de la asignatura sintaxis y 
semántica del lenguaje, con un enfoque 
real de aplicación práctica como lo es la 
construcción de un compilador para un 
lenguaje determinado.     
 
 
4. RESULTADOS ESPERADOS 
 
Los contenidos Teóricos, junto con las 
herramientas desarrolladas, estarán a 
disposición de los alumnos para que 
efectúen simulaciones de manera que 
logren un aprendizaje significativo de los 
conceptos teóricos.  
Estas herramientas estarán presentadas 
en la web, y se ejemplificará su utilización 
a través de un ejemplo real de aplicación 
con es la construcción de un compilador 
académico para la máquina abstracta RAM 
(Máquina de acceso aleatorio). 
Al poder los alumnos visualizar una 
aplicación práctica de los contenidos, y 
poder simular la ejecución de autómatas 
finitos, con pila, linealmente acotados y 
máquina de Turing, de manera que ellos 
mismos evalúen las soluciones a los 
problemas planteados en las clases 
prácticas, es de esperar que los 
conocimientos y habilidades adquiridas, 
sean realmente significativas y eleven el 
rendimiento en el cursado y aprobación de 
la asignatura. 
 
 
5. PRODUCTOS A CONSTRUIR 
 
Página Web, con los contenidos teóricos 
de la asignatura, y para la ejercitación 
prática de los contenidos, las siguientes 
herramientas: 
Simuladores de autómatas finitos, con pila, 
linealmente acotados y máquina de Turing, 
para que los alumnos evalúen sus 
soluciones a los problemas planteados en 
las clases prácticas. 
Generador de analizadores léxicos a partir 
de una gramática regular que muestre la 
generación automática de código desde 
una especificación formal y las distintas 
formas de tratar con el no determinismo del 
autómata finito obtenido: conversión a 
autómata finito determinista, búsqueda en 
árboles generados por estados posibles y 
procesamiento en paralelo de los distintos 
caminos deterministas generados por el no 
determinismo del autómata. 
Generador de analizadores sintácticos 
LL(k) y LR(k) desde la especificación de un 
lenguaje según su gramática libre de 
contexto. Aquí, la técnica para atacar el no 
determinismo del autómata con pila, 
isomorfo con la gramática del lenguaje, 
será la de pre-análisis de profundidad késima de la cadena de entrada. 
 
 
6. IMPACTO DEL PROYECTO 
 
El software como producto, está 
actualmente siendo en nuestro país como 
una potencial fuente importante de 
ingresos por exportaciones y el desarrollo 
de una industria intelecto-intensiva como 
ésta, que abra posibilidades laborales a 
nuestros profesionales informáticos, es una 
aspiración aún en vías de desarrollo.  
Todo el conocimiento que se pueda lograr 
sobre estos temas, contribuye directa o 
indirectamente a estos objetivos socioeconómicos del país y las Empresas 
nacionales de desarrollo tecnológico de 
software. 
El éxito de este proyecto, será el de 
proveer al mercado informático de mejores 
prácticas en lo que se refiere a la 
construcción de software, fomentando su 
utilización, desde los inicios en la 
formación académica, con la utilización de 
métodos formales, y la aplicación de 
técnicas de calidad en la construcción del 
mismo. 
En forma Directa, las herramientas 
producto de este proyecto serán utilizadas 
por aproximadamente 700 estudiantes 
anuales que cursan SSL en diez cursos de 
la Carrera de Ingeniería en Sistemas de 
Información en la Facultad Córdoba de la 
UTN. Además, serán puestas a disposición 
de toda la comunidad a través de la Web 
 
 
7. GENERACION DE CONOCIMIENTO 
 
Este proyecto se inscribe como un 
programa de investigación sobre temas de 
Informática Teórica y Aplicada, en el 
Departamento de Ingeniería de Sistemas 
de Información de la Facultad Córdoba de 
la Universidad Tecnológica Nacional; este 
programa promueve en el cuerpo docente 
la investigación de temas relacionados a la 
carrera y su permanente actualización en 
la temática planteada. 
Tendrá una incidencia directa en la 
generación de conocimientos, ya que como 
resultado, se generará  material de uso 
didáctico que proveerá un amplio beneficio, 
para docentes y alumnos, ya que todo el 
desarrollo de este proyecto será transferido 
a la Cátedra de Sintaxis y Semántica del 
Lenguaje. 
Además se prevee la participación de 
alumnos avanzados de la carrera de 
Ingeniería en Sistemas de información y de 
recientes egresados, que inician de esta 
manera su formación en investigación 
científica y tecnológica. 
 
 
8. IMPORTANCIA DEL PROYECTO 
 
Con la ejecución de este proyecto, no solo 
se pretende organizar y unificar la 
nomenclatura del material para el dictado 
de la asignatura, presentarlo en forma 
didáctica, posibilitando a los alumnos la 
práctica efectiva de los mismos, de manera 
de lograr mayor eficiencia en el cursado de 
la asignatura.  
También se persigue la actualización de 
todos los docentes y auxiliares integrantes 
de la cátedra Sintaxis y Semántica del 
Lenguaje, provocando además,  una 
actualización en el desarrollo de 
aplicaciones con lenguajes y técnicas de 
modelado actualizadas. Una vez 
construidas estas herramientas, y logrado 
un acabado conocimiento teórico y 
práctico, de las técnicas y herramientas de 
la informática teórica, quedarán sentadas 
las bases para la aplicación efectiva en el 
reconocimiento de patrones, la traducción 
automática a partir de una especificación 
formal, estudio de los modelos de 
computación lineal, e introducirnos en los 
modelos paralelos.   
 
 
9.
