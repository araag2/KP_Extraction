Implementación de metodologías ágiles mediante herramientas automáticas de definición de procesos
﻿
Desde el año 2007 el Laboratorio de 
Investigación y Desarrollo en Ingeniería y 
Calidad del Software (LIDICALSO) de la 
Universidad Tecnológica Nacional – Facultad 
Regional Córdoba, se ha enfocado en 
investigación y desarrollo aplicada cuyo 
objetivo principal es generar un sistema de 
tipo e-learning que capacite a las personas en 
el proceso de desarrollo de software definidos 
por sus empresa (procesos que se adaptan a 
normas y estándares predefinidos) y que, 
asimismo, se alimenten de los hallazgos de 
auditorías efectuadas a las empresas de la 
industria del software. Por la complejidad 
asociada se decidió sub dividir el trabajo en 
una serie de 4 etapas: creación de base de 
datos de hallazgos basada en evaluaciones 
CMMI (LIDICALSO: 2007), validación de 
procesos (LIDICALSO: 2008), generación de 
e-learning basado en simulación interactiva 
(LIDICALSO: 2010), y el desarrollo de un 
plug-in que permita la definición de un 
proceso de desarrollo ágil, la cual se describe 
en este documento. Cada una de ellas 
asociada a su respectivo proyecto de 
investigación. Un total de 16 investigadores 
actualmente están participando en el mismo, 
entre los que se encuentran profesionales, 
docentes y estudiantes. Actualmente se está 
trabajando en las tres últimas etapas, habiendo 
concluida la primera en Diciembre del 2009. 
CONTEXTO 
En búsqueda de mejorar la calidad de los 
productos de software y la productividad 
organizacional, las empresas de software han 
avanzado en la definición de procesos de 
desarrollo que soporten sus necesidades, 
basándose generalmente en alguna 
metodología estándar de la industria. A partir 
de esta situación, se han creado diferentes 
herramientas que facilitan el modelado de los 
procesos de desarrollo, teniendo cada una de 
ellas ventajas y limitaciones. Una de las 
herramientas creadas para ese fin es Rational 
Team Concert (RTC) (RTC: 2009) que 
permite el modelado de procesos a través de 
la instanciación de estándares definidos. Sin 
embargo estas herramientas carecen de 
funcionalidades que simplifiquen la 
definición de buenos procesos de desarrollo, 
como por ejemplo incorporando buenas 
prácticas o integrando normas de calidad 
según las necesidades propias de cada 
organización que las implementa, así como 
tampoco de funcionalidades que faciliten su 
implementación como el de generar un 
entrenamiento particular (Rubio et al: 2008). 
Por lo expuesto, este proyecto pretende 
contribuir a la definición de un proceso ágil 
de desarrollo de software, teniendo en cuenta 
la incorporación de las mejores prácticas de 
ingeniería previamente estudiadas como 
claves para el éxito del sector, la instanciación 
de dicho proceso en proyectos a través del 
modelado automático y la generación de elearnings a través de simulaciones, con el 
objetivo de dar soporte al entrenamiento de 
las personas que participan del proceso de 
desarrollo de software. 
Palabras clave: RTC, SCRUM, Agile, 
procesos, modelos, e-learning, simulaciones.  
1. INTRODUCCION 
A lo largo de la historia de la industria del 
software se han identificado buenas prácticas 
y conocimientos disponibles (CMMI: 2008) 
(ISO9001: 2008) acerca de cómo desarrollar 
efectivamente software, partiendo de la 
programación estructurada tradicional (Dahl 
et al: 1972) hasta llegar a las actuales 
tecnologías de desarrollo (Ambler: 2009). 
Además del conocimiento disponible existen 
herramientas que ayudan y dan soporte a la 
definición de procesos para la aplicación de 
dichos conocimientos tales como: Eclipse 
(Eclipse: 2009),  Rational Team Concert 
(RTC: 2009) o Team System Foundation 
(TFS: 2009). Sin embargo se presentan 
algunas dificultades a la hora de la definición 
de dichos procesos de desarrollo 
específicamente en ambientes en donde la 
metodología a utilizar es ágil: 
• Los miembros del equipo no tiene un acceso 
fácil y centralizado al mismo cuerpo de 
información para la ejecución del proceso 
cuando lo necesitan (SPEM:2008). 
• Combinar e integrar contenidos y procesos 
de desarrollo que están disponibles en 
formato propietario, junto con las diferencias 
en los estilos y formas de presentación de 
cada uno de ellos (SPEM:2008).  
• Definir un enfoque sistemático y organizado 
que sea apropiado para sus necesidades 
(SPEM:2008). 
El desarrollo de software a través de 
metodologías ágiles (Ambler: 2009) se refiere 
a un grupo de metodologías de desarrollo de 
software basadas en desarrollo iterativo, en 
donde los requerimientos y las soluciones 
evolucionan mediante la colaboración entre 
equipos auto-organizados. Los métodos ágiles 
generalmente promueven un proceso de 
administración de proyectos disciplinados que 
da pie a la frecuente inspección y adaptación, 
una filosofía de liderazgo que promueve el 
trabajo en equipo, equipos auto-controlados, 
una serie de buenas prácticas que permiten la 
rápida entrega de software de alta calidad y un 
enfoque de negocios que alinea el desarrollo 
con las necesidades de los clientes y las metas 
de las compañías (AgileManifesto: 2001). 
Como se mencionó, Rational Team Concert 
(RTC: 2009) es una herramienta de desarrollo 
de software colaborativa desarrollada por 
IBM. RTC proporciona un ambiente único e 
integrado para administrar varios aspectos del 
proceso de desarrollo de software, incluyendo 
la planeación ágil, definición de procesos, 
control de versiones, monitoreo de defectos, 
administración de productos, y reportes. De 
esta forma los equipos desarrolladores de 
software cuentan con un ambiente integrado 
en el cual ellos pueden administrar todos los 
aspectos relacionados con su trabajo, como 
ser: planes, tareas, control de versiones, 
administración de productos y reportes. Los 
usuarios pueden utilizar la herramienta para 
monitorear y administrar las relaciones entre 
los productos, promover las buenas prácticas 
para el desarrollo y recopilar información 
sobre el proyecto. Esta herramienta provee 
definiciones de procesos estándares con la 
implementación de ciertas prácticas básicas 
en forma de plantillas a instanciar. Para una 
organización, tras la instanciación de una 
misma plantilla de proceso, se puede 
determinar que las implementaciones 
resultantes tienen similares adaptaciones del 
proceso base provista por la misma. 
Basados en los resultados de proyectos 
anteriores (LIDICALSO: 2007),  y 
complementando el trabajo de proyectos 
actuales (LIDICALSO: 2008) (LIDICALSO: 
2010), esta investigación consiste en el 
desarrollo de un plug-in que permita la 
definición de un proceso de desarrollo de 
software ágil específico para una empresa 
dada, basado en buenas prácticas de 
ingeniería identificadas que cumplen con 
modelos y normas estándares de calidad.  
2. LINEAS DE INVESTIGACION y 
DESARROLLO 
Como se mencionó, este proyecto está 
relacionado a las 3 etapas anteriores (Rubio: 
2011). Es por lo tanto, que toma como base el 
conocimiento adquirido por los mismos en 
áreas tales como: simulación, e-learning, 
SIMSE (SimSE:2009), RTC (RTC:2009), 
TFS (TFS:2009), EPF (EPF:2007), modelos, 
procesos, CMMI (CMMI:2008) e, 
ISO(ISO9001:2008). La figura 1 muestra a 
continuación cómo la línea de investigación 
sigue la visión general planteada. Debemos 
destacar que las tres primeras etapas fueron 
descriptas previamente en (Andriano et al: 
2010). 
 
 
Figura 1: Resumen de la línea de investigación propuesta 
Etapa 4: Esta etapa tiene como objetivo 
generar y transmitir conocimiento relacionado 
a la teoría e implementación de metodologías 
ágiles, más específicamente a SCRUM 
(SCRUM), adaptado a las características 
propias de un proyecto en particular a través 
de Rational Team Concert (RTC) (RTC: 
2009) y EPF (EPF: 2007). Se subdivide así en 
dos etapas, la primera enfocada en la 
definición de un proceso SCRUM (SCRUM) 
y la segunda a la definición y desarrollo de un 
plug-in que permita la implementación de 
dicho proceso. Al estar esta etapa integrada a 
las anteriores se plantea la necesidad de 
proveer una interface entre el plug-in 
generado y el e-learnings utilizado, en este 
caso SimSE (SimSe:2009). 
3. RESULTADOS OBTENIDOS y 
OBJETIVOS 
Durante la primera etapa “Desarrollo y 
transferencia de conocimientos teóricos y 
prácticos para la implementación del modelo 
CMMI en empresas de software” del 
programa de investigación, se confeccionó un 
modelo de integración, se realizaron trabajos 
de campo y análisis necesarios para la 
iniciación del modelo (Rubio: 2008). Se 
recolectaron 40 evaluaciones a diversas 
empresas correspondientes al período 20072009. Se realizaron variados análisis sobre los 
datos obtenidos a modo de categorizar y 
depurar la información relevante. Y se 
desarrolló un proyecto piloto de e-learning 
basado en la metodología de aprendizaje 
activo (Schank: 2002) para este proyecto. 
Además se realizaron estudios 
complementarios, incluyendo entrevistas a 
especialistas,
Como resultado de la segunda etapa del 
programa “Implementación de un modelo de 
validación para la  definición y 
mantenimiento de procesos de desarrollo de 
software” se obtuvo una prueba de concepto 
que permite generar un mapeo entre las 
prácticas identificadas de una norma/estándar 
y la forma en que éstos están implementados 
en una organización (Szyrko: 2009) (Szyrko 
et al: 2009) (Szyrko et al: 2010) 
 análisis de causas e 
investigaciones exploratorias con el objetivo 
de obtener toda la información relevante para 
el planteo de las diversas situaciones a 
presentar al estudiante y sus potenciales 
problemas y soluciones (Proyecta: 2008). 
La tercera etapa “Sistema generador de elearnings de procesos de desarrollo de 
software mediante simulaciones interactivas” 
ha comenzado en el año 2010. Como 
principal resultado obtenido es el desarrollo 
de un método cuantitativo de evaluación para 
e-learnings basados en simuladores (Andriano 
et al: 2011), además del estudio de 
simuladores basados en juegos tales como 
SimSE (SimSe:2009). 
La cuarta etapa “Implementación de 
metodologías ágiles mediante herramientas 
automáticas de definición de procesos” tiene 
planeado iniciar sus actividades en el año 
2011, busca como resultado la definición de 
un método ágil para el desarrollo de software 
“SCRUM” que proporcione un marco de 
trabajo para todas las tareas de un proyecto, 
basándose en concepto de auto-gestión y de 
equipos de trabajo multi-funcionales, 
generando como salida un plug-in utilizando 
Rational Team Concert (RTC) (RTC: 2009) y 
EPF (EPF: 2007) para la implementación del 
proceso. 
Otro de los resultados esperados para esta 
cuarta etapa, es la integración con el 
generador automático de e-learnings que 
permita un aprendizaje dinámico del proceso 
definido. 
4. FORMACION DE RECURSOS 
HUMANOS 
A nivel académico, la transferencia de los 
resultados del programa es realizada a través 
del desarrollo inicial de investigadores 
relacionados a la temática y el dictado de 
seminarios y conferencias, introduciendo a 
alumnos y docentes en los temas relacionados 
a la implementación de modelos de calidad en 
las organizaciones y la validación de los 
mismos. En particular, actualmente están 
participando del programa 6 alumnos de la 
Maestría en Ingeniería de Sistemas de 
Información de la UTN-FRC (6 tesistas), 3 
alumnos becarios de la carrera de Ingeniería 
de Información de la misma Facultad y 1 
práctica profesional supervisada. A esto se le 
suma la contribución de 3 investigadores 
categorizados a través de la participación en 
este programa. Finalmente, el proyecto cuenta 
con dos personas representantes de la 
Industria del software que se integran así a las 
actividades de investigación y docencia 
Universitaria. 
Además, los resultados obtenidos hasta el 
momento han permitido actualizar las 
currículas de materias de grado y postgrado 
en la carrera de Ingeniería y Maestría de 
Sistemas de Información de la UTN-FRC, 
respectivamente. 
 
5.
