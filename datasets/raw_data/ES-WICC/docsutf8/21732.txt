Proyectos de investigacion en ingenieria de software en el instituto tecnologico buenos aires ITBA
﻿
En la presente comunicación se expone el trabajo realizado en el Instituto Tecnológico Buenos Aires
referente a investigación y desarrollo en el marco de asignaturas relacionadas con la disciplina de la
ingeniería del software.
1.  Introducción
Consciente de la importancia de la realización de algún trabajo sistemático de investigación y desarrollo
por parte de los alumnos de las carreras de informática antes de su graduación, en las asignaturas que me
tocara circunstancialmente dictar durante los ciclos lectivos 1999 y 2000 (Ingeniería de Software y
Proyecto de Sistemas), los alumnos han realizado proyectos como elemento integrador de la cursada de
las materias y como condición para poder rendir los exámenes finales correspondientes.
2. Mecanismo de selección de los temas
La forma en la cual fueron seleccionados los temas es la siguiente: durante la primer clase el docente
propone una lista de temas de índole técnica relacionada con temas de ingeniería de software y los
alumnos también pueden incorporar temas a dicha lista, con la aprobación del docente si éste los
considera apropiados o tecnológicamente novedosos.
Luego cada alumno ordena individualmente dichos temas en un ranking de acuerdo a sus preferencias.
Finalmente los temas son asignados a aquellos alumnos que le dieran mayor preferencia, así que podría
decirse que, en vez de elegir los alumnos a los temas, serían los temas quienes eligen a los alumnos.
Una vez asignados los temas, el docente entrega una especificación funcional y no funcional inicial
incompleta, y en numerosos casos el docente juega el rol de experto en el dominio sobre el cual deberán
trabajar los alumnos.
3. Trabajos desarrollados
En la materia Proyecto de Sistemas (6 créditos), dictada durante 1999 en formato anual, se armaron 7
grupos de 2 alumnos. El proceso de desarrollo y los entregables fueron presentados por el docente y los
alumnos debieron seguir dicho proceso estrictamente en todos los casos, aunque podían elegir sus
técnicas. Algunos grupos trabajaron con técnicas orientadas a objetos, mientras que otros lo hicieron con
técnicas estructuradas. Los grupos realizaron los siguientes trabajos:
• Herramienta de transformación de modelos de entidad-relación a diseño de base de datos
relacionales. Si bien este toolkit CASE ha sido construido previamente, el grupo en cuestión
profundizó su conocimiento acerca de los metamodelos de análisis de datos y de diseño de base de
datos relacional para poder construir esta herramienta. Este sistema fue escrito en Visual C++ sobre
base de datos Oracle.
• Herramienta de transformación bidireccional de modelos de entidad-relación a diseño de bases de
datos multidimensionales Oracle Express. El sistema permite cargar un modelo de datos vía un
diagrama entidad-relación y producir diseño necesario para crear una estructura similar a la original,
pero sobre una base de datos multidimensional. Para ello se trabajó a nivel de metamodelos de los
modelos relacional y multidimensional de base de datos. Este sistema fue escrito en Visual C++
sobre base de datos Oracle.
• Herramienta de monitoreo de performance de bases de datos Oracle. El sistema brinda información
de performance de Oracle, en cuanto a uso de CPU, memoria y disco. Para ello se nutre de
información de las tablas o vistas de performance. El sistema almacena la información histórica de
performance a los efectos de ser comparada en sus diversas mediciones. El sistema brinda
recomendaciones de cómo mejorar una situación en lo referente a performance, por ejemplo: cambio
en parámetros de inicialización o arranque de la base de datos, etc. Este sistema fue escrito en Visual
C++ sobre base de datos Oracle.
• Sistema de estadísticas de fútbol a través de Internet. El sistema almacena la información y
estadísticas de cada uno de los partidos de un torneo en particular. El sistema permite responder a
múltiples consultas de aficionados al deporte. Este sistema fue escrito en Java utilizando base de
datos Informix sobre sistema operativo Linux.
• Sistema de administración de base de datos de postulantes de una selectora de personal. Este sistema
permite la carga de antecedentes de postulantes, así como la selección de los mismos. Este sistema
fue escrito en Oracle Forms 6.0 sobre base de datos Oracle y puede correr en entorno web.
• Sistema de administración de historias clínicas de una clínica. El sistema permite almacenar toda la
información de las personas que presenten sus antecedentes, en cuanto a: datos personales, datos
médicos (historia clínica propiamente dicha) y estudios realizados. Algunos ejemplos de estudios
que pueden ser almacenados por el sistema son: resultados de análisis de sangre y orina,
radiografías, tomografías (en ambos casos las imágenes, además del resultado del estudio). La
aplicación registra información acerca de los tratamientos y diagnósticos, como por ejemplo, los
medicamentos recetados. Este sistema fue escrito en Visual Basic sobre base de datos Oracle.
• Sistema experto que juega al ajedrez (ya sea de blancas o de negras) contra un oponente humano
respetando los principios generales del juego, partiendo de cualquier posición válida. El sistema
muestra la posición actual y la notación de la partida, además de almacenar esta última en formato
PGN (Portable Game Notation). El sistema provee la posibilidad de rotar el diagrama, puede ofrecer
y aceptar tablas y también determina abandonar cuando corresponda. El sistema detiene la partida
cuando se llega al mate o posición teórica de tablas (repetición de movidas, material insuficiente
para triunfar, ahogado, reglas de 50 y 100 movidas, etc.). El sistema no usa de una base de datos de
aperturas. Este sistema fue escrito en Visual C++.
En la materia Ingeniería de Software (6 créditos), dictada durante 2000 en formato cuatrimestral, se
armaron 3 grupos de 7, 7 y 6 alumnos, respectivamente. La motivación de los trabajos de este ciclo fue la
creación de aplicaciones previamente inexistentes o el mejoramiento de aplicaciones previamente
existentes bajo diferentes enfoques. En este ciclo lectivo el docente únicamente enumeró los entregables
a producir por cada grupo, dejando librados a los mismos las técnicas y el proceso de desarrollo a
utilizar. Dichos grupos realizaron los siguientes trabajos:
• Motor de búsqueda en Internet. Este sistema fue escrito en Visual C++ sobre base de datos
Microsoft SQL Server 7.0 y es una demostración de la factibilidad de construcción de search engines
montados sobre bases de datos relacionales. Esta aplicación utiliza el modelo vectorial y permite
indexar y reconocer páginas HTML estáticas en idioma español e inglés. Las búsquedas por palabras
y frases funcionan con un grado muy elevado de precisión. El crawling es centralizado y se usa
breadth-first a partir de un conjunto dado de URLs.
• Herramienta extractora de métricas de software (de tamaño, estructura y lógica) de programas
escritos en Oracle PL/SQL, Oracle SQL*Forms 3.0 y Oracle Forms 4.5. Este sistema fue escrito en
Java sobre base de datos Oracle. Esta aplicación está compuesta por un parser, un módulo por cada
lenguaje y un recolector de métricas. La importancia de este sistema radica en que es el primero que
obtiene métricas de software de los 4GL de Oracle, que son entornos gráficos y manejados por
eventos, por lo cual se diferencian sustancialmente de los lenguajes de tercera generación (C, Pascal,
Ada, COBOL, etc.), sobre los cuales son habitualmente construidas este tipo de herramientas. Por
otra parte, esta aplicación produce una salida para herramientas de data mining.
• Sistema experto para determinar estrategia de indexación en bases de datos Oracle. Este sistema fue
escrito en Java sobre base de datos Oracle. La importancia de este sistema radica en que gran
cantidad de organizaciones compran aplicaciones empaquetadas (Enterprise Resource Planning,
Customer Relationship Management, etc.), de las cuales obtienen únicamente los ejecutables y no
los fuentes, y en muchos casos, como por ejemplo SAP R/3 o JDEdwards, las sentencias SQL que
acceden a la base de datos son generadas dinámicamente, por lo cual la única forma de realizar
performance tuning sobre dichas sentencias es enfocarse sobre los índices. Esta herramienta analiza
los índices existentes y eventualmente recomienda eliminar alguno(s). También analiza las tablas
existentes y de acuerdo a sus volúmenes, cardinalidad de los valores de cada columna y distribución
de los datos, eventualmente recomienda crear alguno(s). Por último, analiza las sentencias ejecutadas
para eventualmente determinar la mejor estrategia de indexación para dichas sentencias.
4. Perspectivas inmediatas para el ciclo lectivo 2001
Para el presente ciclo lectivo, el objetivo en la asignatura Ingeniería de Software es la investigación en
los siguientes temas:
• Métodos y modelos de estimación de esfuerzo, tiempo y costo en desarrollo de software.
• Métricas en proyectos de desarrollo de software (especialmente métricas de diseño orientado a
objetos).
• Determinación de los mejores predictores de reusabilidad de componentes de software.
• Determinación de los mejores predictores de defectos o fallas en el software a los efectos de realizar
mantenimiento preventivo.
• Administración de riesgos en proyectos de software.
• Economía del software.
Se espera, al menos, tomar algunos de los temas previamente citados para poder desarrollar proyectos
durante el presente año, en el cual se cambió el texto principal de Pressman [Pressman 1998] por el de
Pfleeger [Pfleeger 2001], que posee un enfoque más orientado en el proceso.
