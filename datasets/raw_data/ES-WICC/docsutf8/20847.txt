Modelo de sistemas tutores inteligentes multiagente
﻿
Se presenta una línea de investigación del Proyecto 
de la Facultad de Ingeniería de la Universidad de 
Buenos Aires I015: Manufactura Integrada por 
Computadora en Sistemas Complejos para el 
Desarrollo Social, Industrial y de Tecnología. 
Se introduce conceptos básicos de los campos en 
los que incursiona esta línea de investigación: 
Sistemas Tutores Inteligentes (STI) y Sistemas 
Multiagentes (SMA). 
Se describe los aspectos esenciales que se deben 
considerar en el modelado de un sistema tutor 
inteligente utilizando la tecnología de agentes y se 
propone el modelo de uno en particular, 
especialmente su modelo de datos. 
Palabras Clave: Tecnología Aplicada a la 
Educación. Sistemas Tutores Inteligentes. 
SISTEMAS TUTORES 
INTELIGENTES 
Introducción  
La idea de aprovechar herramientas informáticas en 
la enseñanza se remonta a los años 50. Un Sistema 
Tutor Inteligente (STI) es un sistema de enseñanza 
asistida por computadora, que utiliza técnicas de 
Inteligencia Artificial (AI), principalmente para 
representar el conocimiento y dirigir una estrategia 
de enseñanza.  
Se les atribuye “inteligencia” a estos sistemas por 
su capacidad de resolver los problemas que 
presenta a los estudiantes y de explicar cómo lo 
hacen. Los STI se caracterizan por representar 
separadamente la materia que se enseña (modelo 
del dominio) y las estrategias para enseñarla 
(modelo pedagógico). Por otro lado, caracterizan al 
alumno (modelo del estudiante) para procurar una 
enseñanza individualizada. Además, de una manera 
cada vez más necesaria y al igual que cualquier 
software que se comunica con usuarios, la interfaz 
de comunicación se corresponde con un módulo 
bien planificado, de fácil manipulación y que 
favorece el proceso de comunicación tutor-alumno. 
[5] 
Arquitectura  
Los STI poseen una estructura modular donde cada 
módulo además de desempeñar una función 
específica dentro de la arquitectura, está 
interrelacionado y en sincronía con los demás. [7] 
Módulo del Alumno: Almacena 
informaciones específicas para cada estudiante de 
forma individual. Como mínimo, este módulo debe 
mantener un histórico sobre cómo está trabajando el 
estudiante con el material en cuestión. Es 
interesante también mantener registro sobre los 
errores del estudiante. El módulo del alumno 
representa el conocimiento y las habilidades 
cognitivas del alumno en un momento dado. 
Contiene una representación del estado del 
conocimiento del alumno en el momento que 
interactúa con el STI. A partir de ese modelo y del 
contenido representado en la base del dominio, el 
sistema debe ser capaz de inferir la mejor estrategia 
de acción a ser utilizada para cada alumno. [5] 
Módulo Tutor: El módulo pedagógico 
ofrece una metodología para el proceso de 
aprendizaje. Posee el conocimiento sobre las 
estrategias y tácticas para seleccionarlas en función 
de las características del alumno y determina la 
manera en que la información será representada. 
Ejecuta el diagnóstico del conocimiento del alumno 
[7]. Las entradas de este módulo son ofrecidas por 
el Módulo del Alumno. 
Módulo del Dominio: El módulo del 
dominio almacena  la información que el tutor está 
enseñando. El modelado del conocimiento a ser 
transferido es de gran  importancia para el éxito del 
sistema como un todo. Se debe procurar una 
representación del conocimiento que esté preparada 
para el crecimiento incremental del dominio. Este 
modelo sirve como base para la construcción del 
Modelo del Alumno [7]. 
Interfaz: Intermedia la interacción entre el 
tutor y el alumno. Presenta el material apropiado al 
nivel de entendimiento del alumno y mantiene la 
coherencia en las explicaciones [7]. 
 
SISTEMAS MULTIAGENTE 
Antecedentes 
Actualmente muchos de los ambientes de 
enseñanza y de aprendizaje computarizados en la 
modalidad de STI utilizan la tecnología de agentes 
en su proyecto. Este abordaje orientado a agentes, 
sustituye a los módulos de la arquitectura 
tradicional por una sociedad de agentes que 
trabajan en forma cooperativa  usando diversas 
técnicas de IA e integrados como un SMA. [3] 
Fundamentos  
Los SMA constituyen un tratamiento de la IAD 
cuyo foco de investigación son los agentes.  
Un Agente Inteligente es, desde un punto de vista 
ideal, aquel que responde al ambiente con la mejor 
decisión posible en una situación dada. Un agente 
se puede definir como una entidad de software que 
exhibe un comportamiento  autónomo, que está 
situado en algún ambiente sobre el cual es capaz de 
realizar acciones para alcanzar sus propios 
objetivos de proyecto y a partir del cual  percibe 
alteraciones. Posee un conjunto de propiedades 
específicas asociadas a su papel en la sociedad 
multiagente donde está inserto. Deben ser 
racionales, de tal forma que tomen la mejor 
decisión posible en un momento dado.  
Siendo un agente una entidad que encapsula 
conocimiento sobre algún dominio, nada más 
natural que agrupar agentes que poseen parte del 
conocimiento involucrado en la estrategia de 
resolución de un problema y que, a partir de eso, 
interactúen con el objetivo de complementar sus 
habilidades.  Se puede componer una sociedad de 
agentes donde para cada agente se proporcione un 
subconjunto de las habilidades requeridas por la 
estrategia de solución, donde a cada uno se le 
asigne parte de las tareas a ser cumplidas, de 
acuerdo con su disponibilidad de recursos. A este 
agrupamiento se le denomina SMA. [4] 
Aspectos a Considerar en el Proyecto de un 
SMA 
Las características de los paradigma multiagente 
impone necesidades que deben ser viabilizadas para 
que el sistema pueda ser considerado eficaz. Moulin 
y Chaib-Draa proponen un marco de trabajo que 
ofrece una estructura de análisis y clasificación de 
la mayor parte de las actividades de investigación 
en SMA, del cual se pueden citar dos perspectivas 
[4]. 
Perspectiva del Agente: enfoca elementos 
que caracterizan el agente involucrado en un SMA. 
Son ellos: categorías de agente, estructura y 
mantenimiento del conocimiento, habilidades de 
razonamiento, habilidades de adaptación y 
aprendizaje, y arquitecturas de agente. 
Perspectiva de Grupo: reúne aspectos de 
grupo, tales como: organización, coordinación, 
cooperación, negociación, comportamiento 
coherente, planeamiento, comunicación e 
interacción. Estos aspectos se pueden agrupar en: 
· Aspectos fundamentales: garantizan la 
compatibilidad entre las acciones de los 
agentes que constituyen el sistema. 
· Aspectos Arquitecturales: definen las 
características que deben ser suministradas 
para la viabilización de los aspectos 
fundamentales dentro de un SMA. 
· Aspectos Ambientales: definen las 
características del ambiente en el cual se 
insertarán los agentes del SMA. 
Modelado de STI con SMA 
La característica esencial del abordaje SMA es la 
filosofía de resolución distribuida de problemas, en 
la cual se adopta una estrategia de dividir para 
conquistar. La resolución cooperativa distribuida de 
problemas consiste en que un problema se divide en 
subproblemas y cada uno se soluciona 
separadamente por medio de un agente, cada uno de 
ellos comunicándose o cooperando entre sí cuando 
fuera necesario, con la idea básica de que la suma 
de los resultados locales corresponderá a la 
solución del problema general. [2] 
Las propuestas de utilización de arquitecturas SMA 
en STI aportan una gran ventaja en relación a las 
arquitecturas tradicionales de STI por presentar 
flexibilidad en el tratamiento de los elementos que 
componen el sistema. Además, el hecho de usar 
agentes para modelar sus componentes, posibilita el 
agrupamiento de la arquitectura tradicional (un 
módulo = un agente) o la explosión de cada módulo 
en varios agentes. [1] 
MODELO 
El diagrama de clases entidad de esta sección 
modela la información maestra del sistema, relativa 
al dominio de conocimiento o situación del sistema 
tutor. 
Para cada alumno registrado en el sistema los 
agentes del módulo de interacción registrarán 
referencias a estos datos como información 
transaccional, es decir, para reflejar las veces que el 
alumno accedió a cada material (agente monitor de 
navegación) y características de su interacción con 
el mismo (agente monitor de concentración), así 
como la calificación de las evaluaciones que se le 
hayan efectuado (agente de registro de 
evaluaciones).  
Cabe destacar que este modelo permite evaluar 
tanto conocimientos como habilidades, y tanto en 
función de la organización temática del domino 
como en función de cuánto ha aprehendido el 
alumno los principios fundamentales del campo 
disciplinar que cruzan horizontalmente los temas. 
El módulo tutor o de ofrecimientos se organiza con 
un conjunto de agentes representantes de distintas 
estrategias de enseñanza, compuestos a su vez por 
un agente del saber y otro del saber hacer, que 
negociarán sus interacciones en función de la 
evolución de cada alumno. 
Cada agente tutor analizará la información 
registrada para un alumno cuando éste se conecte, y 
en función de su interacción con el sistema en la 
sesión actual y del historial de interacciones 
negociará con el resto de los agentes tutores su 
participación para presentarle material o 
evaluaciones. 
La clase asociación Inherencia se caracteriza por un 
escalar entre 0 y 1 que represente el grado de 
compromiso de un material con el principio 
asociado. 
La clase asociación Importancia se caracteriza por 
un valor escalar entre 0 y 1 que represente el grado 
de importancia o de contribución de un material con 
el tema asociado. 
Preguntas y Problemas se clasifican como material, 
ya que pueden ser presentadas al alumno junto con 
las respuestas y soluciones acertadas o alternativas 
como una estrategia de enseñanza por casos por 
parte de un agente tutor. Pero también un agente 
tutor puede presentar una pregunta o problema 
junto con respuestas o soluciones alternativas para 
evaluar cuánto sabe o cuánto sabe hacer el alumno 
sobre un tema. 
La clase asociación Evaluación se caracteriza por 
un valor escalar que represente el grado de 
corrección de una respuesta o solución en relación a 
una pregunta o problema, y la asociación Violación 
con Principio indica si una respuesta viola un 
principio.
Artículo SimulaciónDefinición
Importancia
Unidad
MaterialInherencia
Respuesta
Pregunta
1..n
1..n
Solución
Problema
1..n
1..n
Práctica
Procedimental
Teórica
Conceptual
Principio
0..n
0..n
Evaluación
0..n
0..n
Violación
Tema
0..n
1
0..n
1..n
0..n
0..n
Precedencia
+requiriente
+requerido
Arquitectura 
El módulo de dominio o situación se constituye por 
las clases entidad y por clases de control para 
orientar la carga de material didáctico que permitan 
evaluar la consistencia y completitud de los datos. 
El módulo tutor o de ofrecimientos se constituye 
por clases de control que implementan agentes, a 
razón de un agente por modelo de aprendizaje que 
se desee considerar. 
El módulo de interacción se constituye por clases 
entidad que agrupan historiales de acceso y de 
evaluación, y clases de control para implementar 
los agentes monitores de navegación y 
concentración, de registro de evaluaciones y 
perfilador de estudiantes; este último evalúa los 
registros sobre cada alumno para determinar su 
perfil de aprendizaje y, en cada sesión de un 
alumno darle intervención a los agentes tutores más 
adecuados. 
Tecnología 
Aunque el sistema planteado es multi-tecnología, se 
está desarrollando una implementación en lenguaje 
Java, sobre el framework J2EE, con arquitectura de 
Web-Services. 
RESULTADOS ESPERADOS 
Se está desarrollando el sistema en entorno web y 
se prevé utilizarlo como complemento de la 
enseñanza y monitoreo de alumnos en cursos de dos 
materias donde cumplen funciones los autores. Una 
de las materias es de formación básica para todas 
las carreras de la Facultad de Ingeniería excepto 
para las de Informática y Electrónica, y la otra es de 
formación técnica para las carreras de Informática. 
La primer materia tiene como contenidos 
arquitectura de computadoras, sistemas operativos y 
redes y programación en lenguaje Pascal, y se 
caracteriza por la heterogeneidad de los alumnos en 
cuanto a carreras que cursan y a nivel de formación, 
ya que pueden cursarla alumnos de siete carreras 
distintas y en distintos estadios de las mismas; a 
esto se suma una falta de motivación e interés 
generales debido a que los contenidos no resultan 
familiares a los alumnos por no ser específicos de la 
carrera que han elegido y porque la carga horaria de 
cuatro horas semanales de cursado durante un 
cuatrimestre resulta insuficiente para que 
desarrollen habilidades mínimas en programación. 
En este caso se espera que el sistema funcione 
como nivelador y motivador de los alumnos, y 
permita descargar tiempo de desarrollo de algunos 
temas colaterales para concentrar la labor docente 
en la práctica de programación. 
La segunda materia se caracteriza por su sobrecarga 
de contenidos y la limitación de tiempo de 
desarrollo, ya que se trata de una materia 
cuatrimestral de seis horas de cursado semanales; 
además, a esto se suma inconveniente de que la 
mayoría de los alumno trabaja y no asiste a clases 
en forma regular. En este caso la expectativa es que 
el sistema funcione específicamente como 
complemento de enseñanza y para que los alumnos 
dediquen más tiempo con el mayor provecho 
posible a la maduración de conceptos. 
CONCLUSIONES 
Los autores consideran que el sistema en desarrollo 
constituye una herramienta indispensable como 
complemento de la enseñanza en el aula y garantía 
de la calidad del aprendizaje en universidades 
metropolitanas como la UBA, que se caracterizan 
porque la mayor parte de sus alumnos comienzan a 
trabajar en etapas tempranas del cursado de sus 
carreras y con cargas horarias importantes; también 
resultaría muy útil para la enseñanza a distancia 
dadas las posibilidades de acceso por Internet. 
Tanto en la organización de contenidos y las reglas 
e interfaces para cargar el material como en las 
heurísticas que se consideran para los agentes 
tutores se pone especial cuidado de respetar el 
aprendizaje incremental y significativo por parte de 
los alumnos. 
