Diferentes heurísticas para la solución de problemas de máquina única en entornos dinámicos
﻿
Existen dos conceptos de importancia en el contexto 
de problemas dinámicos y en particular de 
scheduling dinámicos: la búsqueda de soluciones 
robustas y flexibles. El concepto de robustez de las 
soluciones se refiere a un tipo de soluciones que 
pueden ser usadas de igual manera cuando se 
produce un cambio en el entorno y manteniendo su 
calidad relativa. En el caso de flexibilidad, se refiere 
a la posibilidad de que las soluciones encontradas 
puedan ser adaptadas sin mayores problemas cuando 
se produzca un cambio en el entorno. En 
consecuencia, soluciones robustas y flexibles son 
altamente deseables en este tipo de contexto.  
Para un problema de scheduling se podrían presentar 
dos niveles de dinamismo: uno de ellos establece un 
dinamismo en el cual el problema puede ser dividido 
en varios problemas estáticos, llamado “dinamismo 
off-line” [33], [3]; el otro nivel de dinamismo apunta 
a estudiar el comportamiento de un algoritmo 
cuando se producen cambios en el entorno, pero 
durante el proceso de búsqueda y se lo denomina 
“dinamismo on-line”.  
Los problemas de scheduling off-line han sido 
estudiados por distintos investigadores usando para 
su resolución distintas metaheurísticas: Simulating 
Annealing, Tabu Search, Algoritmos Evolutivos y 
Ant Colony Algorithms. Pero pocos han encarado los 
problemas de scheduling on-line; para problemas de 
job shop [4], [5], [6], [7], [8] y para problemas de 
máquina única [9], [10], [11], [12], [13] y [14]. Este 
trabajo presenta la línea de investigación a través de 
la cual se pretende comparar los trabajos realizados 
hasta el momento sobre scheduling dinámico con 
algoritmos evolutivos para problemas de máquina 
única, con otra metaheurística diferentes como es el 
caso de la Colonia de Hormigas. 
  
1. INTRODUCCIÓN 
Un proceso de scheduling implica seleccionar y 
secuenciar actividades tal que ellas cumplan uno o 
más objetivos y satisfagan un conjunto de 
restricciones del dominio del problema. Durante este 
proceso se deberá  seleccionar entre schedules 
(planes o planificaciones) alternativos y asignar 
recursos y tiempos a cada actividad de manera tal 
que dichas asignaciones respeten las restricciones 
temporales de las actividades (jobs) y las 
capacidades limitadas de un conjunto de recursos 
compartidos, de manera que ciertas funciones 
objetivo (por ejemplo tardiness, makespan, etc.) 
sean minimizadas. 
En general, dentro del ámbito de scheduling, los 
modelos más estudiados fueron los modelos 
conocidos como estáticos u off-line, es decir, donde 
las actividades, los recursos, los tiempos de 
procesamiento están predefinidos, no se modifican 
durante el proceso, y con un objetivo involucrando 
la minimización del tiempo de finalización y los 
costos de operación. Pero en los problemas del 
mundo real existen otra serie de decisiones que 
interactúan con el modelo clásico, como por ejemplo 
cambiar la cantidad y/o configuración interna de los 
recursos mientras el proceso de scheduling está en 
avance para balancear los cambios en la carga de los 
jobs que arriban al sistema; o puede aumentar o 
disminuir la cantidad de operarios en el sistema, en 
distintos momentos del día; o uno o más recursos 
pueden deshabilitarse temporalmente por razones de 
falla o mantenimiento. Si algunas de estas decisiones 
se adicionan a dicho modelo  se obtienen los 
modelos de scheduling dinámicos u on-line.  
Los modelos de este tipo implican una 
reconfiguración interna dinámica del proceso de 
scheduling para adaptarlo a la nueva situación del 
contexto. También pueden existir causas externas 
que necesiten una reconfiguración, por ejemplo 
cambio, por parte de los clientes, en las fechas de 
entrega en función de sus stocks y demandas [1]. 
Uno de los problemas más importantes de 
scheduling es el de máquina única  que consiste en 
el secuenciamiento de un conjunto de tareas para ser 
procesadas por un único recurso. El estudio de este 
tipo de problemas es importante  porque, a menudo,  
aparece embebido en un problema de scheduling 
más complejo [2]. Por ejemplo, en un entorno de 
planificación de tareas sobre múltiples máquinas 
existe una máquina crítica, cuello de botella, cuya 
capacidad de procesamiento es más lenta que el 
requerido por el resto. Un tratamiento de la máquina 
crítica como un problema de scheduling de máquina 
única puede mejorar notablemente la solución del 
problema más complejo 
 
2. AMBIENTES DINÁMICOS 
Siempre que ocurre un cambio en un problema de 
optimización dinámico, ya sea cuando cambia el 
objetivo de optimización, la instancia del problema, 
o algún cambio de restricciones, el óptimo 
probablemente también cambiará, por lo que seria 
necesaria una adaptación de la vieja solución.  
Un enfoque estándar para tratar con esos 
dinamismos, es considerar a cada cambio como el 
arribo de un nuevo problema de optimización que 
tiene que ser resuelto desde el principio [15]. Sin 
embargo, resolviendo un problema desde el 
principio sin re-usar información del pasado, 
consume demasiado tiempo, debido a que un cambio 
puede no ser identificado directamente, o porque la 
solución del nuevo problema no debería diferir 
demasiado de la solución del viejo problema. 
Considerando que no todos los ambientes dinámicos 
son equivalentes, y que dinámicas diferentes 
probablemente requieren diferentes enfoques de 
optimización, se pueden definir un número de 
criterios a través de los cuales los ambientes 
dinámicos puedan ser categorizados [25]. Basados 
en esta categorización, uno podría eventualmente 
caracterizar clases de ambientes dinámicos para el 
cual un algoritmo es mas conveniente que otro. 
• Frecuencia de cambio: ¿Cada cuánto tiempo o 
con qué frecuencia cambia el ambiente? Algunas 
veces muchas comparaciones dependen de los 
detalles de implementación y hardware, y ya que 
usualmente el número de evaluaciones en los 
AEs es el factor de determinación de tiempo, el 
número promedio de evaluaciones entre los 
cambios debería ser en una medida apropiada. 
Solamente si existen otros aspectos relevantes 
para el tiempo de computación de la evaluación, 
debería necesitarse para las comparaciones entre 
enfoques, el tiempo real entre los cambios del 
entorno. 
• Severidad del cambio: ¿El sistema tuvo sólo un 
cambio leve o generó una situación 
completamente nueva? Esto está determinado 
principalmente por la distancia genotípica desde 
el viejo al nuevo óptimo, pero pueden haber 
otros aspectos como por ejemplo, si el nuevo 
óptimo puede ser obtenido desde el viejo óptimo 
por un hill climbing simple, el tamaño del 
espacio de búsqueda, o la probabilidad que el 
nuevo óptimo se alcanzará desde el viejo óptimo 
por una mutación simple.  
• Predecibilidad del cambio: ¿Se genera un patrón 
o tendencia en los cambios, o son sólo 
aleatorios? ¿Es posible predecir la dirección, 
tiempo o severidad del siguiente cambio 
considerando los cambios encontrados hasta 
ahora? 
• Duración del ciclo / Precisión del ciclo: ¿El 
óptimo retorna a las situaciones anteriores o por 
lo menos se acerca a ellos? Y si es así, ¿Cuanto 
de cerca? Aquí uno debería medir el número 
promedio de estados del ambiente entre dos 
encuentros consecutivos del mismo estado (o uno 
muy similar). Si el nuevo estado no es 
exactamente el mismo, pero varía levemente, 
entonces la distancia adicional del nuevo estado 
a la solución previamente encontrada, es 
importante. La duración y precisión del ciclo 
podría determinar si la memorización de las 
soluciones previas es una estrategia útil. 
Parece difícil medir algunas de estas características, 
o más aún, pueden estar fuera del alcance las 
comparaciones entre diferentes problemas de 
optimización, pero al menos éstas características 
pueden ser variadas en un problema simple tal que 
puede ser examinada su influencia de calidad sobre 
un AE específico. Además de las propiedades del 
ambiente, puede ser interesante para el diseño de un 
AE, considerar los siguientes aspectos: ¿Las 
ocurrencias de un cambio son conocidas 
explícitamente por el sistema o tienen que ser 
detectadas?, ¿Es necesario cambiar la representación 
genética ya que ésta está afectada por un cambio?, la 
característica que cambia, ¿Es equivalente a uno en 
la función de optimización, la instancia del problema 
o algunas restricciones?, y a menudo, ¿Las 
soluciones producidas por el AE pueden influir en el 
ambiente?. 
Una categorización alternativa ha sido propuesta 
recientemente en [16]. Aquí, los ambientes pueden 
ser clasificados como constante (el mismo cambio 
en cualquier período), estacionario (no cambia), 
periódico (retorna al estado anterior), homogéneos 
(el landscape completo moviéndose coherentemente, 
como opuesto a partes diferentes comportándose 
diferentemente), y alternativos (saltos óptimos desde 
un componente/máximo del landscape hacia otro). 
Además de las posibles clasificaciones y/o 
alternativas de cambios en el entorno, existe una 
cuestión muy importante a tener en cuenta. Dicha 
cuestión es la manera en que se evalúan los 
algoritmos propuestos para un problema dinámico. 
En este sentido, las comparaciones no son tan 
directas como lo podrían ser en un entorno estático. 
Por lo tanto, es también es necesario analizar 
cuidadosamente estos aspectos al momento de hacer 
afirmaciones acerca de la calidad de los algoritmos 
propuestos. En el caso de problemas de scheduling 
dinámico, se pueden considerar diferentes aspectos 
que acercan a la formulación general los problemas 
reales como: cambio de las fechas límites de 
terminación de las tareas (due dates) o cambios en el 
tiempo de procesamiento o duración de una tarea. 
Las alternativas anteriores son interesantes, pero 
están más relacionadas a aspectos más teóricos del 
problema de dinamismo en general. Si bien se 
podrían considerar para su implementación, existen 
otras que son más específicas de los problemas de 
scheduling. Por ejemplo: de nuevas tareas durante el 
proceso de asignación de recursos (mayor es el 
número de tareas, mayor es la severidad del 
cambio), igual al anterior pero  eliminando de tareas, 
rotura de máquinas, etc. Aunque estos tipos de 
cambios son más complejos de manejar, son más 
cercanos a situaciones encontradas en el mundo real.  
 
3. METAHEURÍSTICAS PARA AMBIENTES 
DINÁMICOS 
Considerando las características de los ambientes 
dinámicos, sería deseable contar con un algoritmo de 
optimización que sea capaz de ir adaptando 
continuamente la solución a los cambios del entorno, 
re-usando la información obtenida en el pasado. Los 
Algoritmos Evolutivos parecen ser los candidatos 
apropiados ya que tienen mucho en común con la 
evolución natural, y la adaptación en la naturaleza es 
un proceso continuo. La primera aplicación conocida 
de AEs a entornos dinámicos, fue en 1966 [20].  
El problema principal con los Algoritmos Evolutivos 
estándar, es que ellos convergen eventualmente a un 
óptimo y pierden así su diversidad que es necesaria 
para explorar eficientemente el espacio de búsqueda. 
Así, una vez que la población del algoritmo 
evolutivo converge, ésta también pierde su habilidad 
para adaptarse a un cambio en el entorno cuando tal 
cambio ocurre. En consecuencia, se requiere de 
mecanismos adicionales que provean permanente 
diversidad en la población sin perturbar el proceso 
de búsqueda. 
Para resolver de manera práctica instancias grandes, 
frecuentemente se usan métodos aproximados que 
retornan soluciones cercanas al óptimo en un tiempo 
relativamente corto. Los algoritmos de este tipo son 
llamados en términos generales heurísticas. Ellos 
usan a menudo un poco de conocimiento específico 
del problema para construir o mejorar soluciones. 
Estas heurísticas pueden clasificarse dentro de las 
categorías de explotativas, llamadas así porque 
inspeccionan el espacio de búsqueda en el 
vecindario de una solución posible [18].  En general 
consisten en obtener una solución factible de partida 
y luego, ir modificándola  levemente, es decir, 
permaneciendo en el vecindario de dicha solución y 
evaluar cada nuevo schedule y cuando no exista 
mejora el método finaliza; explorativas, que pueden 
ser pensadas que actúan, en determinado momento 
del proceso al no avanzar hacia nuevas soluciones, 
diciendo “es tiempo de un cambio” [21] lo cual se 
traduce en realizar un salto a otro punto del espacio 
de búsqueda (no del vecindario); y las 
explorativas/explotativas que son las tendencias 
más modernas y que tratan de hallar heurísticas con 
estrategias de explotación/exploración mixtas. 
Dentro de ellas cabe mencionar Tabu Search [19], 
Simulating Annealing [22], Algoritmos Evolutivos 
[23] y Algoritmos de Colonia de Hormigas (ACO) 
[24]. 
Recientemente, muchos investigadores tienen 
enfocada su atención sobre una nueva clase de 
algoritmos, llamados metaheuristicas. Una 
metaheuristica es un conjunto de conceptos 
algorítmicos que se pueden usar para definir 
métodos heurísticos aplicables a un conjunto amplio 
de problemas de optimización en un tiempo 
razonable. 
Una metaheuristica particularmente exitosa está 
inspirada para el comportamiento de las hormigas 
reales, conocida como la metaheurística ACO. 
Numerosos enfoques algorítmicos basados sobre las 
mismas fueron desarrollados y aplicados con éxito 
para una variedad de problemas de optimización 
[26], [27], [28], [29], [30], [31] y [32]. 
 
4. LÍNEAS DE INVESTIGACIÓN 
Hasta el momento existen varias publicaciones 
realizadas por este grupo de investigación para 
diferentes problemas de scheduling dinámico en 
entornos de maquina única [11], [12], [13] y [14]. 
Todos estos problemas han sido desarrollados sin 
restricciones, por lo que se intentará incorporar a 
estos problemas, algunas restricciones que hasta el 
momento no han sido analizadas tales como 
preemption vs nonpreempion, inserción vs no 
inserción de  tiempo ocioso, set up dependientes de 
la secuencia, dependencia entre jobs (precedence 
constrainsts) entre otros. Además de hacer un 
análisis profundo sobre los diferentes modelos 
dinámicos. 
Actualmente la investigación está orientada al 
estudio de las diferentes heurísticas para ambientes 
dinámicos, desarrolladas hasta la fecha 
especialmente las evolutivas y de colonia de 
hormigas, orientado siempre al problema de 
máquina única dinámico. Se prevé el diseño e 
implementación de diferentes heurísticas 
alternativas, como así también  de experimentos que 
permitan poder realizar la evaluación de las 
heurísticas desarrolladas y analizar los resultados 
obtenidos para cada una de ellas a los fines de poder 
realizar una comparación de resultados que nos 
indique cuál es la mejor heurística a utilizar para el 
modelo dinámico planteado (si es que sólo una 
existe). 
5.
