Procesamiento de ontologías inconsistentes en la Web semántica usando argumentación rebatible reporte de progreso
﻿
La Web Semántica es una visión futura de la Web en la cual la información tiene un significado exacto definido en términos de ontologías. Una ontología define un vocabulario en términos
de una jerarquía de conceptos e individuos que pertenecen a tales conceptos. Una ontología es
anómala cuando es incoherente o inconsistente; estas situaciones se caracterizan por la presencia
de definiciones de conceptos vacíos y por contradicciones lógicas, respectivamente. La argumentación rebatible es un tipo de razonamiento no-monótono que produce conclusiones tentativas en
presencia de información incompleta y potencialmente contradictoria. En esta línea de investigación, exploramos la aplicación de la argumentación rebatible al procesamiento de ontologías
inconsistentes en la Web Semántica. En este artículo, presentamos brevemente la problemática
asociada, recapitulamos los resultados obtenidos y discutimos el trabajo en progreso.
Palabras clave: Inteligencia Artificial, Razonamiento no-monótono, Argumentación rebatible, Programación en Lógica Rebatible, Web Semántica, Ontologías, Lógicas para la Descripción, Agentes
inteligentes
Contexto: Esta línea de investigación está financiada por la Agencia Nacional de Promoción Científica y Tecnológica, por el Consejo Nacional de Investigaciones Científicas y Técnicas (CONICET,
Argentina), por el Ministerio de Educación y Cultura (España) y por la Universidad Nacional del Sur.
1. Introducción y motivaciones
La Web Semántica es una visión futura de la Web donde el significado de los recursos web se
define en forma precisa para permitir su procesamiento por agentes [3]. La Web actual está formada
por documentos HTML formateados para su presentación a usuarios humanos. El éxito de la web a
nivel de usuarios finales se debe a que la información se halla presentada en modo textual. Este modo
textual no es adecuado para su entendimiento por agentes o programas inteligentes, quienes deben
recurrir a la presencia o ausencia de palabras claves para determinar la relevancia de un determinado
documento web. En la Web Semántica el significado de los términos presentes en una página web se
halla definido precisamente por medio de una o varias ontologías. Una ontología es una formalización
de una parte de un dominio de aplicación [13].
Existen varios acercamientos al problema de la definición de ontologías en la Web Semántica. El
lenguaje RDF [14] es el más simple, pero al brindar flexibilidad hace que el tratamiento de su caso
1LIDIA es un miembro del IICyTI (Instituto de Investigación en Ciencia y Tecnología Informática).
general sea indecidible computacionalmente. Otro lenguaje de representación de ontologías es RDFSchema [4], que permite definir una jerarquía de clases o conceptos junto con atributos y relaciones
con dominio y codominio en tales clases. Sin embargo, la necesidad de expresar restricciones más
adecuadas (como por ejemplo, expresar que dos clases son disjuntas) llevó a la necesidad del desarrollo de un nuevo lenguaje llamado OWL [15]. OWL contiene tres sublenguajes: OWL-Lite (el cual es
simple y debería ser suficiente para muchos usuarios finales), OWL-DL (el cual se halla basado en las
Lógicas para la Descripción) y OWL-Full (que provee los mismos constructores que OWL-DL pero
permite representar situaciones más ricas que lo hacen computacionalmente indecidible).
La semántica del lenguaje OWL-DL se halla basada en las Lógicas para la Descripción. Las Lógicas para la Descripción (DL) [1] son una familia de formalismos de representación de conocimiento
basados en las nociones de conceptos (predicados unarios, clases) y roles (relaciones binarias), y están
principalmente caracterizados por constructores que permiten describir conceptos complejos y roles
a partir de otros atómicos usando conjunción, disyunción, negación, restricciones (cuantificaciones)
existencial y de valor, entre otros. Una ontología DL consiste de dos conjuntos finitos y mutuamente disjuntos: una Tbox que introduce la terminología y una Abox que contiene aserciones acerca de
objetos particulares en el dominio de aplicación. Las sentencias de la Tbox representan inclusiones o
equivalencias de descripciones (posiblemente complejas) de conceptos.
Una de las tareas de razonamiento que se pueden realizar con ontologías es el chequeo de instancia, el cual consiste en determinar si un individuo determinado es o no instancia de un concepto
dado. Las anomalías que pueden surgir a la hora de computar el chequeo de instancia son dos: la
incoherencia y la inconsistencia. Una ontología es incoherente cuando contiene definiciones de conceptos vacíos. En cambio, una ontología es inconsistente cuando no tiene modelo (i.e., la ontología es
incoherente pero además se han declarado explícita o implícitamente individuos en las clases incoherentes).
El éxito de la iniciativa para la Web Semántica se apoya en la existencia de razonadores existentes
(e.g., Racer, Fact, Pellet), los que permiten razonar con ontologías coherentes y consistentes exclusivamente. Desde un punto de vista lógico, el problema con las ontologías inconsistentes estriba en que
no es posible decidir si un individuo pertenece o no a una determinada clase. Sin embargo, si bien
tales razonadores son capaces de reconocer ontologías incoherentes e inconsistentes, el ingeniero de
conocimiento solamente es notificado de tal situación.
Hay dos maneras no excluyentes de tratar el problema de la inconsistencia. Una consiste en reparar la ontología; es decir, hacerla nuevamente coherente y consistente. Esta opción muchas veces
es imposible de llevar a cabo por varios motivos, entre los que se cuentan que el ingeniero de conocimiento no tiene autoridad ni el conocimiento para corregir una ontología, una ontología puede
estar basada en otras ontologías importadas, o el dominio a modelar puede ser intrínsecamente inconsistente. Una segunda manera de lidiar con el problema de la inconsistencia en ontologías consiste
en aceptar la inconsistencia y utilizar un mecanismo de razonamiento no-estándar para obtener alguna respuesta significativa. En nuestro acercamiento al razonamiento con ontologías inconsistentes
aplicamos la argumentación rebatible para llevar a cabo el segundo enfoque.
El estudio de la argumentación puede ser considerado concerniente con cómo las aserciones son
propuestas, discutidas y resueltas en el contexto de asuntos en los cuales se pueden mantener varias opiniones divergentes [18, 5, 2]. Tales opiniones divergentes son llamadas argumentos. Dado un
argumento todos los contraargumentos del mismo son considerados, los contraargumentos de estos
últimos y así sucesivamente para formar un árbol de dialéctica. Cuando un contraargumento es derrotado por otro contraargumento, se dice que el argumento inicialmente atacado es reinstaurado.
Los argumentos que son raíz de algún árbol de dialéctica en el cual todos sus derrotadores (si los
hubiera) se hallan derrotados se dicen argumentos garantizados y los mismos son considerados las
conclusiones válidas del sistema argumentativo.
En particular, la Programación en Lógica Rebatible (DeLP) [6, 19] brinda un lenguaje de representación de conocimiento y razonamiento que combina la Programación en Lógica y la argumentación
rebatible. De esta manera, la codificación de conocimiento por medio de la DeLP provee un equilibrio
entre expresividad e implementabilidad, que permite lidiar con conocimiento potencialmente contradictorio. Sucintamente, un programa DeLP P se halla formado por un conjunto hechos, un conjunto
de reglas rebatibles (o tentativas) y un conjunto de reglas estrictas. Dada una consulta con respecto a
P , representada por un literal lógico L, el mecanismo de razonamiento forma argumentos a favor y en
contra de L, y, mediante un análisis dialéctico, se determina su estado de garantía dando una respuesta
que puede ser S Í (cuando L se halla garantizado), NO (cuando la negación de L se halla garantizada)
o INDECISO (cuando no es posible llegar a una conclusión).
Por otro lado, estudios recientes [12, 20] relacionan a las DL con el formalismo de la Programación en Lógica. Esta área de investigación se ha asentado con el nombre de Programación en Lógica
Descriptiva (o en inglés, Description Logic Programming o DLP). Básicamente, los axiomas de inclusión de clases de las Tboxes DL se corresponden con implicaciones lógicas de primer orden, las
cuales, a su vez, pueden ser expresadas como reglas Prolog. Además, las aserciones de las Aboxes
DL pueden ser expresadas como hechos en un programa Prolog. También, las conjunciones, disyunciones y restricciones existenciales y de valor pueden ser traducidas al lenguaje de la Programación
en Lógica bajo ciertas restricciones que permiten incluir más del noventa por ciento de las ontologías
existentes.
En la Sección 2 explicamos cómo esta línea de investigación integra a las Lógicas para la Descripción con la argumentación rebatible en un formalismo de razonamiento con ontologías posiblemente
inconsistentes llamado δ-ontologías, repasamos los resultados obtenidos, y, además, discutimos el
trabajo actual en progreso vislumbrando líneas futuras de investigación. Finalmente, en la Sección 3
detallamos la relación de esta línea de investigación con la formación de recursos humanos.
2. Resultados obtenidos / esperados
En esta línea de investigación exploramos los siguientes tópicos:
Representación de ontologías mediante argumentación rebatible
Razonamiento con ontologías inconsistentes utilizando argumentación rebatible
Caracterización formal de las propiedades emergentes del formalismo de razonamiento desarrollado
Análisis de las posibilidades de aplicación e implementación del formalismo desarrollado junto
con una evaluación empírica de su aplicación a ontologías reales.
A continuación resumimos los resultados obtenidos en este respecto y discutimos los resultados
esperados en el corto y mediano plazo para esta línea de investigación.
2.1. Resultados obtenidos
En trabajos previos [8, 9, 11], presentamos un formalismo de razonamiento con ontologías DL
posiblemente inconsistentes llamado δ-ontologías. Una δ-ontología conserva el lenguaje de representación de conocimiento de las ontologías DL tradicionales2 pero da semántica a tales ontologías como
programas DeLP. En una δ-ontología Σ, si bien la caja asercional tiene el mismo significado que en
2Como ontologías DL tradicionales, nos referimos a la interpretación dada por el texto de [1].
las ontologías DL tradicionales (i.e., es un conjunto de afirmaciones de perteneciencia de individuos a
conceptos y relaciones entre individuos), en cambio la terminología se encuentra dividida en un conjunto de axiomas terminológicos estrictos (o Sbox) y un conjunto de axiomas tentativos (o Dbox). De
esta manera, las aserciones de una δ-ontología se corresponden con los hechos de un programa DeLP,
mientras que la Sbox se corresponde con un conjunto de reglas estrictas y la Dbox con un conjunto de
reglas rebatibles. Así, en presencia de inconsistencias en la ontología, un análisis dialéctico es llevado
a cabo sobre el programa DeLP que interpreta Σ para computar las tareas de razonamiento típicas
tales como el chequeo de instancia y la recuperación de individuos.
En nuestras investigaciones hemos definido formalmente el marco de razonamiento de las δontologías y hemos caracterizado su comportamiento con un conjunto de ejemplos típicos. Por otro
lado, hemos estudiado una buena parte de las propiedades que emergen de la aplicación de tal formalismo al razonamiento con ontologías inconsistentes. También, hemos mostrado una aplicación del
formalismo introducido al problema de la integración de ontologías [9] y al problema del desarrollo
de formularios web inteligentes [10].
2.2. Resultados esperados
Nuestro trabajo de investigación actual está orientado hacia dos objetivos principales. Por un lado,
estamos interesados en completar la caracterización formal de las propiedades emergentes del formalismo de las δ-ontologías, entre las que se incluyen el estudio de estrategias para particionar Tboxes
DL automáticamente en Sboxes y Dboxes y aplicaciones al área de mezcla de ontologías.
Por otro lado, estamos interesados en el estudio de la implementabilidad computacional del sistema planteado. En este sentido se presentan particularmente atractivas el uso de las herramientas
servidor KAON y DLP [17]. Para facilitar el uso de DLP, Motik et. al. [17, 16] brindan la herramienta
de conversión dlpconvert que permite convertir fragmentos DLP codificados en OWL en sintaxis
de Edimburgh Prolog. dlpconvert está basado en los algoritmos para reducir Lógicas para la Descripción a Datalog implementado en KAON2. El sistema lee una ontología OWL, la reduce a Datalog
disyuntivo, si es posible, y finalmente la serializa como un programa lógico. Creemos que esta herramienta puede ser combinada con el servidor DeLP [7], el cual permite realizar consultas con respecto
a un programa rebatible en forma remota .
3. Formación de recursos humanos
Esta línea de investigación está relacionada con el desarrollo de una Tesis de Doctorado en Ciencias de la Computación inscripta en la Universidad Nacional del Sur.
Agradecimientos: Esta línea de investigación está financiada por la Agencia Nacional de Promoción Científica y Tecnológica (PICT 2002 No. 13.096, PICT 2003 No. 15.043, PAV 2004 076), y
por los Proyectos PIP 112-200801-02798 (CONICET, Argentina), TIN2006-15662-C02-01 (MEC,
Spain), PGI 24/ZN10 (SGCyT, UNS, Argentina) y la Universidad Nacional del Sur.
