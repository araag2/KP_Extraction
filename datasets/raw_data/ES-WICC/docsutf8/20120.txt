Sistemas de software distribuidos
﻿
Se presenta una línea de investigación y 
desarrollo, que tiene por objeto estudiar temas 
relacionados con aspectos de Ingeniería de 
Software orientados al desarrollo e 
implementación de proyectos concretos de 
Sistemas Distribuidos, en particular Sistemas 
Distribuidos con restricciones de Tiempo 
Real, Sistemas Web y Sistemas Sensibles al 
Contexto, considerando las extensiones 
necesarias en las metodologías y herramientas 
clásicas.   
En este sentido se trabaja en aspectos de la 
Ingeniería de Software de diferentes sistemas 
con inteligencia distribuida.  
Se ha logrado transferir los resultados de 
investigación a proyectos en diferentes 
ámbitos, aportar en la formación de recursos 
humanos y realizar publicaciones en 
congresos nacionales e internacionales. 
Palabras claves: Sistemas Distribuidos – Ingeniería de 
Requerimientos – Metodologías de Desarrollo – 
Sistemas Web  –Bases de Datos Distribuidas - 
Sistemas Distribuidos de Tiempo Real 
 
Contexto 
Esta línea de Investigación forma parte del 
Proyecto “Tecnología y aplicaciones en 
Sistemas de Software Distribuidos. 
Experiencias en E-learning, E-government y 
Sistemas productivos” del Instituto de 
Investigación en Informática LIDI de la 
Facultad de Informática, acreditado por la 
UNLP, y de proyectos específicos apoyados 
por diversos organismos. 
 
Introducción  
Un sistema distribuido consiste en un 
conjunto de computadoras autónomas 
conectadas por una red y con soporte de 
software distribuido. Permite que las 
computadoras coordinen sus actividades y 
compartan los recursos de hardware, software 
y datos, de manera tal que el usuario percibe 
una única facilidad de cómputo integrada, 
aunque ésta pueda estar implementada por 
varias máquinas en distintas ubicaciones [1]. 
El desarrollo de sistemas distribuidos es una 
necesidad a partir de la utilización de redes de 
computadoras y de computadoras personales 
de alta performance. 
Algunas ventajas del procesamiento 
distribuido son: 
 Mejora de la disponibilidad: la operación 
es factible en una configuración reducida 
cuando algunos nodos están 
temporalmente no disponibles.  
 Configuración más flexible: una 
aplicación puede configurarse de distintas 
maneras, seleccionando el número 
apropiado de nodos para una instancia 
dada.  
 Control y administración más localizada: 
un subsistema distribuido, ejecutando en 
su propio nodo, puede diseñarse para ser 
autónomo, de modo que puede ejecutar en 
relativa independencia de otros 
subsistemas en otros nodos. 
 Expansión incremental del sistema: si 
existe sobrecarga, el sistema puede 
expandirse agregando más nodos. 
 Costo reducido: con frecuencia una 
solución distribuida es más barata que una 
centralizada.  
 Balance de carga: en algunas aplicaciones 
la carga total del sistema puede ser 
compartida entre varios nodos. 
 Manejo eficiente de datos distribuidos 
físicamente. 
 Mejora en el tiempo de respuesta: los 
usuarios locales en nodos locales pueden 
obtener respuestas más rápidas a sus 
requerimientos. 
Las características de los Sistemas 
Distribuidos conducen a la utilidad de 
desarrollar prácticas de Ingeniería de 
Software que apunten a los distintos aspectos 
del desarrollo de sistemas desde la captura de 
requerimientos y la planificación, pasando por 
las metodologías de desarrollo, hasta la 
verificación y simulación de procesos 
distribuidos, incluyendo el aseguramiento de 
calidad. 
En particular un sistema distribuido de tiempo 
real debe interactuar con el mundo real, en 
puntos físicamente distantes y no 
necesariamente fijos, en períodos de tiempo 
determinados por el contexto o las 
restricciones de la especificación (en muchos 
casos a partir de una activación asincrónica).  
Algunas de las dificultades principales del 
desarrollo de software para sistemas  
distribuidos de tiempo real son: 
 Modelizar condiciones de concurrencia y 
paralelismo. 
 Manejar las comunicaciones interprocesos e inter-procesadores. 
 Tratamiento de señales en tiempo real. 
 Tratamiento de interrupciones y mensajes 
asincrónicos con diferente prioridad. 
 Detectar y controlar condiciones de falla, 
a nivel de software, de procesadores y de 
comunicaciones. Prever diferentes grados 
de recuperación del sistema. 
 Asegurar la confiabilidad de los datos y 
analizar su migración en condiciones de 
funcionamiento normal o de falla. 
 Organizar y despachar la atención de 
procesos, manejando las restricciones de 
tiempo especificadas. 
 Testear y poner a punto un sistema 
físicamente distribuido. 
Todas estas dificultades conducen a la 
utilidad de desarrollar herramientas de 
Ingeniería de Software orientadas a STR y 
SDTR, de modo de trabajar en la 
modelización, especificación y verificación 
del software considerando las restricciones 
temporales. 
La Ingeniería de Software comprende la 
aplicación de principios científicos para 
generar una solución elaborada de software 
que resuelva un problema determinado, y el 
mantenimiento subsecuente de ese sistema de 
software hasta el final de su vida útil [2]. La 
utilización de estas prácticas para resolver 
Sistemas Distribuidos, de Tiempo Real o 
Sensibles al Contexto,  hace necesaria su 
adaptación en función de las características de 
dichos sistemas.   
La adopción de un enfoque ingenieril para el 
desarrollo de software, genera una serie de 
fases o estados conformando un ciclo de vida. 
Este ciclo de vida esta guiado por una 
planificación que incluye el conjunto de 
acciones a realizar, y los productos generados 
por la aplicación del plan (inclusive el mismo 
plan) están administrados por diferentes 
Metodologías de Gestión y Desarrollo [3]. 
En el recorrido del ciclo de vida del desarrollo 
del software, la fase inicial comprende a la 
Ingeniería de Requerimientos que permite 
comprender, documentar y acordar sobre el 
alcance del problema, teniendo esto impacto 
directo sobre la Planificación y la Gestión del 
Proyecto de acuerdo a la Metodología de 
desarrollo seleccionada para el mismo [4]. 
Este no es el único impacto que justifica el 
énfasis en la Ingeniería de Requerimientos, ya 
que esta disciplina permite establecer 
claramente que se debe hacer posponiendo el 
cómo a etapas posteriores en el ciclo de vida, 
constituyendo el fundamento de la 
construcción de un Sistema de Software [5]. 
El modelo de procesos elegido para el 
desarrollo de software define las actividades a 
realizar para la generación de productos de 
acuerdo a los objetivos planteados [6]. 
Asociado con la Ingeniería de Software de 
Sistemas Distribuidos, está el problema de 
utilizar un entorno WEB para los servicios 
que ofrece el Sistema. El desarrollo de 
arquitecturas centradas en un servidor (o un 
conjunto de servidores distribuidos) que 
ofrecen una interfaz WEB a los usuarios, ha 
generado un importante desarrollo en la 
Investigación de metodologías y  
herramientas orientadas a Sistemas WEB, así 
como ha generado la necesidad de establecer 
nuevas métricas y parámetros de 
aseguramiento de la Calidad para tales 
Sistemas [7] [8] [9]. 
Por otra parte, los Sistemas Sensibles al 
Contexto representan una rama emergente de 
los Sistemas de Software, que si bien es 
incipiente, tiene una amplia aceptación y 
varias áreas, tales como Inmótica, Domótica, 
E-commerce, entre otras. 
La característica fundamental de los Sistemas 
Sensibles al Contexto es su adaptación 
constante a lo que sucede en el entorno de la 
aplicación; es decir, la respuesta del sistema 
se ajusta a los cambios que suceden en su 
contexto. La necesidad de aplicar un proceso 
de Ingeniería de Requerimientos es razón de 
análisis e investigación de la comunidad de 
Ingeniería de Software para este tipo de 
sistemas.  
Por último, el modelo distribuido de datos 
hace posible la integración de BD 
heterogéneas proveyendo una independencia 
global del administrador de bases de datos  
respecto del esquema conceptual [10] [11] 
[13].  
Líneas de Investigación y Desarrollo 
 Conceptos de procesamiento distribuido. 
Arquitectura, comunicaciones y software. 
Middleware. 
 Metodologías de especificación, 
validación y desarrollo de SSD y SSDTR. 
 Metodologías ágiles de desarrollo 
utilizando frameworks propios y 
disponibles de uso libre con diferentes 
tecnologías.  
 Ingeniería de Requerimientos, en 
particular de Sistemas Distribuidos.  
 Ingeniería de Requerimientos para 
Sistemas Sensibles al Contexto.  
 Planificación de tareas para desarrollo de 
sistemas distribuidos. 
 Bases de Datos Distribuidas  
 Herramientas de integración y 
mantenimiento de proyectos distribuidos. 
 Lenguajes y ambientes para 
procesamiento distribuido.  
 Reingeniería de sistemas complejos que 
migran por down-sizing a esquemas 
cliente-servidor distribuidos. 
 Sistemas de Tiempo Real. Sistemas 
Distribuidos de Tiempo Real. 
 Tratamiento de señales en tiempo real. 
 Sistemas de control de robots en tiempo 
real. Algoritmos colaborativos entre 
máquinas móviles. 
 Sistemas con identificación segura en 
tiempo real. 
 
Resultados esperados/obtenidos 
Los resultados esperados/obtenidos se pueden 
resumir en: 
 Avanzar en la capacitación continua de los 
miembros de la línea de investigación. 
 Desarrollar soluciones a problemas 
concretos de software de sistemas 
distribuidos, poniendo énfasis en el 
desarrollo de metodologías y herramientas 
específicas para clases de aplicaciones.  
 Se ha logrado extender proceso de 
Ingeniería de Requerimientos de 
Loucopoulos y Karakostas [4], 
incorporando el tratamiento de 
información de contexto. Se han 
presentado casos de estudio reales en las 
áreas de Inmótica y Domótica. 
Se mencionan algunas transferencias 
realizadas: 
3.1 Seguridad Monitoreada con Nuevas 
tecnologías en el Municipio de Florencio 
Varela. 
En el marco de un convenio con el Municipio 
de Florencio Varela y el Foro de Ciencia y 
Tecnología para la Producción, financiado por 
el Ministerio de Planificación Federal, se han 
definido diferentes procesos para aplicar en el 
tratamiento de incidentes registrados a través 
de una sala de monitoreo de cámaras,  
localizadores satelitales y oficina de situación 
para centralizar el control de crisis. 
Específicamente se han desarrollado planes de 
contingencia para una serie de 
eventos o situaciones, que pueden surgir a 
partir de la observación de las cámaras de 
monitoreo por parte de personal calificado. 
Algunos de los planes definidos (ya 
aprobados por el Municipio) abarcan el 
tratamiento de: 
 Accidentes vehiculares. 
 Detección de puestos ilegales de 
venta de diversos productos en la vía 
pública.  
 Consumo de sustancias prohibidas en la 
vía pública. 
 Semáforos sin funcionar 
 Deterioro de Pavimentos. 
 Trifulcas en la vía pública. 
 Solicitud de identificación/ubicación de 
personas por parte de las fuerzas 
policiales. 
Estos planes abarcan la definición y límites de 
cada evento, el nivel de severidad, el plan 
propiamente dicho a llevar a cabo, la 
documentación que se debe cumplimentar, y 
un workflow general que resume cada plan. 
Además se incluye la generación de un 
registro de atención de eventos para luego 
poder obtener datos estadísticos confiables 
de demoras en tiempos de atención, que 
permitirán en un futuro dimensionar 
las áreas de trabajo vinculadas con el 
municipio.  
El III-LIDI ha definido protocolos de 
aplicación a situaciones emergentes, con el 
objetivo de mejorar la calidad de vida de los 
habitantes del Municipio de Florencio Varela. 
3.2 Instituto Nacional de Semillas (INASE): 
El Instituto Nacional de Semillas dependiente 
del Ministerio de Agricultura, Ganadería y 
Pesca de la Nación fiscaliza la 
comercialización de semillas para siembra, 
con el propósito de certificar la calidad de 
estas semillas.  
Para realizar este control, el organismo utiliza 
un Sistema Web donde se tramitan las 
presentaciones realizadas ante el INASE por 
las empresas vendedoras de semillas.  
El III-LIDI, ha realizado el proceso de 
reingeniería de este Sistema y ha incorporado 
la gestión del proceso de fiscalización de 
semillas en tránsito. 
En la última etapa del proyecto, se ha 
desarrollado un nuevo esquema de Seguridad, 
implementando una nueva política donde los 
usuarios externos a este organismo, pueden 
definir nuevos usuarios acotados a su entorno 
de funciones disponibles. 
El resultado logrado es el fortalecimiento del 
proceso de control de calidad de 
comercialización de semillas, particularmente 
la fiscalización de semillas que se transportan 
entre distintas plantas del país, así como la 
implementación de una nueva política de 
seguridad, flexible y adaptable de acuerdo a 
las necesidades de los usuarios internos y 
externos al organismo. 
3.3 Convenio con Dirección de Servicios 
Sociales del Ministerio de Seguridad de la 
Provincia de Buenos Aires  
Este proyecto tuvo como eje central, la 
realización de un monitoreo de los procesos 
llevados a cabo en la División de Informática 
de este organismo, cuya finalidad es brindar 
desarrollo y mantenimiento de sistemas 
informáticos de la Obra Social de Policías 
activos y pasivos de la Provincia de Buenos 
Aires.  
El resultado logrado es un conjunto de 
recomendaciones fundamentadas de mejora. 
Dichas recomendaciones han sido priorizadas, 
y su implementación a los procesos de esta 
Institución, permiten lograr un perfil de 
calificación compatible con Certificación de 
Calidad de procesos en el desarrollo de 
Software [12]. 
E-Government 
Desde el año 2003 se trabaja en aplicaciones 
en esta área, entre los cuales se pueden 
mencionar: 
 Desarrollo de equipos específicos para 
Voto Electrónico y consultas populares 
aplicables en diferentes áreas y desarrollo 
de software para diferentes modelos de 
elecciones/consultas: 
 Desarrollo y experimentación de una urna 
electrónica y su software parametrizable 
para elecciones en Argentina 
(Municipales, Provinciales, Nacionales). 
Estudio de Casos en Bs. As. y Tierra del 
Fuego [19] [20]. 
 Desarrollo de una terminal integral 
utilizada como puesto de Voto Electrónico 
en la Facultad de Informática de la UNLP 
desde 2007 para las elecciones 
estudiantiles. 
 Desarrollo e implementación del E-Vote 
sobre Internet, utilizado en la Facultad de 
Informática y las Sedes Regionales desde 
2008 [21] [22]. 
 Desarrollo del software para las 
elecciones del claustro de Profesores, 
Graduados y No docentes de la Facultad 
de Informática de la UNLP en el año 2009. 
 Evolución de la terminal de voto 
electrónico para identificación biométrica 
de los estudiantes (a través de las huellas 
dactilares) en las elecciones 2009. 
 Estudio y aplicación de sistemas de 
Identificación biométrica: 
 Experiencia de sistemas de trámites WEB 
basados en identificación segura con estos 
equipos y contra BD de tamaño creciente, 
centralizadas y distribuidas [23]. 
 Registración automática de presencias de 
los alumnos ingresantes a la Facultad de 
Informática 2010 a través de las huellas 
dactilares. 
 Reconocimiento a través del iris en 
ámbitos de alta seguridad en los que no se 
pueden utilizar las huellas dactilares, por 
ejemplo  en las Penitenciarías.  
 Auditoría de sistemas (hardware y 
software): 
 Auditoría y certificación de los equipos de 
Voto Electrónico aprobados en la Pcia. de 
Río Negro y desarrollados por ALTEC SE  
[24] [25]. 
 Auditoría del software de recuento e 
integración de datos en las elecciones de 
Río Negro.  
 Participación en el ESI Center Cono Sur 
Argentina, para la certificación de calidad 
de distintos procesos de gestión pública 
[26]. 
 Asesoramientos: 
  A la Municipalidad de La Plata en el 
proyecto de Terminales inteligentes para 
información turística de la ciudad. 
  A la Facultad de Ciencias Económicas 
para la utilización de datos biométricos 
en los procesos de asistencia a cursos de 
Postgrado. 
  A Universidades del país para el 
desarrollo de equipos de Voto 
Electrónico. 
Formación de Recursos Humanos 
Los integrantes de esta línea de investigación 
dirigen Tesinas de Grado y Tesis de 
Postgrado en la Facultad de Informática, y 
Becarios III-LIDI en temas relacionados con 
el proyecto. Además participan en el dictado 
de asignaturas/cursos de grado y postgrado de 
la Facultad de Informática de la UNLP. 
 
