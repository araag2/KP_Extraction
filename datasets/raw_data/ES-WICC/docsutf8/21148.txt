Manejo del espacio restringido con Algoritmos Genéticos para la descomposición en Suma de Minkowski
﻿  
En esta presentación damos aspectos relevantes a la Suma de Minkowski, los antecedentes 
relacionados a nuestra investigación y al estado del arte del mismo, exponiendo el problema 
actualmente en estudio. El mismo se refiere al problema inverso al resuelto por la suma de 
Minkowski: dado un polígono S, ¿existen polígonos P y Q tales que S es la suma de 
Minkowski de P y Q, es decir,  S = P ⊕ Q?. Para ello describimos los enfoques utilizados 
en su resolución y planteamos los problemas surgidos colateralmente, merecedores de un 
estudio y análisis en particular.  
 
  
1. Introducción 
Nuestro trabajo se desarrolla dentro de la línea Geometría Computacional y Bases de Datos 
del Proyecto Tecnologías Avanzadas de Bases de Datos 22/F314, con el apoyo de integrantes del 
grupo LIDIC, y en colaboración con docentes de la Universidad Politécnica de Madrid.  
En esta línea de trabajo, uno de los temas de investigación se ha centrado principalmente en el 
estudio de las sumas de Minkowski. Hemos estudiado sus propiedades geométricas y aplicaciones 
más destacadas, presentando los aspectos teóricos y prácticos relevantes, como así también hemos 
desarrollado una herramienta que implementa la suma de Minkowski entre distintos tipos de 
polígonos [3], [7], [8], [9]. También realizamos una propuesta para mejorar el cálculo de la suma de 
Minkowski de polígonos haciendo énfasis en el rendimiento de los algoritmos que la calculan 
basándonos en técnicas de paralelismo [11]. 
Actualmente estamos trabajando en el problema inverso al resuelto por la suma de 
Minkowski, el cual se refiere a la descomposición de polígonos en sumas de Minkowski [10]. Este 
problema se puede resolver con un algoritmo de complejidad exponencial. Debido a la complejidad 
inherente del mismo, propusimos un enfoque evolutivo utilizando Algoritmos Genéticos para su 
resolución. La propuesta incluyó la definición del problema, denominado SMINK-1, en términos de 
una función objetivo, el diseño e implementación de un algoritmo genético y su aplicación a un 
conjunto de instancias del problema [12], [13].  
Este artículo está organizado de la siguiente manera, en la sección 2 explicamos brevemente 
el problema de la descomposición de polígonos en Suma de Minkowski. Seguidamente, en la 
sección 3 se presenta una solución al problema usando algoritmos genéticos y planteamos los 
problemas surgidos colateralmente. Finalmente, consideramos las conclusiones y propuestas de 
trabajos  futuros.  
 
2. Problema de la descomposición de polígonos en  sumas de Minkowski 
Dados dos conjuntos P y Q ⊂ R2 la suma de Minkowski de P y Q, denotada por P ⊕ Q se 
define como P ⊕ Q = {p + q : p ∈ P, q ∈Q } donde p+q es el vector suma de los vectores p y q. 
Estamos estudiando el problema inverso al resuelto por la suma de Minkowski, que 
denominamos SMINK-1. Dado un polígono S de n lados, queremos encontrar dos polígonos P y Q 
de k y k lados respectivamente, tales que S sea la suma de Minkowski de P y Q, es decir, S=P ⊕ Q.  
 Para el caso de que el  polígono S dado es un polígono convexo, los posibles sumandos P y Q 
también deben ser convexos, entonces después de un análisis de  las propiedades geométricas de los 
conjuntos convexos y de la suma de Minkowski caracterizamos cuando un polígono S admite un 
sumando de Minkowski. El algoritmo que detecta si un polígono convexo S de n lados, admite un 
polígono convexo de m lados como sumando de Minkowski tiene una complejidad de O(nm). En 
cambio, para saber si el polígono S admite un sumando de Minkowski de número no precisado de 
lados, la complejidad de un posible algoritmo es de orden exponencial [10],[12].   
Debido a la complejidad del algoritmo que resuelve este problema trabajamos sobre una 
propuesta para resolverlo utilizando Algoritmos Genéticos y un análisis de posibles situaciones que 
podían ocurrir en la evaluación de una solución. Así, en [13] presentamos resultados preliminares 
sobre un conjunto pequeño de instancias generadas para probar la aplicabilidad del algoritmo 
genético.   
 
3. Solución para SMINK-1 usando un algoritmo genético  
La idea en general del algoritmo genético es la siguiente, elegimos cierta cantidad de lados de 
S en orden y armamos un polígono P. Luego, el polígono Q se obtiene con los lados restantes de S. 
Calculamos P ⊕ Q, obteniendo S. Luego debemos comparar S con S,  para saber cuánto se 
aproxima la solución obtenida a S. Una vez obtenidos los posibles candidatos P y Q, y luego de 
calcular P ⊕ Q,  comparamos cuánto se aproxima esta solución a S. Para ello determinamos una 
medida de la diferencia entre P ⊕ Q y S. La medida elegida es el área de la diferencia simétrica 
entre ambos polígonos, denotada ∆,  y es la función objetivo a minimizar. 
Más formalmente, sea S un polígono convexo de n lados. Sea P  el conjunto de todos los 
posibles polígonos de k lados, con 2 <= k<=n-2. El problema consiste en:  
Min f (P)= Area( (P ⊕ Q)∆ S) 
donde P y Q ∈ P  y Q se construye con los lados de S que no forman parte del polígono P. 
Para representar un polígono P usamos un string binario de n bits. Un 1 en el gen i significa 
que el lado i de S forma parte del polígono P, y un 0 que no forma parte, con la restricción de que 
en el cromosoma hay entre 2 y n-2 bits con valor 1.  
Los resultados preliminares mostrados en [13] indicaron que el problema SMINK-1 no es un 
problema trivial en el sentido que el espacio de búsqueda, dada la representación elegida para las 
soluciones, está constituido por un reducido porcentaje de soluciones factibles.  
Por lo tanto continuamos trabajando con un análisis del espacio de búsqueda de SMINK-1, y 
aumentamos el tamaño del espacio de soluciones factibles. En el proceso de  decodificación original  
propuesto en [13] una cadena binaria puede dar lugar a una solución no factible, es decir, un 
polígono que no sea cerrado, o que no sea  convexo o que no sea simple. Esta situación  se puede  
evitar si realizamos una descodificación extendida de manera tal que el polígono que se obtenga  
siempre tenga las características de factibilidad requeridas. 
 
 
x 
 DE 
 D
 
 CC
 
 P
 
 P
 
 
Figura 1: Proceso de  descodificación extendido 
 
En la figura 1 mostramos el proceso de descodificación extendido DE. Para una cadena binaria 
x ∈{0,1}n, se aplica un proceso de descodificación D obteniendo una representación geométrica 
para un polígono P, que puede no cumplir con los requerimientos de factibilidad establecidos para 
una solución. A continuación aplicamos un proceso de ajuste a P, para obtener un polígono P que 
es una aproximación (por ejemplo, cierre convexo) al polígono P que cumple con todas las 
condiciones de factibilidad requeridas.  
Por otro lado, en el desarrollo y prueba de este tipo de algoritmos es importante contar con un 
adecuado conjunto de instancias de variado tamaño y complejidad, generadas aleatoriamente para 
prueba y/o verificación del algoritmo. La generación de objetos geométricos en forma aleatoria, 
además de ser un problema de interés teórico, tiene aplicaciones que incluyen el testeo y 
verificación  de la complejidad temporal de algoritmos de la geometría computacional [1] [14]. En 
nuestro problema de descomposición estudiamos la generación aleatoria de polígonos, tanto 
generales como convexos y actualmente estamos trabajando en el desarrollo de  un generador 
aleatorio de polígonos  convexos.   
 
4. Conclusiones  
Este trabajo se enmarca en el Proyecto Tecnologías Avanzadas de Bases de Datos 22/F314 
dentro de la línea de trabajo en Geometría Computacional y Bases de Datos, esta parcialmente 
subvencionado por el Proyecto AL05_PF_0042 Geometría Computacional, de la Universidad 
Politécnica de Madrid y  con el apoyo de integrantes del grupo LIDIC, específicamente de la línea 
Metaheurísticas. 
En este artículo mostramos el uso de una descodificación extendida a fin de considerar  
soluciones no factibles como factibles y de este modo ampliar el espacio de soluciones del 
Algoritmo Genético.  Asimismo, proponemos la generación de aleatoria de polígonos convexos que 
serán necesarios para el estudio experimental. Actualmente, continuamos trabajando en el  
Algoritmo Genético y un estudio experimental más exhaustivo.  
 
 5.
