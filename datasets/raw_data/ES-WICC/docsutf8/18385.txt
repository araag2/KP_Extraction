Extensiones a la programación en lógica rebatible para modelar reglas con disyunciones en la cabeza aplicaciones al razonamiento con ontologías potencialmente inconsistentes
﻿
Esta propuesta de investigación se basa en el estudio
de las posibilidades de extender la sintaxis del lenguaje
de la Programación en Lógica Rebatible (DeLP) para
permitir la representación de disyunciones en la cabeza de las reglas y, luego, redefinir acordemente las nociones de construcción de argumentos, ataque, derrota, garantía y resultados de consultas. Este nuevo marco argumentativo permitirá modelar el razonamiento
sobre ontologías Description Logics que posean disyunciones en el miembro derecho de los axiomas de
inclusión de sus respectivas terminologías.
Palabras clave: Inteligencia Artificial, Razonamiento no-monótono, Argumentación rebatible, Programación en Lógica Rebatible, Web Semántica, Ontologías,
Lógicas para la Descripción, Programación en Lógica
Disyuntiva, Agentes inteligentes
Contexto
Esta línea de investigación está enmarcada en el
Proyecto de Grupos de Investigación “Representación
de conocimiento y Razonamiento Argumentativo: Herramientas Inteligentes para la Web y las Bases de Datos Federadas” (Código 24/N030) de la Universidad
Nacional del Sur.
*LIDIA es un miembro del IICyTI (Instituto de Investigación
en Ciencia y Tecnología Informática).
1. Objetivos de investigación
El objetivo general de esta propuesta de investigación es brindar un lenguaje de representación de conocimiento con capacidades extendidas en el entorno
de la Web y el esfuerzo por introducir en ella la capacidad de representar conocimiento y razonar acerca
de su contenido. A continuación, primero daremos el
contexto global de la investigación y luego mencionaremos los objetivos específicos.
La World Wide Web está formada por documentos
formateados para su consumo por usuarios humanos.
La Web Semántica [3] es una visión alternativa de la
Web donde los recursos tienen un significado exacto dado por medio de ontologías. Así, agentes inteligentes con poder delegado por sus usuarios propietarios son capaces de razonar sobre el contenido de la
Web incrementando la precisión de los resultados de
búsquedas de documentos y servicios. Las ontologías
se definen en el lenguaje OWL (una sintaxis XML
para Lógicas para la Descripción o DL) y están formadas por definiciones de clases (o conceptos) y relaciones entre tales clases junto con la especificación
de a qué clases los individuos pertenecen y las relaciones (ambos dados en la forma de axiomas de inclusión) que se mantienen entre ellos de tal manera
que razonadores pueden determinar automáticamente
la pertenencia de individuos a clases especificadas en
forma implícita. Sin embargo, cuando las ontologías
son inconsistentes (situación capturada en términos de
una contradicción lógica) los razonadores brindan un
descripción de la ubicación del error y el ingeniero
de conocimiento debe depurar la ontología (es decir,
hacerla consistente) antes de poder continuar. Esta siWICC 2012 78
2012 XIV Workshop de Investigadores en Ciencias de la Computación
tuación no es deseable ya que muchas veces la construcción de una ontología depende del contenido de
otras ontologías importadas sobre las que el ingeniero de conocimiento no tiene autoridad para modificar
o de la especificación de un campo de conocimiento
inherentemente contradictorio. Con esta motivación,
Gómez et al. [6] desarrollaron un formalismo llamado
δ-ontologías que permite razonar con ontologías potencialmente contradictorias utilizando la Programación en Lógica Rebatible (DeLP), el cual se basa en la
idea de interpretar ontologías DL en el lenguaje de la
DeLP. Así, la pertenencia de un individuo a una clase
determinada es determinada por medio de un análisis
dialéctico llevado a cabo sobre el programa obtenido a
partir de una ontología (que tiene significado equivalente a la misma).
Sin embargo, el acercamiento mencionado arriba
tiene varias limitaciones. Una de ellas está dada por
el caso de la traducción de axiomas de inclusión que
generan reglas con disyunciones en la cabeza no es tratable dentro del marco de la Programación en Lógica
Rebatible.
El objetivo específico de esta propuesta de investigación es el estudio y formalización de una extensión a la Programación en Lógica Rebatible que permita razonar con reglas que posean disyunciones en
la cabeza. Se extenderá el lenguaje de la programación en lógica rebatible, la noción de derivación de literales, construcción de argumentos, ataque y derrota
y garantía. Se estudiarán también las posibilidades de
implementación computacional del marco desarrollado con miras al razonamiento con ontologías posiblemente inconsistentes cuya traducción a DeLP generen
disyunciones en la cabeza de las reglas. Esto último
redundará en la construcción de agentes inteligentes
que razonen sobre la información presente en la Web
Semántica.
2. Antecedentes de investigación
2.1. Marco teórico de la propuesta
Argumentación en Inteligencia Artificial: Uno de
los objetivos de la Inteligencia Artificial es lograr que
un agente inteligente tenga la capacidad de extraer
conclusiones plausibles basadas en información incompleta y manejar de manera adecuada información
potencialmente inconsistente. Las limitaciones de la
lógica de primer orden para lograr este objetivo han
llevado a diferentes enfoques alternativos, siendo la
argumentación rebatible [2, 5] es uno de los acercamientos que ha ganado mayor aceptación en los últimos años.
El estudio de la argumentación involucra analizar
cómo las aserciones son propuestas, discutidas y resueltas en el contexto de cuestiones en las cuales se
pueden mantener varias opiniones divergentes [2]. Tales opiniones divergentes son llamadas argumentos.
Dado un argumento todos los contraargumentos del
mismo son considerados, los contraargumentos de estos últimos y así sucesivamente para formar un árbol
de dialéctica. Cuando un contraargumento es derrotado por otro contraargumento, se dice que el argumento
inicialmente atacado es reinstaurado. Los argumentos
que son raíz de algún árbol de dialéctica en el cual
todos sus derrotadores (si los hubiera) se hallan derrotados se dicen argumentos garantizados y los mismos
son considerados las conclusiones válidas del sistema
argumentativo.
Ontologías para representar conocimiento: La
Web Semántica es una visión futura de la Web donde el significado de los recursos web se define en forma precisa para permitir su procesamiento por agentes [3]. La Web actual está formada por documentos
HTML textuales formateados para su presentación a
usuarios humanos, lo que hace que no sean adecuados
para su entendimiento por agentes o programas inteligentes, quienes deben recurrir a la presencia o ausencia de palabras claves para determinar el significado de
un determinado documento web. En la Web Semántica
el significado de los términos presentes en una página
web se halla definido precisamente por medio de una o
varias ontologías. Una ontología es una formalización
de una parte de un dominio de aplicación [16]. Existen varios lenguajes de representación de ontologías
en la Web Semántica. El lenguaje RDF [17] es el más
simple a nivel conceptual, pero al brindar demasiada
flexibilidad hace que el tratamiento de su caso general sea indecidible computacionalmente. Otro lenguaje de representación de ontologías es RDFSchema [4],
que permite definir una jerarquía de clases o conceptos junto con atributos y relaciones con dominio y codominio en tales clases. Sin embargo, la necesidad de
expresar restricciones más adecuadas (como por ejemplo, expresar que dos clases son disjuntas) llevó a la
necesidad del desarrollo de un nuevo lenguaje llamado
OWL [18], que define el estándar actual. OWL contiene tres sublenguajes: OWL-Lite (el cual es simple
y debería ser suficiente para muchos usuarios finales),
OWL-DL (el cual se halla basado en las Lógicas para
la Descripción) y OWL-Full (que provee los mismos
WICC 2012 79
2012 XIV Workshop de Investigadores en Ciencias de la Computación
constructores que OWL-DL pero permite representar
situaciones más ricas que lo hacen computacionalmente indecidible).
La semántica del lenguaje OWL-DL se halla basada
en las Lógicas para la Descripción. Las Lógicas para
la Descripción (DL) [1] son una familia de formalismos de representación de conocimiento basados en las
nociones de conceptos (predicados unarios, clases) y
roles (relaciones binarias), y están principalmente caracterizados por constructores que permiten describir
conceptos complejos y roles a partir de otros atómicos usando conjunción, disyunción, negación, restricciones (cuantificaciones) existencial y de valor, entre
otros. Una ontología DL consiste de dos conjuntos finitos y mutuamente disjuntos: una Tbox que introduce
la terminología y una Abox que contiene aserciones
acerca de objetos particulares en el dominio de aplicación. Una de las tareas de razonamiento que se pueden realizar con ontologías es el chequeo de instancia,
el cual consiste en determinar si un individuo determinado es o no instancia de un concepto dado. Las
anomalías que pueden surgir a la hora de computar
el chequeo de instancia son dos: la incoherencia y la
inconsistencia. Una ontología es incoherente cuando
contiene definiciones de conceptos vacíos. En cambio,
una ontología es inconsistente cuando no tiene modelo
(i.e., la ontología es incoherente pero además se han
declarado explícita o implícitamente individuos en las
clases incoherentes). Como fue mencionado en los objetivos de esta propuesta el éxito de la iniciativa para
la Web Semántica se apoya en la existencia de razonadores existentes (e.g., Racer, Fact, y Pellet), los que
permiten razonar con ontologías coherentes y consistentes exclusivamente. Desde un punto de vista lógico, el problema con las ontologías inconsistentes estriba en que no es posible decidir si un individuo pertenece o no a una determinada clase. Sin embargo, si
bien tales razonadores son capaces de reconocer ontologías incoherentes e inconsistentes, el ingeniero de
conocimiento solamente es notificado de tal situación,
debiendo él mismo decidir cómo reparar la ontología.
Aplicaciones de la argumentación rebatible al razonamiento con ontologías inconsistentes: En los
trabajos previos publicados [8, 14] se abordó el tratamiento de ontologías inconsistentes a través de argumentación rebatible. La importancia de la definición de ontologías para poder llevar a cabo la realización de la iniciativa de la Web Semántica junto
con la presencia de ontologías incompletas y potencialmente contradictorias motivó el desarrollo de un
marco de razonamiento con las llamadas δ-ontologías;
se determinó que un subconjunto de las Lógicas para la Descripción pueden ser traducidas efectivamente a un conjunto de la Programación en Lógica Rebatible, manteniendo el significado de la ontología original. El acercamiento involucra asignar semántica a
ontologías expresadas en Lógicas para la Descripción
por medio de Programas Lógicos Rebatibles para lidiar con definiciones de ontologías inconsistentes en la
Web Semántica. Esto es, dada una ontología expresada
en el lenguaje OWL-DL, es posible construir un programa lógico rebatible equivalente. Por lo tanto, dada
una consulta acerca de la pertenencia de una instancia a un cierto concepto expresada con respecto de la
ontología original se realiza un análisis dialéctico con
respecto al programa rebatible para determinar todas
las razones a favor y en contra de la plausibilidad de la
afirmación sobre la pertenencia de tal individuo a una
clase.
Por otro lado, la integración de datos es el problema de combinar datos residiendo en diferentes fuentes y el brindar al usuario una vista unificada de dichos datos. El problema de diseñar sistemas de integración de datos es particularmente importante en el
contexto de aplicaciones en la Web Semántica donde las ontologías son desarrolladas independientemente unas de otras, y por esta razón pueden ser mutuamente inconsistentes. Dada una ontología, nos interesa conocer en qué condiciones un individuo es una
instancia de un cierto concepto. Debido a que cuando se consideran varias ontologías, los mismos conceptos pueden tener nombres distintos para un mismo significado o aún nombres iguales para significados diferentes, para relacionar los conceptos entre dos
ontologías diferentes se utilizaron reglas puente o de
articulación. En [6, 14, 13], se mostró también bajo
qué condiciones la propuesta del razonamiento con δontologías puede ser adaptada a los dos tipos de integración de ontologías global-as-view y local-as-view;
además, en [11, 12] se mostró cómo extender el marco de las δ-ontologías para agregar una capa de reglas
sobre ontologías inconsistentes.
Entre las aplicaciones comerciales de la propuesta
podemos hallar las siguientes. El razonamiento en presencia de ontologías inconsistentes brinda la posibilidad de abordar de una manera eficaz ciertos problemas de aplicación del ámbito del comercio electrónico, donde el modelo de reglas de negocio puede ser especificado en términos de ontologías. Entonces, la capacidad de razonar frente a ontologías inconsistentes
permite abordajes alternativos conceptualmente más
WICC 2012 80
2012 XIV Workshop de Investigadores en Ciencias de la Computación
claros, ya que es posible automatizar ciertas decisiones de negocios tomadas a la luz de un conjunto de
reglas de negocio posiblemente inconsistentes expresadas como una o varias ontologías y tener un sistema
capaz de brindar una explicación del porqué se arribó a
una conclusión determinada. En consecuencia, presentamos entonces una aplicación del razonamiento sobre
ontologías inconsistentes por medio de la argumentación rebatible al modelado de formularios en la World
Wide Web. La noción de los formularios como una manera de organizar y presentar datos ha sido utilizada
desde el comienzo de la World Wide Web. Los formularios Web han evolucionado junto con el desarrollo de
nuevos lenguajes de marcado, en los cuales es posible
proveer guiones de validación como parte del código
del formulario para verificar que el significado pretendido del formulario es correcto. Sin embargo, para el
diseñador del formulario, parte de este significado pretendido frecuentemente involucra otras características
que no son restricciones por sí mismas, sino más bien
atributos emergentes del formulario, los cuales brindan conclusiones plausibles en el contexto de información incompleta y potencialmente contradictoria. Como el valor de tales atributos puede cambiar en presencia de nuevo conocimiento, los llamamos atributos
rebatibles. Gómez et al.propusieron entonces extender
los formularios web para incorporar atributos rebatibles como parte del conocimiento que puede ser codificado por el diseñador del formulario, por medio de
los llamados δ-formularios; dicho conocimiento puede
ser especificado mediante un programa DeLP, y posteriormente, como una ontología expresada en Lógicas
para la Descripción [7, 9, 10].
Representación de la disyunción en la cabeza de
reglas: Para asignar semántica a una δ-ontología,
en [14] se definieron funciones de traducción de DL
a DeLP basadas en [15]. La premisa básica para realizar la traducción de ontologías DL a DeLP está basada en la observación de que un axioma de inclusión
de clases “C v D” (los individuos pertenecientes a
la clase C también pertenecen a la clase D) es interpretado como una sentencia de Lógica de Primer Orden “(∀x)(C(x) → D(x))”, la cual, a su vez, es vista
como una claúsula de Horn “d(X) ← c(X)”. Naturalmente, “C u D v E” es tratada como “e(X) ←
c(X), d(X)”. Las transformaciones de Lloyd-Topor
son usadas para manejar casos especiales como conjunciones en las cabezas de las reglas y disyunciones en el cuerpo de las reglas; así “C v D u E”
es interpretado como dos reglas “d(X) ← c(X)” y
“e(X)← c(X)” mientras que “CunionsqD v E” es transformado como “e(X) ← c(X)” y “e(X) ← d(X)”. De
la misma manera, los axiomas de la forma “∃r.C v D”
son tratados como “d(X)← r(X,Y ), c(Y )”. Un caso
que no es posible tratar actualmente en DeLP está dado
por la traducción de axiomas de inclusión de la forma
“C v D unionsq E”, que interpretados como “(∀x)(c(x) →
d(x)∨e(x))” generan disyunciones en la cabeza de las
reglas.
Programación en Lógica Disyuntiva: La Programación en Lógica Disyuntiva (Disjuntive Logic Programming) [19] surge en 1982 a partir del trabajo de
Jack Minker. Dado un lenguaje de primer orden L, un
programa lógico disyuntivo está formado por reglas
lógicas de inferencia de la forma:
A1 ∨ . . . ∨Ak ← B1 ∧ . . . ∧ not C1 ∧ . . . ∧ not Cn,
donde Ai, Bi y Ci son átomos en el lenguaje L;
k,m, n son números naturales, y not · denota la negación default. Para dar semántica a los programas lógicos disyuntivos hay tres alternativas: modelos estables
y parcialmente estables, semánticas bien-fundadas, y
semánticas de conjuntos de respuestas. Note que en
este último caso, los programas pueden contener negación clásica (llamados programas lógicos disyuntivos
extendidos).
2.2. Hipótesis de trabajo
Dada una ontología DL, los axiomas de inclusión
de la forma A u B v C unionsq D serán interpretados como
reglas de inferencia:
c(X) ∨ d(X)← a(X) ∧ b(X)
Dado que la semántica actual de DeLP es procedural,
la hipótesis de trabajo consiste en que es posible dar
una definición denotacional de la semántica de DeLP.
Tal acercamiento consistirá primero en extender la sintaxis de DeLP para permitir la representación de disyunciones en la cabeza de las reglas. Luego, se deberán
redefinir acordemente las nociones de construcción de
argumentos, ataque, derrota, garantía y resultados de
consultas.
