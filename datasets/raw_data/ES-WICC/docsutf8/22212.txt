Complementando las solicitudes con un monitoreo de red automatizado
﻿

i¡f..jri,_t".WJJi¡;.''!!!;;;''''''''''''i..!!@.LLu:'!t:rij$.# .. J\'ii\4! iiiJ."",T.r.-;:::-:-'J,wr;.r."'..-¡iáiiiiiij 
.. El objetivo de realizar monitoreo en una red es, generalmente, identificar un 
problema de performance o analizar aspectos de diseño y utilización de la misma. 
Para poder llevar a cabo esta tarea se debe comprender el entorno de los usuarios, las 
solicitudes de servicios que los mismos realizan y qué clase de respuestas obtienen. 
Una técnica comunmente utilizada en el análisis del comportamiento de una red 
es el proceso de registro de logs, logging, que provee información exhaustiva respecto 
de las actividades que realizan determinada población de usuarios. Actualmente 
existen cuatro categorías de logging: basado en el servidor, basado en el proxy, basado 
en el cliente y basado en la red (network monitoring) [1]. 
Luego de un análisis exhaustivo y una comparación de los métodos 
anteriormente mencionados, en el presente artículo se realiza una descripción de los 
mismos, comparándolos y analizando las ventajas y desventajas que presentan. En 
términos más específicos, considerando que la World Wide Web es en la actualidad 
una fuente dominante del tráfico en el backbone de Internet, y muy pronto también lo 
será en redes de área local, se seleccionan dos herramientas que permiten a estaciones 
de trabajo UNIX recolectar de la red logs ddl tráfico de Web[2]; y se estudia, entre 
otros, su eficiencia y performance. httpfilt, la primera de las herramientas analizadas, 
basada en tcpdump[3] , monitorea el tráfico desde y hacia ports específicos. 
httpdump[4] es la segunda herramienta analizada, que presenta mayor flexibilidad 
que la anterior y un aumento en la eficiencia como consecuencia de la utilización de 
un filtro de paquetes altamente optimizado[5]. 
1 - INrRODUCCIÓN 
Con el explosivo crecimiento de-la World Wide Web[6] surge la necesidad de 
caracterizar a quienes utilizan el servicio de Web y qué tipo de accesos se realizan. Por 
otra parte, para asistir al planeamiento del crecimiento de las redes de computadoras, 
quienes realizan network management[7] requieren información del tráfico actual 
generado por el Web y una proyección del tráfico futuro. Para responder a este tipo de 
preguntas, está disponible la siguiente técnica: 
Logging: un proceso de registro de logs que consiste en almacenar en un 
archivo, en forma automática, una secuencia de eventos de máquina 
- 2 observables. Normalmente, esos eventos son solicitudes (por e.icmplo: el 
rcil)!'lh' .k tUl dlK'lllllClltO, la ejecución de UIl scripL l'l dO\\"llload de lIll 
applet ... ) o J"espuest.1s (por ejemplo: docullIcntos contenidos cn una 
solicitud, salidas desde los scripts, código de applets, ... ). Técnicamentc, el 
logzing puede realizarse sin conocimiento de los usuarios, a pesar de que 
eventualmente esto podría ser prohibido por normas éticas o legales. 
1.1 - LOGGING 
El logginS puede representar un registro casi perfecto! de las solicitudes 
alcanzadas por un servidor de Web o por un proxy, siempre que hayan sido enviadas 
a través de la red o tipeadas en un browser. Existen distintos métodos para realizar 
logging, y los mismos se pueden caracterizar utilizando el lugar de la Web desde 
donde se recolecta la información. 
En la arquitectura de Web más sencilla, cada vez que un cliente envía una 
solicitud, es enviado un paquete HTTP (Hypertext Transfer Protocol)[8] sobre la red, 
desde el cliente hacia el servidor nombrado en el campo URL (Universal Resource 
Locator) [9] de la solicitud. Luego el servidor retorna uno o más paquetes conteniendo 
o bien la respuesta, o bien un código de error. Dicha arquitectura es algo más 
compleja cuando se lltilizan servidores proxy, ya sea que desempeñen el rol de 
firewall, de cache[10], o de ambos . 
. ,: ._,-.•  .. ._ : . .f-":'..;"""-';"-::"#,"";:-Pr.--:-::~.;..;;;:;. .. ,,,1ii';'-:''' :....o:;.;.;"''~_.- .. :=-==::::..--::.<-; 0 ••• ::"..'.:.:.:. ..   ....   •• :':'''.';.: • ... J.-..i":::'::':!:.:.:;.. '::.::'!:',$..$..:-'; .. __ ... '";:,,,'':.;i##: ... '-:-': __ -:'.: · ..  :::"';;::i:.·-·-:···t . 
. . .... -. Exisfeñ··cuafróliigares·pósibles desde dóñde registrar 10gs, correspondiendo a las 
cuatro categorías de logging: en el servidor, en el proxy, en el cliente y sobre la red. 
2 - CATEGORÍAS DE LOGGING 
2.1 - LOGS BASADOS EN UN SERVIDOR DE WEB 
Ellogging realizado en un servidor es la forma más ampliamente utilizada [ 16]. 
En esta estrategia se captura información acerca de las' solicitudes de los clientes a un 
simple sitio 'Neb, en cualquier parte del mundo en que el mismo se encuentre. Los 
servidores de Web pueden recolectar un log de solicitudes de documentos registrando 
cada HTTPGET, POST o HEAD[8] que reciben. 
Existen límites en la información que proveen los logs de un servidor de Web: 
• Un gran número de solicitudes puede provenir desde servidores proxy. De 
esta manera, el nombre del host del cliente tal vez sea anónimo, debido a 
que ellog del servidor contiene el nombre del servidor proxy. 
• El administrador de Web tal vez deshabilite la posibilidad de recolectar los 
nombres de los hosts clientes, debido a que dicha recolección puede no ser 
ética o legal[ 11]. 
• Ellog del servidor solamente contiene aquellas solicitudes que actualmente 
alcanzan el servidor, y excluye aquellos casos en los que el usuario examina 
un documento que está cacheado por un servidor proxy o por el Web 
browser del cliente. De esta manera, debido a que la utilización de caches, 
particularmente de proxy caches, crece día a día en la Web, declina la 
precisión de los logs de servidores como una medida de solicitudes de 
páginas Web. 
1 Se dice "casi perfecto" porque el dispositivo que recolecta los logs puede fallar, el dispositivo de 
recolección (por ejemplo el software) puede contener bugs, o los logs recolectados pueden ser 
maliciosamente modificados o fabricados. 
... 
-;>Finalmente, existen distintas consideraciones que. en ciertos casos, hacen más 
,¡il'le lill,)S:l b implemcntación dc l?sta cakk()ria de l(''.:.:.:ill;:'. 
• Si existe más de un servidor que provee el mismo servicio, surge la necesidad 
de relacionar los logs entre los mismos y de planear una estrategia para que 
toda la información registrada conserve el mismo formato y no sea 
redundante. 
• Si en un servidor se provee más de un servicio, se debe tener especial 
cuidado para que los procesos de registro de información no interfieran unos 
con otros. 
Se podría pensar que la solución ideal para estas circunstancias es el agregado 
de un host entre los clientes y servidores, que sea quien realice el proceso de logging, 
funcionando como un filtro para el acceso a los servicios. Las principales desventajas 
están relacionadas con la inserción de un único punto de fallaz y la posible 
degradación en la performance de un servicio como consecuencia de un alto número. 
de solicitudes que no están dirigidas al mismo pero que son filtradas por el 
mencionado host. 
2.2 - LOGS BASADOS EN UN SERVIDOR PROXY 
El logging realizado en un servidor proxy captura la información que llega a 

aaatá'caracteeeMX;nj1ñm:tteittUl'eF''poo 
una población de clientes, que realizan solicitudes a servidores Web en cualquier 
parte del mundo, y cuyos browsers están configurados para utilizar el servidor proxy. 
La realización de logging en servidores proxies también tiene limitaciones: 
• La mayoría de los Web browsers crean caches en la memoria en forma 
automática y siempre crean caches en los discos de las máquinas en donde 
corren dichos browsers. De esta manera, aquellas solicitudes de los usuarios 
que son satisfechas por el cache de memoria o de disco en el cliente no son 
enviadas al servidor proxy, y así el log de dicho servidor no las puede 
capturar. 
• A diferencia de los caches de los browsers que son creados en forma 
automática, en la actualidad los Web browsers solamente utilizan un 
servidor proxy cuando el usuario explícitamente 10 configura para tal 
finalidad. Como concecuencia de ello, los logs de un servidor proxy podrían 
representar sólo una muestra parcial de clientes, aquellos que poseen 
usuarios 10 suficientemente sofisticados como para conocer la existencia de 
un servidor proxy y la manera de configurar el browser para su utilización. 
De esta manera, los costos ocultos de esta categoría de logging involucran, entre 
otros, el proceso de configuración de los clientes y servidores para la utilización del 
servidor proxy. 
2.3 - LoGS BASADOS EN UN CUENTE 
En este caso ellogging es realizado en una máquina cliente, ya sea por el mismo 
Web browser o por un proceso separado de monitoreo que ejecuta. en dicha máquina. 
Los logs pueden ser una caracterización precisa de cada documento que examina el 
usuario [ 12]. 
2 Si este host falla, además de impedir que se continúe con el logging, se esta quebrando la conexión 
con los servidores, con lo cual disminuye la disponibilidad del servicio. 
- 4 En la actualidad, normalmente los clientes no tienen facilidades adicionales para 
:¿cllcrar logs. Oc esta manera. no cxislL' U¡i IC!'l1;::i(( ,: \111 c,"\Il,iunh.l de in(orJll,Kil)11 :t 
list:!\' "cst<-indar" para los lo:;s de dientes. ck dOllde se dcduce la diúcultad qUé 
provoca unificar la información obtenida en cada uno de ellos. De todos modos. 
técnicamente es posible registrar este tipo de lo¡;s. Por ejemplo, los Web browscrs 
NCSA Mosaie[ 13] fueron modificados en las universidades para recolectar logs de 
clientes3 (por ejemplo en la Universidad de Boston [12]). Otro ejemplo del potencial 
para el lozzing basado en el cliente es HindSite[14], un plug-in para Netscape 
Navigator4 ; 
La ventaja del lozzing basado en el cliente es que éste se sobrepone a los 
problemas anteriormente mencionados que ocurren en las otras dos estrategias, 
debido a que también registra información de aquellas solicitudes que fueron 
satisfechas por el cache local del cliente (ya sea en memoria volátil o en disco). Esto se 
debe a que el lozzing basado en el cliente puede almacenar todos los accesos 
generados por un usuario, antes de que los mismos sean dirigidos al servidor de Web 
o al proxy cache. 
La limitación obvia dellozzing basado en el cliente es que la información puede 
ser recolectada solamente desde aquellos clientes que estén dispuestos a ejecutar un 
Web browser que r,egistre logs. 
,;.,...~..;.,tt~..,??~:!44~~~,.$JÑ:i!.t"44&,;,"--:WW?·!t'·''1*''r44...'1'!E"':':')''?:::~;;:;::::.:::'':;:::--+ .. '-';; 
En esta alternativa, una máquina es conectada a la red para que realice el 
monitoreo de la misma 5• El monitor escucha pasivamente todo el tráfico que viaja en 
la red, identifica paquetes que contienen partes de mensajes HITP y construye un log 
de las URLs solicitadas en dichos paquetes. La población de clientes que el lozzing 
basado en la red puede caracterizar depende del lugar de la red en donde se conecta el 
monitor. Por ejemplo, un monitor ligado a una red de hosts clientes que ejecutan Web 
browsers, como es el caso del "monitor A" en el siguiente gráfico, registra información 
respecto de dicho conjunto de clientes. 
3 Donde se registran los siguientes items: nombre de la máquina, hora, URL, tiempo de retorno y si la 
referencia URL fue retornada directamente o desde una referencia en otra URL. 
4 Este plug-in almacena en una base de datos la URL, título, fecha y hora de acceso, fecha y hora de la 
última modificación del documento y tamaño del documento para cada URL solicitada por el 
usuario. 
5 Una máquina que realiza monitoreo de red, network monitor, también suele llamarse network 
sniffer. 
- 5 Re:: oe Clientes 
,IDI, /,:-. i 
. I 
Cliente A 
1----- - - ---- -----1 
: Red de See;do... : I ! I lu_u_",<:::_;,,~ I 1I 11=;1 
'" I . ,. ,   l. 
, Servidor A 
.. Cliente B 
..•. 
' ..  '. 
t 
Monitor A r..: ! .  ~. Cliente C 
mm b;;J;¿iiiiíltWW\ 
,'_ .. ' • . .' ". " ....•..... ' - .....  ilr-·¡¡¡,-",a "41  . I -,-""='..-....  ~'*,iivl"'¡iiill(  q!l,.t .. gtM¿Alfémafi'vartiéirte;TlMñórtftOft"igád(fft'-1thá·ted"·qutt'coñecta· unc),,¿-íñáS''''' 
servidores de Web, como es el caso del "monitor B" en el gráfico anterior, registra 
información respecto de solicitudes destinadas a cualquiera de dichos servidores. 
Finalmente, los monitores de red pueden ser útiles para mejorar el logging 
basado en un servidor proxy. Por ejemplo: el monitor puede registrar solicitudes de 
clientes que no están configurados para utilizar un servidor proxy y de clientes que no 
están conectados a redes con servidores proxies. 
El dispositivo que monitorea la red puede ser tanto un instrumento de monitoreo 
(como por ejemplo un LANalyzer para Ethernet) como un computador de propósito 
general. Un ejemplo de utilización de un computador de propósito general para 
monitoreo es la herramienta tcpdum¡::P. 
Esta estrategia de monitoreode red, que no es nueva7, posee varias ventajas: 
• Es transparente: no se requieren cambios en el cliente, proxy o servidor de 
Web, y no tiene impacto sobre la performance de los clientes, proxies, 
servidores de Web o sobre la red. 
• Es segura: nadie puede acceder a los datos monitoreados, excepto quien 
controle el dispositivo de monitoreo. . 
• Puede utilizarse para verificar información registrada por otros mecanismos 
de logging. . 
6 Para utilizar tcpdump, se debe configurar el adaptador de red de un sistema operativo UNIX en 
modo "promiscuo", para que éste acepte todos los paquetes que viajan por la red, más que aquellos 
que están destinados a la dirección IP de la estación de trabajo en donde la misma está instalada. 
tcpdump decodifica los paquetes para producir una lista de los campos que se encuentran en los 
headers de los protocolos (por ejemplo Tep e IP). . 
7 Los monitores han sido utilizados por mucho tiempo como herramientas para análisis de' problemas 
en redes de comunicaciones. 
- 6 • El monitor de red puede estar programado para reeistrar il1forlllm:ic)11 de 
(..,t!\"" r'!\)!,,,\.\."\L.""\:;  ld' .. '111:tS del IIlirs . 
• No existe problema de muestreos o auto-selección: el monitor recolecta todas 
las solicitudes de documentos, y si el mismo es lo suficientemente lento como 
para no poder registrar todos los paquetes de la red, realiza una muestra 
aleatoria. 
• Un mt:mitor de red puede utilizar el header de los mensajes HITP capturados 
para realizar cálculos basados en múltiples paquetes, y de esta manera 
producir más información respecto de la utilización del Web de la que se 
puede obtener con el formato de logs estándar de los servidores proxy o de 
Web9• 
La principal desventaja del monitoreo de red es la necesidad de o bien una red 
que permita broadcast (tal como una Ethernet, token ring o FDDI ring) o bien 
configurar el monitor como un gateway sobre un enlace de red punto-a-punto. 
Por otro lado, se debe tener especial cuidado con el número de clientes y 
servidores que posee la red, debido a que existe un límite en el porcentaje de paquetes 
que puede registrar el monitor. Una solución a esta restricción puede ser conectar más 
de un monitor a la red, configurando cada uno de ellos para que registre un conjunto 
" dd,p'aq:u::~es provenientee dd dife.rentes  ~~~cio.!!!~_44...~ii"l!ttS9 ,s''J;YÍ,c;l99~~~fMªJJ~ 

rÚCá:pioxímáCí6ti·'''-dee"!,''fo""'traticÓ.rpuedrmanejar· un monItor- dé' red;""st;·puedé ... ··" 
considerar un computador de propósito general como dispositivo de monitoreo. Dicho 
monitor debería estar capacitado para manejar al menos el tráfico que podría manejar 
el servidor de Web más rápido, corriendo sobre la misma plataforma de hardware. 
Esto se debe a que el monitor de red lee paquetes de red pero nunca los escribe10, 
mientras que un servidor de Web debe leer paquetes, encontrar el documento 
solicitado en el disco y escribir paquetes. 
3 - ASPECfOS DE PRIVACIDAD 
Cualquier estrategia de logging (ya sea basada en el servidor, en el cliente, en el 
proxy o en la red) promueve aspectos de privacidad. Estos aspectos suelen discutirse 
debido a que en algunos países no existen guías de ética o reglas legales que describan 
cómo pueden utilizare e los registros de logs sin atentar contra la privacidad de los 
usuarios[15]. Por ejemplo: actualmente en la Web, los servidores y proxies recolectan 
en forma rutinaria logs; que al almacenar los nombres de los hosts clientes; identifican 
usuarios en forma indirecta 11. 
En particular, ellogging basado en la red acentúa este aspecto, debido a que se 
realiza en forma transparente, sii modificaciones en los clientes o servidores. 
8 Además de capturar información de otros protocolos populares en la Web (ITP, Real audio, ... ) podría 
capturar eventos tales como conexiones no concluídas o erróneas, así como también tráfico excesivo 
de algún protocolo en el que no suele repararse (ICMP, POP, ... ) y puede degradar la performance de 
la red cuando se utiliza en forma indiscríminada. 
9 Realizar este tipo de cálculos en un servidor que tiene una funcionalidad tal como cachear, filtrar 
tráfico (firewall) o proveer un servicio (en este caso Web), puede ser crítico para su óptimo 
funcionamiento. 
10 Debe existir otro proceso dedicado a tal finalidad para no degradar la performance del servidor. 
11 Además, algunos de estos servidores utilizan herramientas adicionales para recolectar información de 
los usuaríos conectados a los clientes y combinan esa información con bases de datos que reúnen 
características personales de los mismos. 
- 74 - 1\10;',ITORES DE RED rARA EL WEB 
¡ \'.\ ,k LII prilll'ipak,s hl'rralllil'l1iaa qUl' PlT!11itl'l1 a lIna estación de trabajo 
lji"lX recolectar logs de una red S011 lIttp/ilt y httpdump. Ambas herramientas 
permiten registrar logs de todas las solicitudes HITP que ocurren en la red a la cual 
estü ligada el monitor. httpfilt permite registrar solicitudes HITP con un alto 
rendimiento, mientras que httpdump provee información más extensa de cada 
solicitud y puede ser extendida para registrar tráfico proveniente de otros protocolos' 
diferentes de HITP. 
Para maximizar su utilidad, la salida que se obtiene de httpfilt y httpdump se 
encuentra en un formato que permite que otras herramientas de análisis de WWW 
ppedan beneficiarss utilizándolas, y además crean una versión extendida de dicho 
formato de registro de información. El formato utilizado se conoce como el archivo de 
log de formato común[17]. 
En el momento de analizar las herramientas, se deben tener en cuenta distintos 
aspectos que permitan arribar a conclusiones respecto de su utilidad, rendimiento y 
flexibilidad, entre otras características de importancia. Por ejemplo, sería de utilidad 
evaluar el tipo y cantidad de tráfico que permiten recolectar, el rendimiento en cuanto 
a performance, formato de la información registrada y en qué momento permiten 
visualizar la mencionada información12• . . 
·if:Plfrimm-"'¡..''':;';";;;""-:··t.';;t¡¡bbb:;;!;J':;A;'T''·:J:iii·H''_I!!~~~~.;;M.f_8.'.. 
httpfilt, la primera de las dos herramientas, usualmente identificada como una 
variante de httpdump, filtra la salida del popular paquete tcpdump[3] para producir 
uno de los dos archivos de salida. tcpdump es ejecutado con parámetros que permiten 
recolectar únicamente paquetes que están dirigidos al port 80 (el port estándar de 
httpd) y su salida es conducida a través de tres scripts PERL que se ejecutan en forma 
separada como procesos concurrentes. 
TCPDump 
captura 
paquetes del 
port 80 
La salida se 
convierte de 
HEXA-> 
ASCII 
Se filtran los 
encabezados HTTP, 
almacenando 
\\-------------------------------/ 
. 
" 
, , , 
, , 
, ' 1----- ,----:. Tratamiento de : 
1 paquetes : 
1 _____ "------_ .. 
Cada uno de los filtros realiza las siguientes operaciones: 
Se utiliza un 
script PERL para 
formatear la 
salida como un 
archivo de log 
CERN 
' ...... _--..--_....1/  , , 
, , 
, ' 
I " 1----- .-.---.1 Tratamiento de : 
t '. 
1 archivos de logs : 
._---~------_ ... 
• Primer filtro: invoca a tcpdump para capturar todos los paquetes de la red 
destinados al port 80 sobre cualquier dirección IP. 
• Segundo filtro: convier.te el contenido del paquete de hexadecimal a ASCII, y 
lo pasa al siguiente filtro. 
12 Es decir, ¿permite la herramienta visualizar los logs registrados en tiempo real?, o ¿primero debe 
realizarse el registro de datos y posteriormente su visualización? 
• 
- 8 Tercer filtro: examina los caracteres iniciales del campo de datos de (¡¡cL¡ 
r''Hll1l\tl' .. L1US\..··111lil") ¡dd~¡¡lh" \L ::,  .<<l(il·:il= . .'..l \"··ldt'IllIS de caracteres: l;r:··    
IIL\L1, IITIT Y I'()ST, parrl idcr:lJliG!r PP:,1uclcc que conticncn un cl1cabczadll 
HTTF. Los paquetes obtenidos como resultado son enviados al último filtro. 
• Cuarto filtro: categoriza cada paquete y genera el archivo de logs en el 
formato especificado. 
4.2 - H1TPDUMP 
Una limitación de lzttpfilt es que solamente permite monitorear tráfico desde y 
hacia ports especificados. De esta manera, se debe conocer con anterioridad sobre qué 
números de ports, en cualquier red, se ejecutan servidores de Web, y si alguno se 
desconoce, el tráfico que lo involucra no será registrado. La segunda herramienta, 
httpdump, se sobrepone a esa limitación, pero su actual implementación es específica 
para una DECstation ejecutando un sistema operativo Ultrix. 
httpdump está basada en una herramienta de captura de paquetes altamente 
optimizada en lugar de utilizar tcpdump, y de esta manera, permite monitorear todos 
los números de ports para filtrar luego aquellos paquetes que contengan un 
encabezado de HTTP. Por otra parte, se incrementa el nivel de performance 
implementando todos los filtros y pasos de conversión en código "C". 
ft:lffiFJdJttpdlllllPconsiste ·actualmentede,dOB:progmn1:8S ..  ...que·:se ejec'uu'en'fómul-:;;­
concurrente para producir logging de red de las solicitudes de Web. El primero de los 
mencionados programas, tcppf (TCP packet filter), crea un filtro que monitorea los 
paquetes de red para identificar paquetes TCP y enviar sus datos al segundo programa, 
httpcpara un análisis posterior, y registrar, finalmente, entradas en el archivo de logs 
de formato especificado. 
5 - CONCLUSIONES y TRABAJO FUfURO 
. La necesidad actual de un análisis de problemas de performance y de aspectos de 
diseño y utilización de las redes, desencadenan un impulso en el desarrollo de la 
actividad de monitoreo de tráfico. Esto genera un proceso de seguimiento exhaustivo 
de las actividades realizadas por los usuarios (estrategias de logging). 
En general, el logging crea la ilusión de un perfecto conocimiento de las 
actividades que se realizan en la red. Sin embargo, debido a la existencia de sus 
distintas categorías (basadas en el servidor, en el proxy, en el cliente o en la red), no se 
puede afirmar que una de ellas es la panacea. A pesar de que la alternativa que 
promete la mayor cantidad de ventajas es el logging basado en la red (comúnmente 
llamado monitoreo) deben ser evaluadas las características del entorno al momento de 
seleccionar alguna de las mismas. 
Si se opta por el logging basado en. la red, existen diferentes herramientas que 
brindan la posibilidad de registrar logs de solicitudes HTTP que ocurren en la red a la 
cual está ligada el monitor, entre ellas httpfl1ty httpdump. 
Actualmente estamos desarrollando una variante de la herramienta httpdump 
que sea portable a otros sistemas-UNIX. 
6 - REFEFERENCIAS 
[ 1] "Sincronización de estadísticas entre servidores y proxies", tesis de Licenciatura en 
Informática, de la Facultad de Ciencias Exactas, UNLP. Autor: María José Catullo. 
Director: Lic. Javier Diaz. 
[2] "World Wide Web (WWW) Traffic Analysis Tools". Computer Science 
Department Virginia Polytechnic and State University. 
-9http://wW.N.cs.vt.edu/-chitra/W\VWTrafficTools.htm1. 
[3l [nla siguiente dirc,-Tióll 
htlp:/ / scicnce .nas.nasa .';.()\' / l-; !'('l! psi tAl'\ / Class:'\o1csl an! / !CpciUlllp. h Iml se 
encuentra una breve descripción de la herramienta, disponible en: 
http://ftp.ost.elte1e.no/pub/networking/tcpdump/ 
[4] Roland Wooster, Stephen Williams, Patrick Brooks, "HTTPDUMP Network HTTP 
Packet Snooper", Abril de 1 996. 
[5] packetfilter, man paae. 
http://apache.ethz.ch/Digital UNIX/MAN/MAN7/0060 .HTM 
_, --I61.'.'Internet Growth", htt,p:/ /www.is-bremen.de/-mhi/inetgrow.htm . o'. ._,; o 
o htt,p:/ /www.insead.fr/CALT /Encyclopedia/ ComputerSciences/lnternet/ groWth: .c: 
htm1 
"Internet Domain Survey", htt,p:/ /www.nw.com/zone/WWW/report.html 
[7] "The SimpleWeb", htt,p:/ /wwwsnmp.cs.utwente.nl/ 
"SNMP Version 3 (SNMPv3)", htt,p:/ /www.ibr.cs.tu-bs.de/ietf/snmpv3/ 
[8] "Hypertext Transfer Protocol -HTTP/ 1.1 ". RFC 2068. 
"Hypertext Transfer Protocol-HTTP /1.0". RFC 1945. 
[9] "Uniforll! Resource Locator (URL)". RFC 1738. 
[10] A.e. Marisa A. Malvaso y Lic. Miguel A. Luengo, "Alternativas de Caching para 
=.q .... &2RR:SS-!w.==:J&&~:::§lBPP!!Wffiii444!?JP.ij.z;L;;=,2.i..M \,'¡{:::mfi(l CA ... 
[11] J. Berman,J. Goldman, D. J. Weitzner y D. K. Mulligan, "Statement of the Center 
for Democracy and Technology before the Federal Trade Commission Workshop 
on Consumer Privacy on the Global Information Infraestructure", Junio de 1996, 
htt,p:/ /www.cdt.org/publications/FTC Iune96 test.test.html. 
[12] En la siguiente dirección están disponibles ejemplos de logs en clientes: 
ftp:/ / cs-ftp.bu.edu/techreports/95-0 1 O-www-client-traces.tar.gz, 
C. R. Cunha, A. Bestavros y M. E. Crovella, "Client Log Traces" 
[13] "WWW Tools", htt,p:/ /www.sparc.spb.su/Cos/hotlist.html 
[14] ISVS HindSite para Netscape Navigator: 
htt,p:/ /www.isysdev.com/products/hindsite.htm 
[15] Center for Democracy and Technology, "CDT Privacy Issues Page", 
htt,p:/ /www.cdt.org/privacy/ otherheadlines.html 
[16] Un ejemplo de herramienta que realiza logging en el servidor para lIS puede ser 
ISAP!. htt,p:/ /www.microsoft.com/MSII0498/IIS/IIS.HTM 
[17] "W3c httpd common log format". WWW Consortium. 
http://www.w3.org/pub/WWW /Daemon/User/Config/Logging.html 
