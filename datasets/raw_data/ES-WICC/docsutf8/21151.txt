Algoritmos evolutivos distribuidos – líneas de investigación
﻿
 
La búsqueda de solución a problemas de optimización de mediana a gran complejidad es uno de los temas que más 
atrae a investigadores de distintas disciplinas en distintos lugares del mundo. Por otra parte, los avances tecnológicos  
permiten disponer de nuevos recursos computacionales dotados de gran capacidad o,  en caso contrario, se los puede 
organizar en clusters posibilitando la distribución del  trabajo. Para atacar los problemas de optimización algunos 
investigadores intentan desarrollar algoritmos exactos y otros, algoritmos heurísticos. Particularmente, nosotros 
orientamos la mencionada búsqueda usando Algoritmos Evolutivos, que ya han demostrado ser capaces de resolver 
problemas de gran complejidad aunque no siempre garantizan alcanzar el valor óptimo, siendo nuestro objetivo mejorar 
su performance por medio de la incorporación de métodos de búsqueda local (hibridización) o distribuyendo el trabajo 
para poder explorar mayores espacios de búsqueda a través de un trabajo cooperativo. Estos últimos representan un 
camino promisorio para un mejor balance entre exploración y explotación; evitando la pérdida de diversidad genética y 
alcanzando buenas soluciones finales próximas al óptimo. 
Las líneas de investigación que aquí se detallan son las que actualmente se están siguiendo, algunas de ellas con algunos 
resultados en proceso de evaluación y otras, más incipientes, que han surgido de trabajos previos. 
 
 
Introducción 
Una de las principales áreas de trabajo en el ámbito de la Informática ha sido tradicionalmente 
el diseño de algoritmos cada vez más eficientes para la solución de problemas, tanto de 
optimización como de búsqueda. En este dominio, el objetivo consiste en obtener nuevos 
algoritmos que necesiten un esfuerzo computacional menor al de los existentes, así como 
caracterizar su comportamiento para las clases de problemas que demanda la comunidad científica e 
industrial en general. 
La investigación en algoritmos tanto exactos como heurísticos para resolver problemas de 
optimización tiene una vigencia inusualmente importante en estos días, ya que nos enfrentamos a 
nuevos problemas de ingeniería, al mismo tiempo que contamos con nuevos recursos 
computacionales tales como nuevos tipos de máquinas, redes y entornos como Internet.  
De esta forma, actualmente es acuciante la necesidad de algoritmos muy eficientes que 
puedan dar respuesta en tiempo real a problemas del usuario o del sistema, y que permitan trabajar 
con los nuevos sistemas operativos y máquinas. Para ello, es muy importante poder caracterizar el 
funcionamiento de dichos algoritmos para conocer limitaciones y potencia intrínseca al resolver 
nuevos problemas no estudiados. Esto supone definir el comportamiento de los algoritmos en 
relación a clases de problemas sobre instancias de dimensión creciente, para poder así deducir los 
métodos o modificaciones necesarios que permitan generar un motor de búsqueda eficiente. 
Dos de las ramas con éxito para diseñar algoritmos eficientes en la actualidad son la 
hibridización y el paralelismo. La hibridización permite incorporar información del problema en el 
algoritmo de resolución para trabajar en contacto con sus características diferenciadoras; esto tiene 
también relación con la posibilidad de involucrar a varios algoritmos distintos en el proceso de 
búsqueda de soluciones de manera más eficiente, ya que usualmente se obtienen reducciones 
notables en el esfuerzo cuando se utiliza un algoritmo híbrido. Por otro lado, el uso de múltiples 
procesadores para resolver en paralelo un problema permite acelerar la búsqueda en tiempo real y 
alcanzar nuevos dominios de aplicación antes imposibles. 
Particularmente los Algoritmos Evolutivos  (AEs) han demostrado ser capaces de resolver 
complicadas tareas de optimización. Estos algoritmos trabajan sobre un conjunto (población) de 
potenciales soluciones (individuos) aplicando sobre ellos un grupo de operadores estocásticos para 
alcanzar la mejor solución. La mayoría de los AEs usan una única población de individuos 
(panmixia) y los operadores se aplican sobre los individuos de toda la población. Pero, otro enfoque 
que se va difundiendo en forma rápida es el de estructurar la población, permitiendo paralelizar la 
evolución de la misma [1] (ver Figura 1). Entre los AEs estructurados, los algoritmos más populares 
son los distribuidos y los celulares [3, 9].  
En el primer caso,  AEs distribuidos (dAEs), la población se divide en un conjunto de islas y 
cada una de ellas aplica el proceso evolutivo en forma independiente, realizando intercambios de 
individuos esporádicamente para facilitar el proceso colaborativo/cooperativo. Esto ayuda al 
mantenimiento de la diversidad en las distintas subpoblaciones evitando caer en óptimos locales [5, 
8, 18, 22, 24, 27].   
En el segundo caso, los AEs celulares (cAEs) introducen un nuevo concepto de vecindario, 
permitiendo que un individuo dado pueda intercambiar material genético sólo con individuos de ese 
vecindario [13,20,23]. Los vecinos de un individuo se pueden seleccionar de diferentes maneras 
atendiendo estructuras lineales o complejas. La estructura de uso más habitual es la grilla toroidal 
que contiene a todos los individuos de la población y define un estricto vecindario sobre cada 
individuo de la grilla [4]. Si bien estos algoritmos se concibieron para trabajar en máquinas 
paralelas  [26], en la actualidad este enfoque se ha difundido y también se lo usa en entornos de 
máquina única.  
Líneas de Investigación 
Actualmente, nuestras líneas de investigación en el proyecto son: 
ü Estudio del efecto de diferentes valoraciones paramétricas sobre la performance de 
algoritmos evolutivos híbridos  (hAEs) en un problema de difícil tratamiento tal como el 
conocido “cutting problem”. La parametrización a ajustar está relacionada a tipos de: 
selección,  operadores genéticos, probabilidad de los operadores,  escalamiento,  penalidad, 
etc. [7 , 11, 28]. 
ü Estudio comparativo de AEs panmícticos, distribuidos en máquina única (dAEs) o 
distribuido en varias máquinas (pAEs) para estudiar la escalada del costo computacional, 
medido en cantidad de evaluaciones o tiempo necesario para alcanzar la solución óptima, en 
función del crecimiento de complejidad del problema [16, 17, 18, 19, 27].  
Migración
(1) (2) (3)
Fig. 1. (1) El AE panmíctico mantiene todos los individuos en la misma población. 
Los AE estructurados trabajan organizando la población en islas independientes (2) – distribuidos - o 
ubicando los individuos sobre una grilla que acote el vecindario con el que se relaciona (3) – celulares -. 
ü Estudio comparativo de algoritmos celulares con diferentes tipos de grillas las que podrán 
mantenerse estáticas durante la evolución o modificarse dinámicamente para mantener la 
diversidad poblacional y de esa forma equilibrar la exploración y la explotación [4, 13, 23 ]. 
ü Estudio comparativo de algoritmos evolutivos distribuidos (dAE), que permitan trabajar con 
poblaciones de tamaños variables a los efectos de que cada  isla puede adecuar el tamaño de 
la población considerando diferentes criterios. Existen algunos estudios empíricos [6, 10, 
12, 25] y otros teóricos [14, 15, 21] que son considerados como punto de partida. El 
mecanismo de adecuación del tamaño de la población se mantendrá uniforme en las 
distintas islas (enfoque homogéneo) o puede ser diferente en las distintas islas (enfoque 
heterogéneo) [2].   
 
En todos los casos los estudios de performance se hacen sobre problemas pertenecientes a la 
categoría NP-duros y considerando instancias ampliamente difundidas en benchmarks 
internacionales, para poder contrastar los resultados con los obtenidos por otros grupos de 
investigación.  Se intenta realzar el peso de las conclusiones por medio del análisis de los resultados 
alcanzados usando técnicas de la estadística. 
 
Resultados Esperados 
 
Con estas líneas de investigación se pretende encontrar AEs que brinden una situación de 
mayor equilibrio entre diversidad poblacional y la obtención de buenas soluciones finales. Estos 
algoritmos podrán combinar técnicas de búsqueda local o heurísticas especialmente diseñadas, que 
potencien la explotación de buenas soluciones en la búsqueda de las soluciones óptimas. Se espera  
que el costo computacional, o el tiempo insumido en la búsqueda, sea menor al hacer uso de 
mecanismos de distribución del procesamiento a través de la división de la población en islas 
independientes o estructurando los vecindarios.  
 
Bibliografía 
[1] P. Adamidis, “Review of Parallel Genetic Algorithm Bibliography”. Technical Report Version 
1. Aristotle University of Thessaloniki. 1994. 
[2] P. Adamidis, V. Petridis, “Co-operating Populations with Different Evolution Behavior”. 
Proceedings of the Second IEEE Conference on Evolutionary Computation, pp. 188-191, 
1996. 
[3] E. Alba, M. Tomassini, “Parallelism and Evolutionary Algorithms”, IEEE Transactions on 
Evolutionary Computation, volume 6, Nro 5, pp 443-462, October 2002.  
[4] E. Alba, B. Dorronsoro, “The Exploration/Explotation Tradeoff in Dynamic Cellular 
Evolutionary Algorithms”. IEEE Transactions on Evolutionary Computation, volume 9, Nro 2, 
April 2005. 
[5] H. Alfonso, G. Minetti, C. Salto, “Algoritmos Evolutivos Paralelos para Mitigar la Falta de 
Diversidad”, proceedings of CISCI 2004, volume 1, pp 362 – 367, 2004. 
[6] J. Arabas, Z. Michalewicz,  J. Mulawka. “GAVaPS - A Genetic Algorithm with Varying 
Population Size”. Proceedings of the First IEEE Conference on Evolutionary Computation, pp 
73 - 78, 1994.  
[7] J. E. Beasley, “A Population Heuristic for Constrained Two Dimensional Non Guillotine 
Cutting”.  European Journal of Operational Research No. 156, pp 601-627, 2004.  
[8] T. C. Belding, “The Distributed Genetic Algorithms Revisited”. Proceedings of the Sixth 
International Conference on Genetic Algorithms, pp. 114-121, 1995 
[9] E. Cantú Paz, Efficient and Accurate Parallel Genetic Algorithms, volume 1, Book series on 
Genetic Algorithms and Evolutionary Computation, Kluwer Academic Publishers, 2nd Edition, 
2000. 
[10] J. Costa, R. Tavares, A. Rosa. “An Experimental Study on Dynamic Random Variation of 
Population Size”. roceedings of IEEE Systems, Man and Cybernetics Conf., volume 6, pp 607612, 1999.  
[11] Dasgupta D., Michalewicz Z.,“Evolutionary Algorithms in Engineering Applications”. 
Springer Verlag. 3º edition, 1996.  
[12] A.E. Eiben, E. Marchiori, V.A. Valko. “Evolutionary Algorithms with on-the-fly Population Size 
Adjustment”. X.Yao et al. editors , Parallel Problem Solving from Nature, PPSN VIII, volume 
3242 of LNCS, Springer, pp.41-50, 2004.  
[13] M. Giacobini, E. Alba, A. Tettamanzi, M. Tomassini. “Modeling Selection Intensity for 
Toroidal Cellular Evolutionary Algorithms”. Proceedings of  Genetic and Evolutionary 
Computation COnference  GECCO 2004, volume 3102 of LNCS, pp 1138-1149, 2004.  
[14] D.E. Goldberg. “Sizing Populations for Serial and Parallel Genetic Algorithms”. Proceedings 
of the Third International Conference on Genetic Algorithms, pp 70-79., 1989. 
[15] D.E. Goldberg. “Optimal Population Size for Binary-Coded Genetic Algorithms”. TCGA 
Report, No. 85001, 1985. 
[16] V.S. Gordon, D. Whitley, “Serial and Parallel Genetic Algorithms as Function Optimizers”. 
Proceedings of the Fifth International Conference on Genetic Algorithms,  pp. 93, 1993. 
[17] J. J.Grefenstette, “Parallel Adaptive Algorithms for Function Optimization”.  Technical Report 
No. CS-81-19, Vanderbilt University, Computer Science Department Nash Village, TN. 1981.  
[18] E. Noda, A.L.V. Coelho, I.L.M. Ricarte, A. Yamakami, A.A. Freitas. “Devising Adaptive 
Migration Policies for Cooperative Distributed Genetic Algorithms”. Proc. 2002 IEEE Int. 
Conf. on Systems, Man and Cybernetics (SMC-2002). IEEE Press, 2002.  
 [19] S. Lin, W. Punch, E. Goodman, “Coarse Grain  Parallel Genetic Algorithms:  Categorization 
and new Approach”.  Proceedings of the Sixth IEEE Symposium on Parallel and Distributed 
Processing,  1994. 
[20] B. Manderick, P. Spiessens, “Fine-Grained Parallel Genetic Algorithms”. Proceedings of the 
Third International Conference on Genetic Algorithms, pp. 428-433, 1989.  
[21] C. R. Reeves, “Using Genetic Algorithms with Small Populations”. Proceedings of the Fitth 
International Conference on Genetic Algorithms, pp. 92-99, 1993. 
[22] C. Salto, G. Minetti, “A Combination of Selective Pressure and Disruptiveness of 
Recombination Operators to Enhance the Evolutionary Behaviour”. Proceedings of the IEEE 
Fourth International Conference on Intelligent Systems Design and Applications (ISDA 2004), ISBN 
963-7154-30-2, pp. 223-228, 2004 [23] J. Sarma, K. De Jong, “An analysis of  the Effect of the 
Neighborhood Size and Shape on Local Selection Algorithms. PPSN IV, volume 1141 of 
LNCS, pp 236-244, 1996. 
[24] J. Sarma, K. De Jong, “An Analysis of  Local Selection Algorithms in a Spatially Structured 
Eevolutionary Algorithms”. Proceedings of the Seventh International Conference on Genetic 
Algorithms, pp. 181-186, 1997. 
[25] X. H. Shi, L. M. Wan, H. P. Lee, X. W. Yang, L. M. Wang, Y. C. Liang, “An Improved 
Genetic Algorithm with Variable Population-Size and a PSO-GA Based Hybrid Evolutionary 
Algorithm”. Proceedings of the Second International Conference on Machine Learning and 
Cybernetics, pp. 1735-1740, 2003. 
[26] P. Spiessens, B. Manderick, “A Massively Parallel Genetic Algorithm”. Proceedings of the 
Fourth International Conference on Genetic Algorithms. pp. 279-286.1991 
[27] R. Tanese, “Distributed Genetic Algorithms”. Proceedings of the Third International Conference 
on Genetic Algorithms, pp. 434-439, 1989. 
[28] D. Whitley, “The GENITOR Algorithm and Selection Pressure: Why Rank-based Allocation 
of Reproductive Trials is Best”. Proceedings of the Third International Conference on Genetic 
Algorithms, pp. 116-123, 1989. 
