Desarrollo de un colector de datos portátil
﻿ Se presenta el desarrollo de un colector de datos para su utilización en tareas de 
administración y manejo de ganado. El sistema se diseña para su utilización en campo y 
posterior actualización de los datos recolectados en una base de datos en PC. El uso en 
campo facilita las tareas relacionadas con el seguimiento de los animales y los tratamientos 
o actividades que se realizan sobre cada uno de ellos. En este marco el proyecto pretende el 
desarrollo de un sistema integrado de software y hardware que agilice la tarea del productor 
acorde a las exigencias de trazabilidad de ganado impuestas por el mercado a fin de 
optimizar la calidad del producto final. En este trabajo se presenta someramente la 
arquitectura y el diseño del colector de datos, así como la funcionalidad y aspectos 
tecnológicos del mismo 
 
1. Sistemas embebidos 
Un sistema embebido, también conocido como sistema empotrado, es una combinación de 
hardware, software y, eventualmente, componentes mecánicos diseñados para realizar una función 
específica. 
Un sistema embebido puede o no ser de tiempo de real dependiendo de los requerimientos 
específicos de la aplicación que se quiere implementar. De igual forma, el sistema será rápido si y 
sólo si se requiere de esta rapidez de acuerdo a la definición específica del sistema. 
El hardware lo constituye un microcontrolador o un procesador de señales digitales (DSP), 
que es el corazón del sistema y de otros componentes electrónicos de acuerdo a la aplicación que se 
está implementando. Dentro de estos otros elementos de hardware podemos contar con 
componentes digitales (circuito digital que cumple una función específica sin tener su propio 
software de control), componentes analógicos (circuito analógico que cumple una función 
específica sin tener su propio software de control), bloques de lógica combinatoria y componentes 
en general (que realizan una función específica y que tienen su propio software de control). El tipo 
y la cantidad de componentes de hardware de un sistema dependen exclusivamente de la aplicación 
que se está implementando. 
El software del sistema es el encargado de hacer que los distintos componentes de éste 
realicen las funciones en los tiempos definidos y de acuerdo a sus requerimientos. Este software 
está incorporado en el microcontrolador o DSP e interactúa con los otros componentes a través de 
buses de datos, buses de control, sistemas DMA y puertos de control. 
Los componentes mecánicos o de otra índole no son parte de este análisis por lo que no nos 
referiremos a ellos. Por otra parte, sí haremos mención a la metodología que debe usarse para 
diseñar un sistema embebido. Este es un punto importantísimo para asegurarnos del éxito del 
sistema que se está implementado y que éste cumpla con las expectativas funcionales y financieras 
del mercado. 
Las etapas que deben ser consideradas en el diseño e implementación de un sistema 
embebido son las siguientes: definición de requerimientos del sistema, partición del sistema 
(definición de lo que se hará en hardware y software), definición del hardware, definición del 
software, implementación de modelos de simulación de los distintos componentes, simulación del 
sistema, diseño e implementación de hardware, diseño e implementación de software, pruebas de 
hardware, pruebas de software, integración y pruebas del sistema. 
La primera etapa es vital para el éxito del sistema, ya que es en ella donde se define lo que 
hará el sistema que estamos implementando. La participación del área comercial y de marketing de 
la empresa es vital en este nivel. Un sistema que se define sin considerar los requerimientos 
funcionales y financieros del mercado tiene una probabilidad ínfima de éxito. Si el sistema está 
siendo definido para un cliente en particular, su participación activa es requerida en esta etapa. Una 
vez concluida, se genera un documento con los requerimientos del sistema, el cual debe ser 
aceptado por todas las partes involucradas y que es la base de todo desarrollo futuro. 
 
2. Arquitectura del Colector de datos 
El componente de hardware del sistema, el colector de datos propiamente dicho, esta 
compuesto principalmente por un microcontrolador ATMEL AVR gama ATMEGA, una memoria 
de datos FLASH del tipo Multimedia Card (MMC), una unidad de display genérica LCD de 4 x 16 
caracteres, un teclado de 6 teclas, de diseño propietario, una interfase RS232 para conexión con PC 
y lógica adicional asociada a la captación directa de los datos (Fig. 1). 
 
 
Figura 1. Diagrama de bloques del colector de datos. 
 
El microcontrolador contiene el programa necesario para la comunicación con la PC a través 
de la interfase RS232, el manejo del teclado y el display, la administración de la memory card -vía 
protocolo SPI-; y la captación de datos –usando un protocolo específico a tal efecto-. 
La interfase con la PC permite la comunicación del colector con un programa de 
configuración y recolección de datos. Este programa maneja las bases de datos del ganado 
administrado y contiene toda la información necesaria de cada animal. 
Durante el proceso de configuración se envía información desde la PC al colector de los 
animales que deben ser sometidos a algún tratamiento o proceso particular, como vacunación, 
marcación, inseminación, etc.. Con esta información el usuario utiliza el colector para actualizar 
información administrativa de los animales seleccionados en campo. 
Posteriormente la información se transmite a la PC para actualizar las bases de datos. 
El funcionamiento del colector durante las operaciones de campo se detalla a continuación. 
El usuario selecciona (usando el teclado y el display) la tarea a realizar (por ejemplo, vacunación) 
sobre un lote determinado de hacienda. De este modo, cada animal vacunado es captado 
automáticamente por el colector a través de un sensor de radiofrecuencia, que recibe un código 
único de identificación  desde un transmisor pasivo adosado al cuerpo del animal (en un TAG). 
A partir de este código el colector almacena en la memoria la información asociada a la tarea 
realizada sobre los animales seleccionados. Luego la base de datos actualizada del colector se 
descarga nuevamente a la PC. 
 
3. Aspectos tecnológicos 
Dadas las características del microcontrolador, este cuenta con 2 modos de ahorro de 
energía, (idle mode y power down mode). Estos modos permiten maximizar el ahorro de energía 
deteniendo toda la funcionalidad del procesador excepto las interrupciones. Por lo tanto el lazo 
principal de microprograma carece de código a excepción de la instrucción SLEEP que pone al 
micro en modo inactivo hasta la ocurrencia de algún evento externo. 
Con respecto al almacenamiento dentro del colector de datos, se optó por una tecnología de 
memoria de tipo flash (flash nand) que se destacan por brindar una gran capacidad a un costo 
accesible, permitiendo que la memoria sea extraíble y, en caso de falla, descartable. 
Por otro lado, Este tipo de almacenamiento presenta desventajas tales como la perdida de 
capacidad con el transcurso del tiempo de uso y las limitaciones respecto a las unidades mínimas de 
escritura  y borrado (páginas y bloques respectivamente). A fin de solucionar la primera de estas 
desventajas, es conveniente y recomendable manejarla como una estructura de file system tipo FAT 
similar a las usadas en los disquetes. 
En cuanto a la comunicación con los sensores de captación de datos externos, aún no se ha 
definido la tecnología que se va a utilizar, dado que se está experimentando con emisores pasivos 
avanzados (implantados en el cuerpo de los animales) que no sólo envían una señal al interactuar 
con el receptor sino que podrían enviar otros datos adicionales. 
 
4. Estado de Avance 
Al momento, el proyecto se encuentra en su etapa intermedia. Se definió el diseño general 
del sistema, marcando la funcionalidad del software residente en la PC y la arquitectura de 
hardware del colector. Se programó y testeó como módulos independientes la funcionalidad del 
teclado, el display y el protocolo de acceso de la memory card. 
Como se mencionó anteriormente, el microcontrolador está suspendido la mayor parte del 
tiempo, de modo que cada módulo deberá interrumpirlo cuando necesite su atención. Los módulos 
con esta capacidad son: el teclado, el sensor y la PC -a través de la UART-. La unidad de display es 
pasiva y su única función es visualizar los datos de los diferentes menús. La memoria, puesto que es 
operada con un protocolo SPI se configura como esclava, siendo el maestro el microcontrolador. 
 
 
 
Figura 2. Flujo de programa del microcontrolador del colector de datos. 
 
Tal como muestra la Fig. 2, el programa comienza cuando se enciende el colector 
(implícitamente RESET), luego de realizar las tareas de inicialización de los dispositivos, se 
chequea si la memoria esta presente, y de estarlo si funciona correctamente, de no ser así se 
presentara en el LCD el debido mensaje de error, luego se verifica la presencia del sensor, de no 
estar presente el colector queda en modo consulta. Acto seguido se procede a presentar el menú de 
opciones en pantalla quedando así el colector en estado suspendido hasta que alguno de los 
siguientes eventos lo despierte: 
• Interrupción del teclado: En este caso se procede a navegar por el menú realizando las 
acciones necesarias para ejecutar el procedimiento deseado.  
• Interrupción del Sensor: El sensor interrumpe, en el caso que se obtenga una nueva 
información, colocando en la memoria (del micro) la información del registro en cuestión.  
• Interrupción de la Uart: La Uart interrumpe al colector en el momento que el mismo es 
conectado a la PC intercambiando datos entre si  por un protocolo aun no definido. Durante 
este periodo de carga y descarga de información se deshabilitan  las interrupciones de 
teclado y del sensor para no generar inconvenientes. 
Luego de completar cualquiera de las tareas antes mencionadas el colector vuelve a su 
estado suspendido. 
 
5. Agradecimiento 
Este proyecto cuenta con la financiación de la empresa REDIMEC SRL (integrante del 
Parque Científico Tecnológico de Tandil, en el Polo Informático 
