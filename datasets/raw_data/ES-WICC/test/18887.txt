Integración de métricas de calidad del software
﻿
En la línea de investigación aquí presentada, 
nos ocupamos de la aplicación y propuesta de 
uso de Lógica Continua para la integración de 
Métricas de Calidad del Software, 
fundamentalmente empleando la norma 
ISO/IEC 9126. 
Palabras clave: Lógica Continua. Logic Score 
of Preferences. LSP. Software Engineering. 
Métricas de calidad de software. ISO/IEC 
9126. 
Contexto 
Este trabajo de investigación se encuentra 
enmarcado dentro del  Proyecto de Incentivos 
código 22/F822: “Ingeniería de Software: 
Conceptos, Métodos y Herramientas en un 
Contexto de Ingeniería de Software en 
Evolución”, de la Universidad Nacional de 
San Luis, en la línea “Métodos Formales y 
Prototipos Evolutivos” del mismo. Dentro del 
contexto de desarrollo de métodos y 
herramientas, esta investigación tiene como 
objetivo el concretar la construcción de un 
modelo, que sirva para la integración de 
métricas de calidad software empleando una 
Lógica Continua. 
Introducción 
En trabajos previos hemos desarrollado  
modelos para evaluación de distintas técnicas, 
modelos y herramientas, ya sea en el área de 
recursos humanos [DDF00], herramientas de 
software [FDD00], [DPS03], [DFP04] o 
servicios de e-gov [Cas10], [CDF09], entre 
otros. Dichos modelos han sido creados 
aplicando el método Logic Score of 
Preferences (LSP) el cual hace uso de una 
Lógica Continua ([Duj07], [Duj96], [Duj97], 
[DB97]). 
En el presente trabajo apuntamos a integrar en 
un único valor los distintos datos que se 
obtienen cuando se evalúa la calidad del 
software, especialmente siguiendo la norma 
internacional ISO/IEC 9126 [ISO9126].  
ISO/IEC 9126 es una norma internacional que 
establece una lista de características y 
subcaracterísticas para evaluar la calidad del 
software. La misma ha sido desarrollada por 
ISO (International Organization for 
Standardization) e IEC (International 
Electrotechnical Commission).  
Si bien el estándar mencionado establece una 
lista de requisitos para evaluar software, 
creemos importante obtener un único valor que 
integre los distintos resultados de las métricas 
empleadas. 
Otro aspecto importante a tener en cuenta es 
que el método de integración empleado sea 
comprensible para el analista y que, a la vez, 
resulte de fácil adaptación a distintas 
situaciones y técnicas de evaluación de la 
calidad del software. 
Resultados y Objetivos 
Teniendo en cuenta lo dicho anteriormente, 
nos hemos planteado como objetivo principal 
integrar los datos obtenidos a partir de diversas 
métricas de evaluación de la calidad del 
software en grupos afines que nos den nuevos 
valores, los que a su vez pueden volver a 
agregarse hasta la obtención de un solo 
indicador global para el objeto de software 
bajo evaluación. Para ello empleamos 
WICC 2012 438
2012 XIV Workshop de Investigadores en Ciencias de la Computación
operadores de una Lógica Continua, 
específicamente la lógica empleada por el 
método Logic Score of Preferences (LSP), el 
cual propone la agregación de operadores 
lógicos GCD (Generalized Conjunction 
Disjunction) para construir un modelo de 
evaluación. 
Este modelo de evaluación consiste, 
básicamente, en una estructura de agregación. 
Dichas estructuras de agregación emplean las 
distintas funciones (u operadores lógicos 
GCD) del LSP. Los datos obtenidos por las 
distintas métricas utilizadas, los cuales son las 
entradas al modelo, y que de acuerdo al 
método LSP reciben el nombre de Variables 
de Performance, son mapeados  por medio de 
funciones, llamadas Criterios Elementales, 
para obtener valores en el intervalo [0, 100], 
que reciben el nombre de Preferencias 
Elementales y que representan el grado de 
cumplimiento del requerimiento. 
 
Figura 1. El proceso de evaluación del LSP. 
Son estas preferencias, las que agregadas por 
medio de uno o más niveles de funciones de 
agregación, las  que nos permiten obtener 
preferencias parciales, correspondientes a 
grupos de requerimientos, hasta obtener un 
único valor final o preferencia global final, que 
representa el grado de cumplimiento de todo el 
sistema. 
En la Figura 1 mostramos una visión global 
del método LSP con sus correspondientes 
partes. 
Tabla 1. Métrica Internas ISO/IEC 9126 
1. Functionality metrics 
1.1. Suitability metrics 
1.2. Accuracy metrics 
1.3. Interoperability metrics 
1.4. Security metrics 
1.5. Functionality compliance metrics 
2. Reliability metrics 
2.1. Maturity metrics 
2.2. Fault tolerance metrics 
2.3. Recoverability metrics 
2.4. Reliability compliance metrics 
3. Usability Metrics 
3.1. Understandability metrics 
3.2. Learnability metrics 
3.3. Operability metrics 
3.4. Attractiveness metrics 
3.5. Usability compliance metrics 
4. Efficiency metrics 
4.1. Time behaviour metrics 
4.2. Resource utilisation metrics 
4.3. Efficiency compliance metrics 
5. Maintainability metrics 
5.1. Analysability metrics 
5.2. Changeability metrics 
5.3. Stability metrics 
5.4. Testability metrics 
5.5. Maintainability compliance metrics 
6. Portability metrics 
6.1. Adaptability metrics 
6.2. Installability metrics 
6.3. Co-existence metrics 
6.4. Replaceability metrics 
6.5. Portability compliance metrics 
En la Tabla 1 mostramos los 6 ítems de 
evaluación junto a sus subcategorías (nivel dos 
del árbol) establecidos por la norma ISO/IEC 
9126 [ISO9126]. Los 6 atributos claves de 
calidad del software, que este estándar ha 
identificado, son: 
Funcionalidad: Grado en que el software 
satisface los atributos de idoneidad, 
corrección, interoperabilidad, conformidad y 
seguridad. 
Confiabilidad: Cantidad de tiempo que el 
software está disponible para su uso. Está 
definido por los la madurez, la tolerancia a los 
fallos y la facilidad de recuperación. 
Usabilidad: Grado en que el software es fácil 
de usar. Comprende la facilidad de 
comprensión, facilidad de aprendizaje y 
operatividad. 
Eficiencia. Grado en que el software hace un 
uso óptimo de los recursos del sistema. Está 
dado por los atributos tiempo de uso y recursos 
utilizados. 
Facilidad de mantenimiento. Se refiere a la 
facilidad con que una modificación puede ser 
E0 
Función LSP 
(Logic 
Aggregation of 
Preferences) 
Variables  de 
Performance 
 (Valores de 
las métricas de  
evaluación) 
Criterios 
Elementales 
 
Preferencias 
Elementales 
X1 
 
 
X2 
 
• 
• 
• 
 
Xn 
E1 g1(X1) 
E2 g2(X2) 
En g1(Xn) 
Preferencia 
Global 
Final 
WICC 2012 439
2012 XIV Workshop de Investigadores en Ciencias de la Computación
llevada a cabo. Viene dada la facilidad de 
análisis, facilidad de cambio, estabilidad y 
facilidad de prueba. 
Portabilidad. La facilidad con que el software 
puede ser llevado de un entorno a otro. Está 
referido por los siguientes subatributos: 
facilidad de instalación, facilidad de ajuste, 
facilidad de adaptación al cambio. 
En el nivel dos y tres del árbol (que no 
mostramos por razones de espacio), se 
encuentran las instancias concretas de cada 
una de las métricas. Dichas métricas son las 
que contienen los valores concretos y que de 
acuerdo a LSP son las variables de 
performance de nuestro modelo de evaluación. 
Usando los operadores lógicos GCD podemos 
combinar las preferencias elementales 
(obtenidas de la aplicación de los criterios 
elementales sobre las variables de 
performance) y construir nuestro modelo de 
evaluación de acuerdo a las necesidades del 
usuario del producto de software que se desee 
evaluar. Así, por ejemplo, si se desea dar una 
mayor importancia a alguno de los atributos 
claves, digamos, la confiabilidad (2. 
Reliability), y se quiere que sean rechazados 
aquellos modelos que tengan un valor para 
esta métrica que sea inferior a un umbral 
determinado u, los correspondientes criterios 
elementales, que integran este ítem, 2.1. , 2.2. , 
2.3.  y 2.4.,  (ce2.i) podrían ser definidos de la 
siguiente manera: 
 
donde: 
ce2.i  es el criterio elemental para la variable 
de performance  x2.i (1≤  i ≤ 4). 
x2.i es el valor de la variable de 
performance 2.i (1≤  i ≤ 4). 
norm es la función de normalización que 
devuelve un valor en el intervalo 
[0,100]. 
En la Figura 2 podemos ver la estructura de 
agregación donde dadas las preferencias 
elementales ce2.i(x2.i, ui), surgidas de los 
atributos 2.1. Maturity, 2.2, Fault tolerance, 
2.3. Recoverability y 2.4. Reliability 
compliance, son agregadas todas bajo la 
función LSP CA, que es una función 
mandatoria, es decir, si cualquiera de las 
preferencias elementales, que integran el ítem 
2.Reliability, es igual a cero, entonces la 
función devolverá cero cualquiera sea el valor 
de las otras variables. 
 
Figura 2. La función conjuntiva mandatoria CA que 
devuelve 0 si alguna de las entradas 2.i es 0. 
Nótese que, además de poder elegirse la 
función de agregación, cada una de las 
entradas tiene asociado un peso que juega en el 
resultado final. En este caso, por ejemplo, el 
ítem 2.2, tiene un peso superior a los otros por 
lo que su valor tendrá una mayor importancia 
en el valor total de la función CA. 
Este ejemplo sirve a los efectos de ilustrar, de 
manera sencilla, una de las tantas posibilidades 
de integración que nos permite el método LSP. 
Líneas de Investigación y 
Desarrollo 
Este trabajo es llevado a cabo dentro de la 
línea de “Métodos Formales y Prototipos 
Evolutivos” del proyecto de incentivos de la 
Universidad Nacional de San Luis, código 
22/F822: “Ingeniería de Software: Conceptos, 
Métodos y Herramientas en un Contexto de 
Ingeniería de Software en Evolución” y se 
encuentra íntimamente relacionado con 
trabajos previos en el área del desarrollo de 
modelos de evaluación.  
Cabe destacar que en esa misma línea de 
investigación, hemos también desarrollado 
modelos de evaluación de otro tipo de sistemas 
en trabajos tales como [DF10], [CDF09], 
[Cas10], [DDF00], [DDF07], [DFP04], 
[DFPS01], [DPS03], [FDD00], [FDPS05], 
2.1 
CA 
20 
20 
30 
8 
2.2 
2.3 
2.4 
40 
20 
ce2.i (x2.i, ui) = 
0 si x2.i < ui 
norm(x2.i ) 
WICC 2012 440
2012 XIV Workshop de Investigadores en Ciencias de la Computación
[MDU00]. La construcción de modelos de 
evaluación de calidad de software es uno de 
los proyectos en esta área. Esperamos que la 
misma siente las bases para el desarrollo de 
nuevas tesis de grado y posgrado. 
Otra línea que se está llevando adelante dentro 
de la misma área de investigación es la relativa 
a la creación de modelos de evaluación de 
técnicas de minería de datos, en donde se 
pretende el desarrollo de modelos específicos 
basados en la agregación de métricas para la 
evaluación de clasificadores. 
Formación de Recursos 
Humanos 
La evaluación de sistemas, métodos y 
herramientas es una de las áreas en la cual 
hemos estado trabajando desde hace varios 
años y que ha producido varias publicaciones 
como ya se ha mencionado más arriba.  Este 
trabajo continuo nos ha conducido a la 
producción de tesina de licenciatura así como 
a la evaluación de sitios de gobierno 
electrónico, lo que ha dado como resultado 
tesis de maestría a la vez que otras se 
encuentran en preparación. 
Los aspectos propios del trabajo aquí 
presentado son ambiciosos y se espera que las 
distintas tareas a desarrollar sirvan para la 
realización de nuevas tesis de posgrado así 
como de grado. 
