Técnicas de simplificación de modelos topográficos
﻿ Se presenta en este trabajo un conjunto de algoritmos que reducen la cantidad de polígonos 
utilizados para representar superficies extensas. Se emplea como indicador de error la curvatura local, y se 
presentan distintas versiones de aplicación de este criterio, como por ejemplo, el campo visual del 
observador y máscaras binarias. 
1 INTRODUCCION 
El tratamiento interactivo de grandes superficies topográficas tiene importantes aplicaciones en 
geografía, defensa, y juegos computacionales, entre otros, siendo normal hoy utilizar modelos con 
decenas o incluso centenas de millones de celdas.  
En este trabajo se proponen distintos algoritmos que permiten reducir la cantidad de polígonos 
utilizados para representar estos modelos, sin perder calidad en la imagen generada. Para ello se 
utiliza una representación jerárquica basada en un quadtree con restricciones y templates en cada 
terminal del árbol para generar la triangulación final de la superficie.  
En primera instancia como indicador de cuales sectores pueden ser simplificados y cuales no, se 
utiliza la curvatura local. De esta forma los lugares con baja curvatura pueden ser simplificados sin 
perder calidad, lo cual en general permite reducir la cantidad de polígonos en un factor diez y este 
factor es aún mayor si se tolera una cierta pérdida [1].  
Se presenta también una modificación al algoritmo, en el que se incluye el concepto de la 
posición del observador donde la malla poligonal cambia dinámicamente cada vez que el 
observador se mueve. Finalmente se expone un criterio que introduce el campo de visión de un 
observador inmerso en la escena. Este campo consiste en una máscara binaria generada con técnicas 
de Ray Casting, la cual es utilizada para evaluar regiones de mayor y menor simplificación.  
2 SIMPLIFICACIÓN DE MODELOS TOPOGRAFICOS 
2.1 Metodología para la simplificación poligonal 
La metodología de simplificación poligonal de superficies extensas se basa en la transformación 
del campo de alturas original en un campo cuadrado de longitud de lado L/2k, donde k identifica el 
nivel de refinamiento y L el tamaño del dominio [2]. El algoritmo subdivide al nodo raíz (breadth 
first) hasta que se cumpla con un cierto criterio de tolerancia. Posteriormente se construye una 
jerarquía de mallas con complejidades diferentes organizadas en un quadtree (árbol cuaternario). 
Finalmente la multimalla resultante debe conformarse adecuadamente para eliminar huecos. 
La última operación puede realizarse de varias maneras. En el presente caso se genera un 
quadtree restringido a cuadrantes adyacentes difiriendo en no más de un nivel jerárquico, tal como 
define [3]. Los huecos remanentes en las uniones de este último tipo se resuelven usando un 
diccionario de soluciones estándar [4]. La triangulación que se obtiene en esta manera presenta sólo 
cuatro tipos de triángulos, de excelente calidad. 
2.2 Simplificación básica utilizando indicador de curvatura 
El primer indicador guía de la simplificación de mallas es la curvatura del terreno. La curvatura 
local compara la desviación de la geometría intrínseca de la superficie respecto a la geometría del 
plano. La idea del criterio es que una región con alta curvatura debe ser modelada con más densidad 
de triángulos que una región relativamente más plana. De esta forma los lugares con baja curvatura 
pueden ser simplificados sin perder calidad visual. 
La técnica de simplificación consiste en dividir en cuatro recurrentemente toda región cuya 
curvatura acumulada supere un umbral de tolerancia permitido por el usuario (ec. 1), es decir una 
región será dividida en cuatro subregiones si cumple: 
1
n
R i
i
Tκ κ
=
= ≤∑
 
donde κR es la suma de las curvaturas locales de la región. 
La curvatura local κ se calcula numéricamente mediante un esquema centrado en diferencias 
finitas sobre el campo de alturas hi,j. De acuerdo a este último, el gradiente se calcula como: 
 
, 1, 1,,
2
i j i j i ji j
x
h h h
G
x x
+ −∂ −= =∂ ∆       y     
, , 1 , 1,
2
i j i j i ji j
y
h h h
G
y y
+ −∂ −= =∂ ∆  
donde ∆x y ∆y representan la distancia entre los pares de puntos vecinos a las coordenadas (i,j). 
De la misma manera, el tensor de curvatura (o matriz Hessiana) κij resulta: 
 
( ) ( )
( ) ( )
1, 1, 1, 1,
, 1 , 1 , 1 , 1
i j i j i j i j
x x y y
ij i j i j i j i j
x x y y
G G G G
G G G G
κ
+ − + −
+ − + −
⎡ ⎤− −⎢ ⎥= ⎢ ⎥− −⎣ ⎦  
 
Dado que para los efectos de visualización interesa conocer sólo una curvatura promedio, se 
utilizó como indicador de curvatura local la suma de los cuadrados de los elementos de κij [5], esto 
es: 
 
( ) ( ) ( ) ( )2 2 2 22 1, 1, 1, 1, , 1 , 1 , 1 , 1i j i j i j i j i j i j i j i jij x x y x x x y yG G G G G G G Gκ + − + − + − + −= − + − + − + −  
 
El indicador de curvatura definido en (ec. 4) puede pensarse como una norma del tensor de 
curvatura que mide la distancia de dicho tensor al cero, valor que indica planaridad. Este indicador 
es consistente en el sentido que está relacionado con la curvatura media y la curvatura gausiana, de 
modo que si dicho indicador es cero ambas curvaturas también lo son. La curvatura media se define 
como el promedio de los autovalores de κij  y la curvatura gausiana como su producto. 
En la Figura 1 pueden verse los modelos obtenidos para diferentes valores de umbral.  
 
 
Figura 1 – Representaciones en modo WIRE del MDE correspondiente a la subcuenca del arroyo Santa Catalina 
simplificadas con distintos valores de umbral. 
(1)
(2)
(3)
(4)
2.3 Simplificación utilizando generación dinámica 
De todas formas, estas reducciones pueden no ser suficientes, por lo cual se incorporó al 
indicador de error el concepto de dónde está el observador (o cámara) [6], [7]. La idea consiste en 
que las regiones cercanas al observador o con cambios abruptos de pendiente se modelen con más 
triángulos por unidad de área que las regiones alejadas o relativamente planas. La malla poligonal 
resultante no permanece estática, se extrae desde la jerarquía quadtree que cambia dinámicamente 
cada vez que el observador se mueve. Podemos ver un ejemplo de un caso real de uso [5] en la 
Figura 2. 
Básicamente,  el algoritmo opera con la superficie descripta mediante una grilla regular con 
tamaño de celda constante que agrupa valores de curvatura local resultantes de aplicar un esquema 
centrado de diferencias finitas a los puntos del  campo escalar de alturas. La subdivisión de la 
superficie surge al evaluar el criterio o indicador de error presentado como  
    
                                                                                    (5) 
 
 
donde Κ es el acumulado de curvatura local en la región, T  es la tolerancia permitida por el 
usuario, a  es una constante, d mide la distancia entre el centro de la región y el observador y D  es 
información estable (por ejemplo, la longitud de la diagonal principal del campo de alturas).  
 
Figura 2 -  MDE correspondiente al Lago Nahuel Huapi, Bariloche, Arg.(a) Malla irregular de triángulos. Las zonas 
densas corresponden a regiones cercanas al observador. En (b), (c) y (d) vistas de la navegación con remallado 
interactivo del modelo. 
A modo comparativo, en la Figura 3 se aprecia la importante reducción poligonal de una dada 
grilla regular cuadrada de tamaño de celda constante que ha sido simplificada  aplicando el criterio 
de curvatura local (izquierda) y el concepto de ubicación del observador (derecha).   Si bien ambas 
emplean la misma tolerancia T  en su generación, es notable la reducción del conjunto de vértices 
cuando se introduce la posición del punto de vista 
⎟⎠
⎞⎜⎝
⎛ +
Κ≥
1
D
da
T  
 
Figura 3: Simplificación Poligonal: criterio de curvatura local (izquierda) y agregando el concepto de ubicación del 
observador (derecha). 
2.4 Simplificación guiada por máscaras 
En algunas aplicaciones sucede que ciertos sectores de la superficie permanecen invisibles al 
observador por lo que resulta redundante su representación detallada. Un ejemplo típico se da en los 
escenarios navales, donde el observador ubicado en el interior de una embarcación visualiza la 
costa, que por la lejanía y la perspectiva forzosamente sólo se ve parcialmente. En este contexto es 
irrelevante el detalle excesivo en aquellas regiones que permanecen ocultas. 
En estos casos, el criterio de simplificación de la malla soporte de la representación deberá ser 
preservar el detalle en las regiones visibles y destinar unos pocos polígonos para la representación 
de las regiones que permanezcan invisibles (Ver Figura 4). Para lograr este objetivo se propone la 
construcción automática de una máscara determinada por un indicador de visibilidad de cada punto 
de la malla. La implementación de la máscara en el proceso de simplificación se realiza 
introduciendo un factor de corrección en la ec.1, esto es: 
 
      Tv Rn ≤κ     
 
donde vn es un número real que establece la visibilidad del punto espacial desde la perspectiva del 
observador ( )10 ≤≤ nv . 
La máscara de visibilidad puede generarse automáticamente mediante un algoritmo de ray 
casting. En esta técnica se calculan las intersecciones del terreno con rayos salientes de la posición 
del observador. Para cada rayo, el punto de intersección más cercano al observador será visible (vn 
> 0), mientras que las demás intersecciones se asignan con vn = 0.  
 
Existen métodos optimizados para el cálculo de las intersecciones de los rayos con los elementos 
del MDE [8] (triángulos en nuestro caso), que evitan el incremento masivo de los cómputos 
mediante el ordenamiento inteligente de los elementos. No obstante, aplicar la técnica de ray 
casting no es trivial y a menudo es conveniente que la máscara binaria se construya antes del inicio 
de la aplicación considerando todas las posibles posiciones del observador. La máscara de 
visibilidad resultará entonces de aplicar el algoritmo en aquellos puntos que conforman el borde de 
la zona de movimiento del observador; los puntos interiores no aportan información adicional al 
tratarse del borde de una superficie y donde el movimiento es plano y de altura constante.  
A continuación se listan los pasos principales para generar la máscara de visibilidad. 
 
 definir la superficie de exploración 
 en cada punto del contorno de la superficie de exploración 
o emitir rayos en todas las direcciones 
o obtener la lista de triángulos intersecados 
o ordenarlos por la distancia, para eliminar los triángulos ocultos 
o asignar el indicador de visibilidad a cada triángulo 
 
(6) 
 Figura 4 -  MDE correspondiente al Lago Nahuel Huapi, Bariloche, Argentina. (a) Malla simplificada de acuerdo a la 
curvatura local. (b) Máscara generada de acuerdo a la posición del espectador. (c) Simplificación guiada por la máscara 
generada. 
En el algoritmo, el entorno visible de un espectador se determina mediante rayos dirigidos en 
todas direcciones con una separación angular de ∆α para el acimut y ∆β para la elevación. Es 
importante determinar correctamente la tasa de cambio de la orientación del rayo; si se elige un ∆α 
muy grande, polígonos muy pequeños o muy alejados nunca serán intersectados por el rayo, tal 
como sucede en la Figura 5. 
 
Figura 5: Caso de error en la definición del ∆α de dos rayos consecutivos 
3 CONCLUSIONES 
Se han propuesto algoritmos que permiten reducir dinámicamente la cantidad de polígonos 
utilizados para la representación de modelos de elevación. Las reducciones obtenidas dejan mallas 
con el 5% al 10% de los polígonos originales lo cual tiene un impacto directo en el costo 
computacional del proceso de rendering de la imagen. 
