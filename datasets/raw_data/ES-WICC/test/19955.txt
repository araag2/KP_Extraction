Implementación de un programa PyMoHa para controlar el mouse mediante el uso de un pulsador para personas con discapacidades motrices graves
﻿PyMoHa es una aplicación desarrollada para
permitir, mediante la utilización de un pulsador, emular la
función completa que habitualmente nos brinda un mouse.
Además incluye, como característica destacada, la emulación de barrido. Está destinada a personas que poseen
discapacidades motrices severas.
Está desarrollada en Python, es software libre y multiplataforma.
Este trabajo describe las principales características de la
herramienta, incluyendo una breve descripción de sus funcionamiento, las posibles aplicaciones y las ideas para el
futuro.
Palabras clave: Accesibilidad, discapacidad motriz,
Python, mouse handler, pulsador, multiplataforma, software libre.
I. Contexto
Este documento se realizó en el marco del proyecto Lihuen[1] que tiene como principal objetivo el desarrollo y
mantenimiento de una distribución de GNU/Linux a utilizar con fines educativos.
Las herramientas que se incluyen en la versión estandar
cubren los intereses de la eseñanza primaria y secundaria
abarcando áreas como geografía, quimica, música, nivel
inicial, matemáticas, lengua o astronomía. En versiones
modificadas existen sub-distribuciones de Lihuen para responder a los requerimientos de los docente de varias asignaturas de grado y post-grado de la Facultad.
El grupo de trabajo involucrado está conformado por
un equipo de docentes y alumnos de la Facultad de Informática que trabaja en el Laboratorio de Investigación
de Nuevas Tecnologías Informáticas (LINTI) de la Universidad Nacional de La Plata.
II. Introducción
Tener la capacidad de comunicarnos es un don que facilita el crecimiento personal, el paso del tiempo demuestra
que no importa el medio, ni el lenguaje. Un ejemplo que
ratifica esto es la matemática: un lenguaje universal que
permite la exposición de ideas a través de la cuantificación
de cosas, abstractas o no.
Con el advenimiento de nuevas tecnologías, esta capacidad ha sido exponencialmente incrementada, eliminando
no sólo barreras clásicas, como pueden ser la geografía o
el idioma, sino también ampliando la inclusión a aquellas
personas con problemas motrices, auditivos y/o visuales.
Las computadoras y dispositivos similares brindan la posibilidad a las personas de comunicarse e interactuar unas
con otras, pero se debe garantizar el acceso a todos estos
mecanismos.
Python Mouse Handler (PyMoHa)[2] es una aplicación
que brinda accesibilidad, pensada para facilitar el uso de
una computadora a personas con problemas motrices. El
objetivo inicial del desarrollo fue permitir, mediante la utilización de un pulsador, emular la función que habitualmente nos brinda un mouse, adicionando luego como característica destacada la emulación de barrido.
Si bien existen diversas herramientas pensadas para facilitar esta inclusión de manera similar, tanto en el caso de
dispositivos de hardware como de aplicaciones de software,
tienen un costo económico alto para el usuario. Los productos de hardware (por su naturaleza) tienen un costo
asociado a la materia prima y al proceso de manufacturación, y si se le suma a esto que son dispositivos de
propósito específico y no de producción en masa, el valor
de venta es elevado. Lo mismo ocurre con el costo que
tienen las aplicaciones de software diseñadas con fines de
accesibilidad. Por lo general, las mismas poseen un costo
de licenciamiento alto.
PyMoHa no necesita la adquisición de nuevos dispostivos, sino que es una solución que permite la reutilización
de dispositivos de entrada, como el mouse, para ’armar’
los pulsadores. En cuanto al costo del software, PyMoHa
se destribuye como Software Libre con lo que el costo de
licenciamiento es cero.
A. Concepto de emulación - barrido
Para emular el barrido se indican una serie de puntos a
modo de patrón. A través de esa selección se desplaza el
cursor evitando recorrer así toda la pantalla. Esta selección
se debe realizar con un tutor que asista a la persona en esta
tarea.
El desplazamiento funciona de manera que, al saltar a
un nuevo punto del patrón elegido, el cursor permanece
durante una cantidad de tiempo preconfigurada esperando
por alguna actividad del pulsador en esa posición. Si
no hay actividad desde el dispositivo se salta al siguiente
punto del subconjunto, pero, cuando se recibe un evento se
muestran las acciones que pueden realizarse, y sólo luego
de que el usuario seleccione alguna, se continúa con el desplazamiento.
B. Concepto de emulación - Mouse
Por otro lado, la emulación de mouse presenta en la pantalla direcciones de desplazamiento (arriba, derecha, abajo,
izquierda), permitiendo de esta forma que, mediante una
pulsación, el mouse se mueva al lugar deseado, una vez
posicionado en él, se selecciona una acción a realizar, y
comienza el funcionamiento nuevamente.
Para mostrar las opciones previamente mencionadas el
programa muestra una ventana en el lugar donde está ubicado el mouse, la cual contiene un botón que representa
una de las opciones a realizar. Este botón cambiará, luego
de un intervalo de tiempo, iterando entre las acciones posibles, para permitir seleccionar otra opción.
III. Líneas de investigación y desarrollo
A. PyMoHa - ¿Qué hace?
El aplicativo presenta las 2 modalidades de emulación,
identificándolas como “Capturar puntos” a la Emulación
de barrido y “Mover” a la Emulación de mouse. Al iniciar
el software se debe elegir en qué modalidad vamos a trabajar. La Figura 1, muestra la pantalla donde se eligirá el
modo de funcionamiento.
Fig. 1. Modos de funcionamiento
Una vez que haya decidido cómo funcionará PyMoHa, el
usuario puede comenzar a utilizar el equipo normalmente,
abriendo y utilizando aplicaciones emulando la manera en
que lo haría con un mouse tradicional
Fig. 2. Selección de acción a ejecutar
B. ¿Cómo lo hace?
Internamente, el modo de funcionamiento de la aplicación es similar al de un conector, es decir que disponemos
de dos componentes, la interfaz y el mouse, PyMoha los
une para identificar los eventos del dispositivo de entrada
en forma de pulsación, y permitir mediante esta actividad
en el pulsador elegir la acción que se desea realizar.
Es decir, podemos decir que se identifica la acción y se
pasa a la interfaz gráfica del sistema operativo para que
la traduzca a la aplicación de manera que ésta nunca se
entere de la ausencia de un mouse.
C. Características del desarrollo
PyMoHa está implementada en el lenguaje Python y
es multiplataforma, si bien es desarrollado como software
libre con la intención de cubrir necesidades en plataformas
libres como Lihuen GNU/Linux, lo hacemos sin impedir su
uso sobre plataformas privativas.
Para permitir esto, se utiliza un lenguaje interpretado
y un conjunto de librerías libres que nos dan el soporte
necesario. Concretamente Python1 2.6 como lenguaje de
desarrollo, el toolkit wxWindows2 para la interfaz gráfica
y PyMouse3 para controlar el acceso al mouse.
Entre las principales características podemos decir que
este desarrollo respeta el paradigma de programación orientada a objetos, y que, por su estructura, puede permitir
una extensión de las funcionalidades que actualmente presenta, sin que esto ocasione la necesidad de grandes cambios en el diseño.
IV. Trabajos relacionados
Previamente al desarrollo de PyMoHa se realizó un estudio exhaustivo del área y se concluyó que hay pocos desarrollos en esta dirección y muchos menos independientes del
sistema operativo. La mayoría de las soluciones existentes
son principalmente para ambientes Microsoft Windows.
Uno de los desarrollos que encontramos es Rata
Plaphoons, desarrollado por Jordi Lagares Roset dentro
del marco del projecto fressa4, y bajo la categoría de educación especial. Esta aplicación permite la emulación del
mouse, utilizando un pulsador o un micrófono como dispositivos, y realizando la selección de acciones a través de
un barrido en la pantalla sobre los distintos botones que
representan los eventos a emular.
Otro programa que cumple la misma funcionalidad, y
que se asemeja aún más en la forma en que son representadas las acciones a realizar es MPB5 de Antonio Sacco[3]
que ofrece la selección de acciones mediante botones, pero
que necesita de un switch para su utilización.
Otro producto que permite la emulación a través de un
switch es CrossScanner6, pero que, al igual que MPB, necesita de dispositivos de hardware específicos, y se requiere
el pago de una licencia para su uso.
Aunque no tenga exactamente la misma funcionalidad
que PyMoHa otro software que vale la pena mencionar es
Eviacam, desarrollado por Cesar Mauri-Loba7. Se trata
de una aplicación que ha recibido apoyo de traductores,
programadores y usuarios para incrementar su funcionalidad. Con este software se puede controlar el mouse, pero
haciéndolo a través de una webcam mediante movimientos
de la cabeza, logrando la generación de las pulsaciones a
partir de la falta de movimiento.
1 http://www.python.org/
2 http://www.wxpython.org/
3 https://github.com/pepijndevos/PyMouse
4 http://www.xtec.cat/ jlagares/indexcastella.htm
5 http://www.antoniosacco.com.ar/mpb.htm
6 http://www.rjcooper.com/cross-scanner/index.html
7 http://sourceforge.net/projects/eviacam/
En lo que se refiere a opciones de hardware las alternativas son un poco más abuntantes. Un ejemplo de estos
dispositivos es la lista de alternativas disponibles para la
comunidad española.8
Si bien entre las aplicaciones mencionadas encontramos
algunas que son software libre y que cumplen con las funcionalidas que ofrece PyMoHa de manera similar, el código
no se desarrolló teniendo en cuenta la utlización sobre distintos sistemas operativos y, muchas veces, depende de un
hardware específico. Por estos motivos es que se desarrolló
PyMoHa. La siguiente tabla resume las características generales de las aplicaciones analizadas.
Table Comparativa, características generales:
Herramienta Licencia Plataforma
PyMoHa GPL GNU/Linux , Windows
Rata Plaphoons GPL Windows
MPB Freeware Windows
Eviacam GPL GNU/Linux , Windows
V. Resultados y Objetivos
A. Trabajo a futuro
Con el fin de mejorar la interpretación de cada funcionalidad está previsto realizar cambios en la interfaz gráfica.
También se planifica simplificar la configuración por defecto del sistema, separándola de la configuración avanzada
y agregar más parámetros de configuración para brindar
mayor flexibilidad de personalización por el usuario. Ejemplos serían un parámetro para controlar la velocidad de
repoducción de los puntos y otro para controlar la velocidad de iteración de la herramienta. Para facilitar la utilización en distintos idiomas se implementará la internacionalización de la aplicación con el objetivo de facilitar la
traducción.
B. Conclusiones
PyMoHa permite que cualquier persona que pueda realizar al menos un movimiento voluntario, tenga la posibilidad de utilizar diferentes aplicaciones a través de pulsaciones sobre un switch. Este dispositivo se puede fabricar
reutilizando cualquier mouse al que le funcione al menos
un botón, por lo que la construcción del mismo depende
de la necesidad de la persona, y se puede desarrollar en el
hogar sin demasiadas complicaciones.
Por otra parte es una herramienta de software libre, que
ademas de permitir la modificación del código, ofrece independencia a la hora de elegir que sistema operativo utilizar.
Es importante destacar que el testeo del desarrollo se
esta llevando a cabo en conjunto con un docente que trabaja con alumnos que necesitan de este tipo de aplicaciones.
VI. Formación de recursos humanos
Actualmente en el proyecto Lihuen GNU/Linux trabaja
un grupo de docentes y alumnos de la Facultad de Informática de la UNLP, investigando sobre diversos temas
8 http://www.catalogo-ceapat.org/clasificacion/22/36/06
relacionados con la adaptación de Lihuen a las escuelas de
la zona. Dentro de estas áreas se incluyen tópicos como accesibilidad, clientes livianos, herramientas para educación,
sistemas operativos.
Entre las últimas asistencias a congresos podemos citar:
• Las Jornadas Regionales de Software Libre[4] realizadas en San Luis a finales de octubre de 2010, donde
el grupo presentó varios trabajos. Entre los trabajos
presentados, se incluyen un taller de programación de
interfaces gráficas con PyGKT, una charla sobre el uso
de robots en la enseñanza de programación en escuelas técnicas y una charla de Lethe donde se abarcaron
los temas de funcionamiento e implementación.
• Las Octavas Jornadas de Software Libre[5] realizadas
el 21 de octubre de 2010 en la Facultad de Informática
de la Universidad Nacional de La Plata. Estas estuvieron organizadas por el grupo de trabajo del
proyecto Lihuen y la Secretaría de Extensión de dicha
facultad.
El grupo complementa la actividad de investigación realizando actividades de extensión universitaria. Por ejemplo
durante el año 2010 y lo que va del presente año se visitaron varias escuelas de la zona, donde se brindaron charlas
acerca de los beneficios del uso de software libre a alumnos
que cursan los últimos años del secundario y se colaboró
en la instalación de redes de clientes livianos.
