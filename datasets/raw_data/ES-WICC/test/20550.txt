Incorporando información semántica para la selección de servicios web robustos
﻿
 
En el presente artículo, se propone agregar una nueva dimensión a la descripción funcional que 
expone el perfil OWL-S (Ontology Web Language - Services) para servicios web semánticos. 
Dicha dimensión contendrá por medio de un lenguaje de ontologías las excepciones de errores que 
soporta el servicio web a consumir. Esta incorporación de información semántica a los servicios 
web, le permitirá al consumidor de los mismos, poder seleccionar entre los servicios ofrecidos para 
una misma funcionalidad, aquel que posea mayor cantidad de errores tipificados. La selección de un 
servicio con mayor cantidad de errores contemplados permitirá que la aplicación sea más robusta y 
cuente con la posibilidad de recuperarse automáticamente ante un fallo. 
 
Palabras Claves: Servicios Web, Semántica, SOA, OWL-S, Perfiles 
 
1. INTRODUCCION 
Las arquitecturas de aplicaciones orientadas a servicios (SOA) pueden incluir características 
semánticas para mejorar el descubrimiento y la especificación de servicios, permitiendo seleccionar 
aquellos que posean funcionalidades similares en forma dinámica. Una de las principales 
implementaciones de SOA está basada en el uso de servicios web, los cuales pueden incluir 
información semántica que puede especificarse mediante el lenguaje OWL-S. Dicha información es 
utilizada en los registros con capacidad semántica para el descubrimiento de servicios. Esto permite 
la automatización en el descubrimiento de servicios, ya que el registro puede informar que servicios 
están disponibles con las características que se necesitan consumir. De este modo es posible 
construir aplicaciones que puedan en forma dinámica, adaptarse e ir seleccionado servicios con 
mayor confiabilidad y rapidez. Para información introductoria sobre servicios web semánticos se 
recomienda ver [1] y [4] 
Una de las características de OWL-S es que dispone de un modelo de proceso que indica 
exactamente como interactuar con el servicio, incluso podría indicar como proceder ante un 
determinado mensaje arrojado por el mismo. Sin embargo, ésta especificación es utilizada una vez 
que el servicio se ha descubierto y se ha iniciado la comunicación.  
En éste trabajo se presenta una propuesta para agregar información semántica, para la 
recuperación de errores que pueda ser expuesta en los registros de servicios, de forma que un 
consumidor, pueda seleccionar aquellos servicios que le permitan lograr una mayor robustez. 
En la siguiente sección se explica brevemente la estructura de OWL-S haciendo hincapié en la 
información brindada por su perfil. Luego se presenta la propuesta realizada agregando información 
complementaria a dicho perfil. 
 
1.1 OWL-S 
OWL-S es una ontología de servicios que hace posible, mediante la incorporación de 
información semántica, el descubrimiento, control y combinación de servicios con un alto grado de 
automatización [2]. Esta ontología está formada por tres partes principales: el perfil, las bases y el 
modelo de proceso. Dichas partes están detalladas en la figura 1. 
 
 El perfil es utilizado para la publicación y descubrimiento de los servicios.   
 Las bases describen como se debe realizar la comunicación con el servicio a través de 
mensajes. 
 El modelo de proceso provee una descripción detallada de las operaciones realizadas por el 
servicio, y como interactuar con él.  
 
 
 
 
 
 
 
 
Figura 1- Partes principales de la ontología OWL-S 
Debido a que la propuesta realizada se basa en la incorporación de información al perfil 
presentado por el servicio, en la siguiente sección se explica más en detalle cómo está conformado 
el mismo. Si se desea profundizar en los otros dos componentes de la ontología OWL-S para 
servicios web se recomienda ver [2] y [3]. 
 
¿Cómo funciona? 
PERFIL 
BASES 
MODELO DE PROCESO 
¿Cuál es su utilidad? 
¿Cómo acceder? 
PRESENTA 
SOPORTA 
DESCRIBE 
 
SERVICIO 
1.2 PERFIL 
El perfil describe el servicio en función de tres tipos básicos de información: 
 
1. Proveedor: Información de contacto con la entidad que provee el servicio. 
2. Descripción Funcional: El comportamiento del servicio es representado mediante la 
transformación realizada por el mismo. Especifica las entradas, las precondiciones 
necesarias y sus salidas. Esta descripción del funcionamiento del servicio es 
realizada a un nivel más general que el modelo de proceso. De todos modos es 
importante que ambos sean coherentes entre sí. Una mala descripción funcional 
puede ocasionar que el servicio sea erróneamente seleccionado para una 
funcionalidad que no contiene o bien no exponer funcionalidades que si dispone.  
Esta descripción será utilizada en la selección de servicios. 
3. Propiedades: Permite la incorporación de un conjunto de propiedades que se utilizan 
para describir las características del servicio. Estas características proveen tres tipos 
de información: 
a. La categoría del servicio (dentro de un sistema de clasificación). 
b. La calidad del servicio (dentro de un sistema evaluador). 
c. Información libre (información adicional por ejemplo tiempos de respuesta). 
 
El perfil brinda la información que será utilizada en un registro como por ejemplo UDDI 
(Universal Description, Discovery, and Integration [5]), una vez que se ha seleccionado el servicio, 
el cliente va a utilizar el modelo de proceso para interactuar con él.   
 
2. AGREGANDO INFORMACION AL PERFIL 
Al agregar información al perfil es posible lograr que la invocación de servicios se realice, no 
solo por los parámetros de entrada y salida, sino que ante servicios que ofrezcan la misma 
funcionalidad sea posible seleccionar aquel que proporcione mecanismos más completos para la 
recuperación ante posibles errores.   
La propuesta se basa en agregar una nueva dimensión al modelo de proceso que expone el 
perfil. En ésta dimensión, en base a una ontología de errores, será posible especificar cuáles son las 
excepciones que soporta el proceso que se va a consumir. Dicha ontología aún no está definida y 
será el siguiente paso en este trabajo de investigación. De esta forma se agrega un nuevo tipo 
información a la descripción funcional que muestra los errores posibles que puede retornar el 
servicio. Por lo tanto dicha descripción contendrá ahora información de:  
 Entradas 
 Salidas 
 Precondiciones  
 Errores Posibles 
En la figura 2, se presenta el esquema de información brindada por el perfil, incluyendo la 
dimensión de tipificación de errores. Este conjunto de información será expuesto en el registro de 
servicios. 
 
 
 
 
 
 
 
 
 
 
Figura 2- Información del perfil a utilizarse en el registro de servicios 
 
Con ésta información de errores, el consumidor  podrá, ante la presencia de dos o más servicios 
que satisfagan sus requerimientos funcionales; optar por aquel que ofrezca una mayor cantidad de 
errores tipificados, a fin de poder brindar una mayor robustez a la hora de consumir el servicio. Es 
decir el consumidor analizará los mensajes de errores soportados por el servicio y los comparará 
con su rutina de manejo de errores, para analizar sobre cuál de los servicios ofrecidos dispondrá de 
un mayor control ante un eventual mensaje de error. El criterio para la selección del servicio será 
definido por el cliente, por ejemplo, puede basarse en la cantidad de errores controlados que el 
servicio puede disparar o puede darle mayor importancia al control de determinados errores, e 
incluso exigir como requisito para la selección de un servicio que se informe un tipo de error 
determinado considerado de máxima importancia. 
 
2.1 EJEMPLO DE IMPLEMENTACION 
El perfil de un servicio está definido por un archivo XML que contiene toda la información 
mencionada en el ítem 1.2 del presente artículo. A continuación se muestra un ejemplo posible de la 
metodología para incorporar en el archivo de perfil del servicio, la información semántica para la 
tipificación de errores:  
 
1. Se deberá importar el archivo donde se encuentra definida la ontología de errores: 
 
<owl:imports> 
    <owl:Ontology rdf:about="http://anyurl/Errors.owl" />  
  </owl:imports> 
 
 
2. Se deberá especificar en una sección cuales de los errores de dicha ontología son soportados por 
el servicio, por ejemplo una posible descripción sería: 
 
<profile:throwError rdf:resource=" http://anyurl/Errors.owl#InvalidType" /> 
<profile:throwError rdf:resource=" http://anyurl/Errors.owl#Overflow" /> 
<profile:throwError rdf:resource=" http://anyurl/Errors.owl#DuplicatedValue" /> 
 
De esta forma, cuando un consumidor acceda a la información del perfil, para consultar las 
características de éste servicio sabrá que el mismo puede disparar tres tipos de errores (InvalidType, 
Overflow y DuplicatedValue) por lo tanto si la implementación del consumidor está preparada para 
reaccionar ante dichos errores, priorizará la selección de este servicio frente a otros que cumplan su 
requerimiento funcional.   
PERFIL DEL 
SERVICIO 
PARÁMETROS 
PRECONDICIONES 
 
ERRORES 
ENTRADAS 
 
SALIDAS 
Se encuentra disponible en [3] un ejemplo completo de la definición del archivo XML para un 
servicio web. 
 
3. CONCLUSIONES 
Los lenguajes de ontología como OWL-S nos brindan una herramienta para poder incorporar 
características semánticas a los sistemas facilitando el descubrimiento y utilización de servicios en 
forma dinámica. Sin embargo es importante que los servicios tengan una tipificación de errores para 
que el agente que los esté consumiendo, pueda prever los posibles errores y actuar en consecuencia 
para solucionarlos. Si bien ésta información de errores va a ser útil al momento de consumir el 
servicio, es también importante incluirla al perfil OWL-S. Con lo cual, al momento de seleccionar 
un servicio en forma dinámica, el consumidor podrá optar, por aquel que mejor se adapte a su rutina 
de manejo de errores, para poder lograr la recuperación automática ante un problema. 
 
4. TRABAJOS FUTUROS 
 Analizar los registros de servicios con soporte semántico disponibles, para las posibilidades 
de adaptación a la incorporación de semántica para errores. 
 Definición de una ontología de errores que pueda ser utilizada como base para distintos 
servicios y ampliados según el dominio particular de utilización. 
 
5.
