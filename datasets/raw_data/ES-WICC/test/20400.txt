Mejora del proceso de elicitación de requisitos en proyectos GSD
﻿Mejora del Proceso de Elicitación de Requisitos en Proyectos GSD 
 
 
 
Gabriela N. Aranda 1 Aurora Vizcaíno 2 Alejandra Cechich 1 
garanda@uncoma.edu.ar aurora.vizcaino@uclm.es acechich@uncoma.edu.ar 
 
 
1  Grupo GIISCo, Departamento de Ciencias de la Computación,  
Universidad Nacional del Comahue, Buenos Aires 1400, 8300 Neuquén, Argentina.  
Teléfono: (+54) 299-4490312 – Fax: (+54) 299-4490313 – Web: http://giisco.uncoma.edu.ar/ 
 
2  Grupo ALARCOS, Departamento de Sistemas de Información y Tecnologías,  
UCLM-Soluziona Instituto de Investigación y Desarrollo, Escuela de Informática 
Universidad de Castilla-La Mancha, Paseo de la Universidad 4, 13071 Ciudad Real, España.  
Teléfono:  (+34) 926 295300 ext.3747 – Fax: (+34) 926 295354 – Web: http://alarcos.inf-cr.uclm.es/ 
1. Introducción 
La tendencia constantemente en alza de la globalización de empresas, y especialmente de los 
negocios relacionados con la producción de tecnologías de software, ha producido un profundo impacto 
tanto en las estrategias de marketing y distribución, como en la manera en que los productos son 
concebidos, diseñados, construidos, probados y entregados a los clientes [13]. Ejemplo de ello es que 
cada vez es más común el desarrollo de software en forma distribuida, o desarrollo global de software 
(GSD según las siglas en inglés), donde quienes participan del proceso de desarrollo (usuarios, clientes, 
desarrolladores) se encuentran localizados en países distintos. El principal motivo del crecimiento del 
GSD es que permite a las empresas disminuir los costos de desarrollo mientras se mantiene el nivel de 
calidad del proceso [5], contando con profesionales a lo largo y ancho del mundo sin necesidad de 
afrontar el costo de su traslado [16], o bien producir software para clientes remotos sin necesidad de 
trasladar el equipo de desarrolladores. También permite aumentar la productividad, por medio de 
jornadas de trabajo más extensas teniendo programadores distribuidos en sitios con amplia diferencia 
horaria [10]. Sin embargo, por su característica distribuida, los proyectos de GSD enfrentan varios 
problemas ocasionados por la distancia entre los participantes. Estos problemas son provocados por [9]: 
 la diferencia cultural, que comprende la variedad de lenguajes nativos de los participantes así 
como su comportamiento,  
 las dificultades en la comunicación, que se ve limitada por la tecnología utilizada  
 la diferencia horaria, que obstaculiza la interacción sincrónica,  
 la dificultad que representa gestionar el conocimiento en un entorno con fuentes de 
información variadas y distribuidas. 
 
Al analizar la literatura existente sobre el desarrollo global de software, hemos notado que la 
investigación anterior se centraba en determinar las limitaciones de la comunicación interpersonal y la 
gestión del conocimiento en entornos distribuidos, con el objetivo de definir su implicación en el 
proceso de desarrollo de software, pero que por lo general estos trabajos se dedican a las etapas más 
avanzadas de la ingeniería de requisitos (como la negociación y la especificación) y son muy pocos los 
trabajos referidos a las etapas iniciales. Por ello decidimos enfocar nuestro trabajo en la etapa de 
“elicitación de requisitos”, donde se necesita una interacción fluida entre desarrolladores, clientes, 
usuarios, y otros miembros de la organización para obtener información sobre el sistema que se desea 
construir [21]. Nuestro objetivo, por lo tanto, es proponer una metodología que minimice los problemas 
que puedan presentarse en la fase de recolección de requisitos en entornos distribuidos para obtener 
requisitos más precisos.  
A continuación presentamos un breve resumen de la revisión de conocimientos para cada área 
involucrada y finalmente hablaremos del estado actual de nuestra investigación. 
2. Elicitación de requisitos 
La etapa de elicitación de requisitos, también llamada de recolección (gathering) [26], adquisición 
(acquisition) [23]; captura (capture) [20], o descubrimiento (discovery) [14, 19]; es una de las etapas 
iniciales del proceso de desarrollo de software. Está basada principalmente en la comunicación entre 
desarrolladores, usuarios, clientes, expertos en el dominio, etc., con el fin de descubrir cuáles son las 
necesidades de los usuarios y clientes que deberá cubrir el sistema en construcción. 
Dado que la calidad del software depende de la calidad de los requisitos y esta, a su vez, de las 
técnicas utilizadas para su elicitación [15] hemos enfocado nuestro estudio en analizar una amplia 
cantidad de métodos y técnicas de elicitación existentes, y en buscar literatura relacionada al proceso de 
selección de las técnicas a utilizar. Este tema en particular, el proceso de selección de técnicas de 
elicitación apropiadas a una situación particular, se ha convertido en un foco de interés importante 
durante los últimos años. Los trabajos encontrados hasta ahora demuestran que se ha avanzado en la 
realización de experimentos, análisis de casos y comparaciones entre algunas técnicas de elicitación 
[7], sin que se hayan presentado aún estrategias de selección correctamente validadas. Un trabajo 
distinto es la definición de un modelo de selección de técnicas de elicitación presentado en [15] para 
desarrollo de software co-localizado y que al ser genérico permite adaptarlo también para estudiar la 
selección de técnicas de elicitación en entornos distribuidos.  
Respecto a la investigación sobre selección de técnicas de elicitación de requisitos apropiadas, nos 
ha llamado la atención que ninguna propuesta tiene en cuenta las características cognitivas de los 
participantes del proceso aunque, paradójicamente, es un aspecto que varios autores mencionan que es 
importante durante las etapas de la ingeniería de requisitos, por ejemplo por la manera en que las 
personas perciben y entienden el mundo que las rodea [21] o por los problemas que enfrenta la 
determinación de requisitos debido a limitaciones cognitivas y a la adaptación de los humanos a su 
entorno [6]. 
3. Desarrollo Global del Software 
En una primera aproximación al desarrollo global de software, también llamado distribuido o multisitio, enfocamos nuestra investigación en la problemática del trabajo grupal y del trabajo distribuido [9, 
25]. Por otro lado hemos analizado conceptos relacionados al trabajo colaborativo con soporte de 
herramientas para trabajo en grupo, conocidas como herramientas groupware, formas de clasificarlas 
[11] y un catálogo de herramientas groupware que se utilizan habitualmente en desarrollo de software 
distribuido. También nos enfocamos sobre la etapa de elicitación de requisitos en entornos distribuidos, 
analizando artículos relacionados al proceso de desarrollo global y a propuestas de estrategias para 
mejorar este proceso [8, 12, 22]. Como resultado de dicho análisis, concluimos que los trabajos de 
investigación en esta área han abarcado las etapas más avanzadas de la ingeniería de software [5], y que 
se encuentran pocas propuestas referidas a la elicitación de requisitos, excepto algunas herramientas 
que intentan dar soporte al proceso [17, 24] y algunos experimentos conducidos con el objeto de definir 
y comparar la efectividad de algunas técnicas de elicitación de requisitos sobre otras [5, 18]. La 
revisión de conocimientos realizada en este tema nos dio la pauta de que en la investigación en la etapa 
de elicitación de requisitos en entornos virtuales existen muchas líneas de trabajo posibles. 
4. Estado actual de nuestra investigación 
En la actualidad, nuestro trabajo está enfocado en la definición de una metodología de elicitación 
especialmente orientada a proyectos de desarrollo global de software.  
Esta metodología, que consta de varias fases que se pueden apreciar en la Figura 1, presta especial 
atención a la problemática intercultural y la distancia entre los miembros del equipo virtual que afectan 
la comunicación. Su objetivo principal es definir estrategias para minimizar los problemas que puedan 
presentarse en la fase de recolección de requisitos. Para ello la fase dos de nuestra metodología se 
enfoca en analizar detalladamente la información obtenida para cada sitio y cada stakeholder 
involucrado en el proceso de elicitación de requisitos y en función de ellos determinar cuáles son las 
posibles fuentes de problemas y qué estrategias pueden utilizarse para minimizarlos. 
 
Figura 1. Metodología RE-GSD  
Las estrategias elegidas para minimizar dichos problemas comprenden: 
A) El análisis de las diferentes culturas que intervienen, a fin de dar soporte a los 
participantes y minimizar malentendidos  
B) La utilización de ontologías para eliminar ambigüedades y clarificar la estructura del 
conocimiento 
C) El estudio de los aspectos cognitivos de las personas participantes para seleccionar la 
tecnología más apropiada para ellos. [3, 4] 
 
En la Tabla 1 se presenta cómo cada una de las estrategias sugeridas se relaciona con los problemas 
comunes en proyectos de desarrollo global de software. 
Actualmente se encuentra en etapa de desarrollo una herramienta que dará soporte a la obtención del 
perfil cognitivo de los miembros del equipo y a la metodología de selección de herramientas groupware 
y técnicas de elicitación de requisitos adecuadas de acuerdo a las características cognitivas de un grupo 
de participantes dado [1, 2]. 
Recolección preliminar  
de datos  
Definición del equipo 
virtual y Detección 
temprana de problemas 
Recolección de requisitos
Evaluación de requisitos
Priorización de requisitos
Integración y validación 
Tabla 1 Efecto esperado de las estrategias propuestas en la minimización de problemas de GSD 
 
Comunicación 
inadecuada 
Diferencia 
horaria 
Diferencia 
Cultural 
Gestión del 
conocimiento
(A) Análisis de las diferencias culturales √  √  
(B) Uso de ontologías como facilitadores de la 
comunicación √  √ √ 
(C) Selección de tecnología adecuada a las 
características cognitivas de los participantes √ √ √  
5. Trabajo futuro 
El trabajo futuro de nuestra investigación es la definición e implementación de experimentos para 
validar nuestra metodología. Para ello planeamos ejecutar próximamente una prueba piloto con 
estudiantes de postgrado de España y Argentina que simulen el proceso de elicitación de requisitos 
distribuido. En base a los resultados obtenidos repetiremos el experimento en cursos de pregrado de 
Ingeniería del Software a fin de generalizar el resultado de los mismos. 
6. Agradecimientos 
Este trabajo es financiado por los proyectos MISTICO (PBC06-0082-8542) y MECENAS (PBI060024) de la Junta de Comunidades de Castilla-La Mancha, Consejería de Educación y Ciencia, y el 
proyecto ESFINGE (TIN2006-15175-C05-05) del Ministerio de Educación y Ciencia (Dirección 
General de Investigación)/ Fondos Europeos de Desarrollo Regional (FEDER) de España. También por 
el proyecto CompetiSoft (506AC0287, programa CYTED) y el proyecto 04/E059 de la Universidad 
Nacional del Comahue de Argentina. 
References 
[1] Aranda, G., Vizcaíno, A., Cechich, A., and Piattini, M. "Choosing Groupware Tools and Elicitation 
Techniques According to Stakeholders' Features". International Conference on Enterprise Information 
Sysems  (ICEIS 2005). Miami, USA, May 2005, pp.68-75. 
[2] Aranda, G., Vizcaíno, A., Cechich, A., and Piattini, M. "Towards a Cognitive-Based Approach to 
Distributed Requirement Elicitation Processes". WER 2005, VIII Workshop on Requirements Engineering. 
Porto, Portugal, June 2005, pp.75-86. 
[3] Aranda, G., Vizcaíno, A., Cechich, A., and Piattini, M., "A Model for Selecting Techniques in Distributed 
Requirement Elicitation Processes", en Information Resources Management, Wai K. Law, Editor, IDEA 
Group. 2007, 351-363. 
[4] Aranda, G., Vizcaíno, A., Cechich, A., Piattini, M., and Castro-Schez, J.J. "Cognitive-Based Rules as a 
Means to Select Suitable Groupware Tools". 5th IEEE International Conference on Cognitive Informatics 
(ICCI'06). Beijing, China, July 2006. 
[5] Audy, J., Evaristo, R., and Watson-Manheim, M.B. "Distributed Analysis The Last Frontier?" 37th Annual 
Hawaii International Conference on Systems Sciences (HICSS). Big Island, Hawaii, January 2004. 
[6] Browne, G.J. and Ramesh, V., "Improving information requirements determination: a cognitive 
perspective". Information & Management, Elsevier Science, 39(8): 2002, 625-645. 
[7] Carrizo, D. "Selección de Técnicas de Educción de Requisitos: Una Revisión Conjunta de la Ingeniería de 
Software y la Ingeniería del Conocimiento". IV Jornadas Iberoamericanas de Ingeniería del Software e 
Ingeniería del Conocimiento, JIISIC 2004. Madrid, Spain, November 2004, pp.159-174. 
[8] Damian, D., Lanubile, F., Hargreaves, E., and Chisan, J. "Workshop Introduction". 3rd International 
Workshop on Global Software Development. Co-located with ICSE 2004. Edinburgh, Scotland, May 2004. 
[9] Damian, D. and Zowghi, D. "The impact of stakeholders geographical distribution on managing 
requirements in a multi-site organization". IEEE Joint International Conference on Requirements 
Engineering, RE'02. Essen, Germany, September 2002, pp.319-328. 
[10] Ebert, C. and De Neve, P., "Surviving Global Software Development". IEEE Software, 18(2): 2001, 62-69. 
[11] Ellis, C.A., Gibbs, S.J., and Rein, G.L., "Groupware: Some Issues and Experiences". Communications of 
ACM, 34(1): 1991, 38-58. 
[12] Hargreaves, E., Damian, D., Lanubile, F., and Chisan, J., "Global Software Development: Building a 
Research Community". ACM SIGSOFT. Software Engineering Notes, 29(5): 2004, 1-5. 
[13] Herbsleb, J.D. and Moitra, D., "Guest Editors' Introduction: Global Software Development". IEEE 
Software, 18(2): 2001, 16-20. 
[14] Herlea, D. and Greenberg, S. "Using a Groupware Space for Distributed Requirements Engineering". 7th 
IEEE Int'l Workshop on Coordinating Distributed Software Development Projects. Stanford, California, 
USA, June 1998, pp.57-62. 
[15] Hickey, A.M. and Davis, A. "Elicitation Technique Selection: How do experts do it?" International Joint 
Conference on Requirements Engineering (RE03). Los Alamitos, California: IEEE Computer Society 
Press, September 2003, pp.169-178. 
[16] Kobitzsch, W., Rombach, D., and Feldmann, R., "Outsourcing in India". IEEE Software, 18(2): 2001, 7886. 
[17] Lanubile, F. "A P2P Toolset for Distributed Requirements Elicitation". ICSE Workshop on Global 
Software Development (GSD 2003). Portland, Oregon, USA, May 2003, pp.12-15. 
[18] Lloyd, W., Rosson, M.B., and Arthur, J. "Effectiveness of Elicitation Techniques in Distributed 
Requirements Engineering". 10th Anniversary IEEE Joint International Conference on Requirements 
Engineering, RE'02. Essen, Germany, September 2002, pp.311-318. 
[19] Lutz, R. and Mikulski, I.C. "Resolving Requirements Discovery in Testing and Operations". 11th IEEE 
International Requirements Engineering Conference (RE'03). Monterey Bay, California, USA, September 
2003, pp.33-41. 
[20] Macaulay, L. "Requirements capture as a cooperative activity". IEEE International Symposium on 
Requirements Engineering 1993. San Diego, CA, USA, January 1993, pp.174-181. 
[21] Nuseibeh, B. and Easterbrook, S., "Requirement Engineering: A Roadmap", en The Future of Software 
Engineering, A. Finkelstein, Editor, ACM Press 2000. 2000, 5-22. 
[22] Peters, L. "The Virtual Environment: The “How-to” of Studying Collaboration and Performance of 
Geographically Dispersed Teams". Twelfth IEEE International Workshops on Enabling Technologies: 
Infrastructure for Collaborative Enterprises, WETICE’03. Linz, Austria, June 2003, pp.137-141. 
[23] Shaw, M.L.G. and Gaines, B.R., "Requirements Acquisition". IEEE Software Engineering, 11(3): 1996, 
149-165. 
[24] Togneri, D.F., Falbo, R.d.A., and de Menezes, C.S. "Supporting Cooperative Requirements Engineering 
with an Automated Tool". Workshop em Engenharia de Requisitos, WER02. Valencia, España, November 
2002, pp.240-254. 
[25] Villalobos Abarca, M., Tesis de doctorado: Modelo basado en un enfoque cooperativo multidisciplinario 
para desarrollar software educativo, en Facultad de Informática. Universidad Politécnica de Madrid: 
Madrid, 2004. 
[26] Young, R., "Recommended Requirements Gathering Practices". CROSSTALK The Journal of Defense 
Software Engineering: 2002, 9-12. 
 
