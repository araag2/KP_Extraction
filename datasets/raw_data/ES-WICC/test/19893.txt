Arquitecturas multiprocesador distribuidas cluster grid y cloud computing
﻿
 
Esta línea de Investigación está dentro del 
proyecto “Arquitecturas Multiprocesador 
Distribuidas. Modelos, Software de Base y 
Aplicaciones” acreditado por el Ministerio 
de Educación y de proyectos específicos 
apoyados por organismos nacionales e internacionales. 
En el tema hay cooperación con varias  
Universidades de Argentina  y se está trabajando con Universidades de América Latina 
y Europa en proyectos financiados por CyTED, AECID y la OEI (Organización de 
Estados Iberoamericanos). 
Se participa en iniciativas como LAGrid, 
EELA y el Programa IberoTIC de intercambio de Profesores y Alumnos de Doctorado en el área de Informática. 
Por otra parte,  se tiene financiamiento de la 
Fundación YPF,  Telefónica de Argentina e 
IBM. 
 
Resumen 
 
Caracterizar las arquitecturas multiprocesador distribuidas enfocadas a cluster, grid y 
cloud computing, con énfasis en las que utilizan procesadores de múltiples núcleos 
(“multicores”), con el objetivo de modelizarlas, estudiar su escalabilidad, analizar y 
predecir performance de aplicaciones paralelas y desarrollar esquemas de tolerancia a 
fallas en las mismas. 
Analizar y desarrollar software de base para 
clusters de multicores, tratando de optimizar el rendimiento de tales arquitecturas para diferentes modelos de programación paralela y diferentes paradigmas de resolución 
de aplicaciones. 
 
Es de hacer notar que este proyecto se 
coordina con otros dos proyectos en curso 
en el III-LIDI y relacionados con Algoritmos Distribuidos/Paralelos y Sistemas de 
Software Distribuido. 
 
Keywords: Sistemas Paralelos. Cluster, 
Multicluster, Grid y Cloud Computing. 
Concurrencia en datos y procesos. Paradigmas de programación paralela. Modelos 
y predicción de performance. Scheduling. 
Virtualización. Tolerancia a fallas.  
                  
 
Introducción 
 
La investigación en Sistemas Distribuidos y 
Paralelos es una de las líneas de mayor 
desarrollo en la Ciencia Informática actual 
[1]. En particular la utilización de arquitecturas multiprocesador configuradas en clusters, multiclusters, grids y clouds, soportadas por redes de diferentes características y 
topologías se ha generalizado, tanto para el 
desarrollo de algoritmos paralelos, la ejecución de procesos que requieren cómputo intensivo y la atención de servicios WEB 
concurrentes [2][3][4][16]. 
 
El cambio tecnológico, fundamentalmente a 
partir de los procesadores multicore, ha impuesto la necesidad de investigar en paradigmas “híbridos”, en los cuales coexisten 
esquemas de memoria compartida con mensajes [5][6]. 
 
Es importante en este contexto la modelización del comportamiento de estos sistemas 
paralelos, así como desarrollar nuevos paradigmas y herramientas para la programación eficiente de aplicaciones, y nuevas estructuras de datos que permitan su manejo 
en forma concurrente desde distintos procesos/procesadores [9]. 
 
Asimismo, aparecen nuevas líneas de I/D 
tales como el scheduling dinámico basado 
en el consumo de cada núcleo, el control en 
tiempo real de la frecuencia del clock de 
cada núcleo para optimizar consumo, la detección en bajo nivel de errores de concurrencia, el estudio y desarrollo de lenguajes 
y compiladores adecuados a estas arquitecturas y la detección y tolerancia a fallos utilizando dinámicamente núcleos de la misma 
arquitectura [8][15]. 
 
Por otra parte la heterogeneidad que caracteriza a los clusters y grids, así como a las 
redes de comunicaciones, se extiende a las 
nuevas arquitecturas multicore enfocando 
funcionalidades específicas para algunos 
núcleos, lo cual puede mejorar la performance pero al mismo tiempo complejiza el 
scheduling de los procesos paralelos 
[7][30]. 
 
La aparición de las arquitecturas tipo Cloud 
obliga a poner especial atención a los problemas de virtualización y predicción de 
performance (para la asignación dinámica 
de recursos). Naturalmente a mayor potencia del Cloud, también crecen las complejidades al analizar la comunicación y el acceso a memoria en arquitecturas que están 
distribuidas y a su vez conformadas por 
placas con un número variable de procesadores multicore [24][25]. 
 
 
Definiciones básicas 
 
Un procesador multicore  integra dos o más 
núcleos computacionales dentro de un 
mismo “chip” [10]. La motivación de su 
desarrollo se basa en incrementar el rendimiento, reduciendo el consumo de energía 
en cada núcleo. [17]. 
Un cluster es un sistema de procesamiento 
paralelo compuesto por un conjunto de 
computadoras interconectadas vía algún tipo de red, las cuales cooperan configurando 
un recurso que se ve como “único e integrado”, más allá de la distribución física de 
sus componentes. Cada “procesador” puede 
tener diferente hardware y sistema operativo, e incluso puede ser un “multiprocesador” [11]. Cuando se conectan dos o más 
clusters sobre una red tipo LAN o WAN, se 
tiene un multicluster [12]. La configuración 
más simple a considerar es la conexión de 
clusters homogéneos sobre una red LAN o 
WAN, utilizando un sistema operativo común [13]. 
 
Un Grid es un tipo de sistema distribuido  
que permite seleccionar, compartir e integrar recursos autónomos geográficamente 
distribuidos [13]. Un Grid es una configuración colaborativa que se puede adaptar 
dinámicamente según lo requerido por el 
usuario, la disponibilidad y potencia de 
cómputo de los recursos conectados. El 
Grid puede verse como un “entorno de procesamiento virtual”, donde el usuario tiene 
la visión de un sistema de procesamiento 
“único” y en realidad trabaja con recursos 
dispersos geográficamente [14]. 
 
Las arquitecturas tipo “Cloud” se presentan 
como una evolución natural del concepto de 
Clusters y Grids, integrando grandes conjuntos de recursos virtuales (hardware, plataformas de desarrollo y/o servicios), fácilmente accesibles y utilizables por usuarios 
distribuidos. Estos recursos pueden ser dinámicamente reconfigurados para adaptarse 
a una carga variable, permitiendo optimizar 
su uso [18][19][25][26]. 
 
 
Aspectos de interés 
 
 El incremento en el número de procesadores disponibles en clusters, grids y 
clouds obliga a poner énfasis en el desarrollo de los algoritmos de virtualización 
[15]. 
 La heterogeneidad es inevitable al componer un sistema paralelo que integra 
múltiples procesadores, niveles de memoria y tecnologías de comunicación 
[7]. 
 A partir de la complejidad creciente del 
hardware, se hace más desafiante el 
desarrollo de capas de software eficiente, 
desde el middleware hasta los lenguajes 
de aplicación [20][27][28]. 
 Los problemas clásicos de scheduling y 
mapeo de procesos a procesadores tienen 
nuevos objetivos (en particular los relacionados con el consumo) y deben considerar la posible migración de datos y 
procesos durante la ejecución [29]. 
 Los modelos de predicción de performance resultan especialmente complejos, en particular considerando que los 
multicores disponen de diferentes niveles de memoria y diferentes tiempos de 
comunicación entre núcleos, según su 
“distancia” en la configuración de la arquitectura [30]. 
 El tema de la detección y tolerancia a fallos de hardware y software se vuelve un 
punto crítico al operar sobre arquitecturas con gran número de procesadores, los 
cuales pueden reconfigurarse dinámicamente [22][23]. 
 
  
 
 
Líneas de Investigación y Desarrollo 
 
Temas de Estudio e Investigación 
 
 Arquitectura de procesadores multicore. 
Clusters de multicores.  Software de base.  
 Modelos de predicción de performance 
para arquitecturas tipo cluster de multicores, grids y clouds. 
 Simulación de arquitecturas. Análisis de 
variantes en multicores y clusters de 
multicores. 
 Nuevas técnicas de scheduling para sistemas paralelos, en particular en función 
del consumo de los procesadores. 
 Virtualización en clusters, grids y 
clouds. Predicción de performance aplicada a la virtualización. 
 Nuevas estructuras de datos, orientadas 
a procesamiento paralelo sobre clusters, 
grids y clouds. 
 Detección de errores de concurrencia, 
en tiempo de ejecución.  
 Procesamiento paralelo basado en 
GPUs. Aplicación sobre clusters de 
multicores. 
 Cloud computing.. Análisis comparativo con cluster y grid computing para 
problemas paralelos de cómputo intensivo.  
 Detección y Tolerancia a Fallos (de 
hardware y software)  en clusters, grids 
y clouds. 
 Métricas de evaluación de performance 
y escalabilidad para las nuevas arquitecturas paralelas, a partir del uso de procesadores de múltiples núcleos. 
 
Investigación experimental 
 
 Desarrollo y evaluación de aplicaciones 
sobre un cluster de multicores (128 núcleos). 
 Desarrollo de la capa de software para 
virtualización del cluster de multicores 
para emular servicios de cloud computing.  
 Simulación de variantes en las arquitecturas de multicore. 
 Prueba de algoritmos de scheduling basados en balance de consumo sobre los 
núcleos de un cluster de multicores. 
 
Formación de Recursos Humanos 
 
En cooperación con Universidades iberoamericanas se ha implementado la Maestría  
en Cómputo de Altas Prestaciones y se continúa dictando la Especialización en 
Cómputo de altas Prestaciones y Tecnología GRID. 
En esta línea de I/D existe cooperación a 
nivel nacional e internacional. Hay 9 Investigadores realizando su Doctorado, 4 realizando la Maestría y 5  alumnos avanzados 
están trabajando en su Tesina de Grado de 
Licenciatura. En 2010 se aprobaron 2 Tesis 
Doctorales, 1 de Maestría, 2 de Especialista 
y 3 Tesinas de Grado en temas del proyecto. 
 
Bibliografía 
 
1. Grama A, Gupta A, Karypis G, Kumar V. “Introduction to parallel computing”. Second Edition. Pearson Addison Wesley, 2003. 
2. Dongarra J, Foster I, Fox G, Gropp W, Kennedy 
K, Torczon L, White A. “The Sourcebook  of 
Parallel Computing”. Morgan Kauffman Publishers. Elsevier Science, 2003. 
3. Juhasz Z. (Editor), Kacsuk P. (Editor), 
Kranzlmuller D. (Editor). “Distributed and Parallel Systems: Cluster and Grid Computing”. 
Springer; 1 edition (September 21, 2004). 
4. Miller M. “Web Based applications that change 
the way you work online”. Que Publishing. USA 
2009. 
5. Mc. Cool M. “Programming models for scalable 
multicore programming”. 2007.  
http://www.hpcwire.com/features/17902939.html  
6. Lei Chai, Qi Gao, Dhabaleswar K. Panda. “Understanding the Impact of Multi-Core Architecture in Cluster Computing: A Case Study with 
Intel Dual-Core System”.  IEEE International 
Symp. on Cluster Computing and the Grid 2007 
(CCGRID 2007), pp. 471-478 (May 2007).   
7. Suresh Siddha, Venkatesh Pallipadi, Asit Mallick. “Process Scheduling Challenges in the Era 
of Multicore Processors”Intel Technology Journal, Vol. 11, Issue 04, November 2007. 
8. Olszewski M., Ansel J., Amarasinghe S. “Kendo: 
Efficient Determistic Multithreading in Software”. Architectural Support for Programming 
Languages and Operating Systems (ASPLOS 
„09). 
9. De Giusti L. “Mapping sobre Arquitecturas Heterogéneas”, Ph.D. thesis, Universidad Nacional 
de La Plata, La Plata, Argentina, 2008.  
10. AMD. “Evolución de la tecnología de múltiple 
núcleo”. http://multicore.amd.com/es-ES/AMDMulti-Core/resources/Technology-Evolution 
(2009). 
11. Foster I., Kesselman C., Kaufmann M. “The Grid 
2: Blueprint for a New Computing Infrastructure”. The Morgan Kaufmann Series in Computer Architecture and Design. 2 edition (November 
18, 2003). 
12. Bertogna M. L. “Planificación dinámica sobre 
entornos Grid”. Ph.D. thesis, Universidad Nacional de La Plata, La Plata, Argentina, 2010.  
13. Grid Computing and Distributed Systems 
(GRIDS)     Laboratory - Department of Computer Science and Software Engineering (University of Melbourne). “Cluster and Grid Computing”. 2007. http://www.cs.mu. oz.au/678/. 
14. Grid Computing Infocentre: http://www.grid 
computing.com/  
15. Bertogna M., Grosclaude E., Naiouf M., De 
Giusti A., Luque E. “Dynamic on Demand Virtual Clusters in Grids”. 3rd Workshop on Virtualization in High-Performance Cluster and Grid 
Computing. VHPC 08 – España. Agosto 2008.  
16. Ghosh S. “Distributed System. An Algorithmic 
Approach”. Chapman & Hall/CRC Computer 
and Information Science Series. 
17. Burger T. W. “Intel Multi-Core Processors: 
Quick Reference Guide”. http://cachewww.intel. 
com/cd/00/ 00/23/19/231912_231912.pdf 
18. Dikaikos M. et al. “Distributed InterNet 
Computing for IT and Scientific Research”. 
Internet Computing IEEE. Vol 13, Nro. 5, pp 1013 
19. Ardissono L., Goy A., Petrone G., Segnan M. 
“From Service Clouds to User-centric Personal 
Clouds”. 2009 IEEE Second International 
Conference on Cloud Computing. 
20. Song Y., Kalogeropulos S., Tirumalai P.  “Design and Implementation of a Compiler Framework for Helper Threading on Multi-core Processors”. Proceedings of the 14th International 
Conference on Parallel Architectures and Compilation Techniques; Sept. 2005.  
21. Shirako J. et al. “Compiler Control Power Saving 
Scheme for Multi Core Processors”. LNCS 
Mayo 2007 – pp. 362-376. 
22. Lu S., Tucek J., Qin F., Zhou Y. “AVIO: detecting atomicity violations via access interleaving 
invariants”. SIGPLAN Not., ACM, 2006, 41, 3748. 
23. Golander A., Weiss S., Ronen R. “Synchronizing 
Redundant Cores in a Dynamic DMR Multicore 
Architecture”. IEEE Transactions on Circuits and 
Systems II: Express Briefs Volume 56, Issue 6, 
474-478. 2009. 
24. Vaquero L.M. et al. “A Break in the Clouds: 
Towards a Cloud Definition”. ACM SIGCOMM 
Computer Communication Review, vol. 39, num. 
1, páginas 50-55, ISSN 0146-4833. Enero 2009. 
25. Foster I. “There's Grid in them thar Clouds”. 2 de 
Enero, 2008. 
http://ianfoster.typepad.com/blog/2008/01/theres
-grid-in.html. Noviembre, 2010. 
26. Hemsoth N. “Outsourcing Versus Federation: Ian 
Foster on Grid and Cloud”. 15 de Junio, 2010. 
http://www.hpcinthecloud.com/blogs/Outsourcin
g-Versus-Federation-Ian-Foster-on-Grid-andCloud-96326829.html. Noviembre, 2010. 
27. Vázquez Blanco C., Huedo E., Montero R. S., 
Llorente I. M. “Elastic Management of Clusterbased Services in the Cloud”. Proceedings pp. 
19-24, ACM Digital Library 2009. ISBN 978-160558-564-2. 
28. Vázquez Blanco C., Huedo E., Montero R. S., 
Llorente I. M. “Dynamic Provision of Computing Resources from Grid Infrastructures and 
Cloud Providers”. IEEE Society Press, pp.113120, Workshops at the Grid and Pervasive Computing Conference, GPC 2009. ISBN 978-07695-3677-4. 
29. De Giusti L.,  Naiouf M., Chichizola F., Luque 
E., De Giusti A. E. “Dynamic Scheduling in Heterogeneous Multiprocessor Architectures. Efficiency Analysis”. Computer Science & Technology Series – XV Argentine Congress of Computer Science Selected Papers. Editores: Guillerno Simari, Patricia Pesado, José Paganini. 
Págs. 85-95. ISBN 978-950-34-0684-7. Editorial 
de la Universidad de La Plata (edulp).  La Plata 
(Argentina). 2010.  
30. De Giusti L., Chichizola F., Naiouf M., De 
Giusti A.E., Luque E. “Automatic Mapping 
Tasks to Cores - Evaluating AMTHA Algorithm 
in Multicore Architectures”. IJCSI International 
Journal of Computer Science Issues, Vol. 7, Issue 2, No 1, March 2010. ISSN (Online): 16940784. ISSN (Print): 1694-0814. Págs. 1-6. 
