Complejidad de la programación en lógica rebatible
﻿
La línea de investigación presentada se enmarca en el Proyecto de Investigación “Técnicas de Inteligencia Computacional para el diseño e implementación de Sistemas Multiagentes” del Grupo de Investigación en Robótica
Cognitiva de la Universidad Nacional del Comahue, y en los desarrollos del Laboratorio de
Investigación y Desarrollo en Inteligencia Artificial y del Laboratorio de Investigación y Desarrollo en Ingeniería de Software y Sistemas de
Información, ambos de la Universidad Nacional
del Sur.
Resumen
Dando continuidad al desarrollo de la semántica
GS, se ha planteado estudiar la Complejidad
Computacional y Descriptiva de la Programación en
Lógica Rebatible a través de la semántica declarativa definida. En este sentido se estudiaron diferentes
problemas de decisión y se calculó su complejidad
computacional. Asimismo se avanzó en el estudio
de la Complejidad de Datos, de los Programas y la
Combinada. Este análisis es el punto de partida para
el estudio en marcha de la expresividad de la teoría.
*Este trabajo está parcialmente financiado por la Universidad Nacional del Comahue (Proyecto de Investigación “Técnicas de Inteligencia Computacional para el diseño e implementación de Sistemas Multiagentes”(04/E062)) y por la Secretaría General de Ciencia y
Tecnología de la Universidad Nacional del Sur.
El propósito de este trabajo es presentar los resultados alcanzados en esta línea de investigación, los
desarrollos en progreso y los trabajos a futuro.
PALABRAS CLAVE: Sistemas Argumentativos, Razonamiento Rebatible, Programación
en Lógica, Semántica basada en juegos,
Complejidad Computacional, Complejidad
Descriptiva
1. Introducción
La Complejidad Descriptiva [14] estudia la
relación entre los lenguajes formales y los recursos computacionales (espacio y tiempo) requeridos para resolver los problemas formulados en esos lenguajes. Por un lado deseamos
comprender cómo el poder expresivo de un sistema lógico, tal como lógicas de primer o de
segundo orden o lenguajes de consultas de bases de datos basados en lógica como Datalog,
está relacionado con sus propiedades algorítmicas. Y por otro, querremos relacionar los niveles de complejidad computacional con el poder
expresivo de los lenguajes formales.
Los resultados en este campo muestran que
diferentes clases de complejidad tienen caracterización lógica independiente. Por ejemplo, P
y NP, se corresponden con la lógica de primer
orden con la definición de un operador de menor punto fijo[17, 13] y la lógica de segundo
orden existencial[11], respectivamente. Así vinculamos a la Complejidad Computacional de un
problema con la riqueza necesaria en un lenguaje para especificar dicho problema.
Una de las aplicaciones más interesantes
de las técnicas y resultados alcanzados por la
Teoría de la Complejidad Descriptiva es el área
de Bases de Datos. La Complejidad Descriptiva da una caracterización precisa de cuáles conceptos son definibles como consultas en un sistema, permitiendo evaluar la dificultad de describir consultas.
La Programación en Lógica Rebatible
(P.L.R.) [12] es una extensión de la Programación en Lógica (de ahora en más P.L.), cuya
teoría de prueba está basada en el análisis
dialéctico de argumentos a favor y en contra de
un argumento inicial. La semántica declarativa
GS [6] definida a partir de las semánticas de
interacción basadas en juegos[1, 18] caracteriza
a dicha teoría de prueba.
Algunos cómputos sobre bases de datos necesitan ir más allá del poder expresivo del lenguaje SQL. Así aparecen lenguajes como Datalog.
Del mismo modo, puede la P.L.R. ser analizada
como una base de datos, calcular su poder expresivo y caracterizar la clase de consultas que
podremos realizar. La motivación principal de
este estudio es el interés despertado en los últimos años por los sistemas argumentativos como
herramienta para el desarrollo de diversas aplicaciones [7, 8, 2, 9] y su posible expansión a
otros campos de aplicación.
En este sentido, se ha abierto una línea de investigación en el Proyecto “Técnicas de Inteligencia Computacional para el diseño e implementación de Sistemas Multiagentes”de la Universidad Nacional del Comahue, que corresponde al tema de tesis doctoral del primer autor de
este trabajo y en el que se estudia a la P.L.R.
como una estructura lógica finita, con el objeto
de determinar su poder expresivo y compararlo
con otros sistemas. El propósito de este trabajo es presentar los resultados alcanzados y los
trabajos a futuro.
2. Resultados Alcanzados
En una primer etapa de la investigación se
estudió la Complejidad Computacional de la
P.L.R.. Algunos de los problemas de decisión
evaluados fueron:
Determinar si un literal L pertenece a las
consecuencias rigurosas[6] de un conjunto
de reglas rebatibles es P-completo.[4]
El problema de decisión “dado un conjunto
de reglas rebatibles R, es R un argumento
para un literal bajo un programa lógico rebatible” es P-completo.[5]
Sean AP el tiempo polinomial requerido
para decidir el problema del item anterior, |Lit| la cantidad de literales en el programa y |∆| a cantidad de reglas rebatibles. Entonces la cota superior del tiempo para computar todos los argumentos es
|Lit| ∗ 2|∆| ∗ AP .
(Existencia de un Argumento) El problema
de decisión “existe un argumento para un
literal L bajo un programa lógico rebatible” está en NP.[5]
El problema de decisión “no existe ningún
contraargumento para un argumento bajo
un programa lógico rebatible” está en coNP.
Ya que la P.L.R. no asume como entrada al conjunto de argumentos, los primeros resultados
que han sido establecidos están relacionados
con los argumentos, los movimientos del juego.
Los resultados obtenidos contrastan fuertemente con muchos de los sistemas argumentativos
existentes, ya que estos tienen como lógica subyacente a la Lógica Proposicional (por ejemplo,
[16]).
En función de los problemas definidos anteriormente se delinearon dos problemas de decisión que se consideraron relevantes [4]:
GAMESAT: Decidir si existe un juego para
un literal α ganado por el proponente en el
contexto de un programa lógico rebatible.
NOWINGAME: Decidir si no existe ningún
juego para el literal α ni para el complemento de dicho literal que sea ganado por
el proponente en el contexto de un programa lógico rebatible.
Asimismo, se comenzó el análisis de la
P.L.R. como una base de datos [10, 17], estudiando [5] la Complejidad de los Datos (Data Complexity), la de los Programas (Program
Complexity) y la Combinada (Combined Complexity). Estos conceptos evalúan la complejidad de aplicar una consulta a una base de datos considerando como variables de entrada a
alguno de los dos parámetros o a ambos. Los
resultados obtenidos en cuanto a complejidad
computacional bajo los enfoques Data complexity y Combined complexity pueden encontrarse
en [4, 5].
El poder expresivo de la P.L.R. fue acotado
inferiormente por la Complejidad de Datos en
NP = Σ11, que coincide con la clase de propiedades de las estructuras expresables en lógica
existencial de segundo orden [11].
3. Conclusiones y Trabajo
Futuro
En este trabajo se ha presentado la línea de
investigación en la que se estudia la Complejidad Computacional y Descriptiva de la P.L.R.
junto con los resultados alcanzados.
La Complejidad Computacional mide la cantidad de recursos computacionales (tiempo y espacio) que son necesarios para computar una
consulta, como una función del tamaño de la
entrada. La Complejidad Descriptiva analiza la
sintaxis de las consultas y determina el poder
expresivo de la teoría. Con el objeto de determinar el poder expresivo de la P.L.R., actualmente
nos encontramos estudiando a la teoría como un
lenguaje de consulta de bases de datos y analizando el conjunto de relaciones que pueden ser
computadas a través de una consulta.
Entre nuestros trabajos futuros se encuentra
estudiar si los resultados obtenidos sobre Data
Complexity pueden ser extendido a otros sistemas argumentativos [3, 15] cuya representación
sea similar a la de la Programación en Lógica y
cuya teoría de prueba sea análoga.
