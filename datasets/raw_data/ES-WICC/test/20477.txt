Utilización de recursos cooperación y competición
﻿
Cuando más de una aplicación, tarea o trabajo, quiere utilizar el recurso en
forma exclusiva surge el problema de la exclusión mutua. Con el avance tecnológico, el surgimiento de las redes de alta velocidad y la tendencia a trabajar
con varias computadoras interconectadas, aparecen nuevas herramientas para
resolver los problemas, como es el caso de aquellos inherentemente distribuidos
que se debe analizar bajo una concepción distribuida. Dado que un recurso
puede tener réplicas y varias tareas ó trabajos pueden utilizarlo en el mismo
instante, se pueden presentar los siguientes problemas: k-exclusión mutua, exclusión mutua de grupos de procesos, h-out of-k exclusión mutua.
El proyecto se basa en el análisis, adaptación y búsqueda de alternativas
de algoritmos distribuidos que soporten exclusión mutua o cooperación entre
procesos: considerando los casos de restricciones en el tiempo, en tipos de redes
como las cableadas e inalámbricas (ad hoc).
Preliminares
El manejo de los recursos surge a partir del multiprocesamiento, ya que varios
procesos pueden competir por el acceso al mismo recurso. Con la evolución de la
*e-mail: kmc@cs.uns.edu.ar
**e-mail: jra@cs.uns.edu.ar
***Teléfono: 54 291 4595135 / Fax: 54 291 4595136
tecnología, las redes de comunicación presentan una mayor velocidad y confiabilidad.
Éstas pueden ser cableadas o sin cable (inalámbricas), en el último caso se consideran
las redes inalámbricas ad hoc. Las redes ad hoc no tienen una infraestructura fija y
todos los nodos/sitios son capaces de moverse, las cuales determinan la conectividad
de la red. Los nodos ad hoc pueden comunicarse solo directamente con los nodos
que están inmediatamente dentro de su rango de transmisión. Para comunicarse con
otros nodos, es necesario un nodo intermedio para propagar al nodo destino. Los
nodos necesitan cooperar en orden de mantener la conectividad y cada nodo actúa
como un router. Las características de un sistema ad hoc son la auto-organización,
verdaderamente decentralizado, y altamente dinámico.
Las características de las redes favorecen el desarrollo de nuevas aplicaciones como
es, la comunicación por voz y video, las conferencias, encuentros, compartir en un foro
privado o compartido, compartir una pizarra de trabajo, comunicación inalámbrica
entre vehículos en movimiento, etc.
La sincronización y coordinación de los recursos es una línea actual de estudio e
investigación.
Un buen algoritmo que resuelve el problema tradicional de exclusión mutua debe
garantizar las siguientes propiedades: Exclusión mutua, Libre de interbloqueo y Libre
de inanición
En la extensión de k-exclusión mutua, se debe considerar que k procesos pueden
acceder simultáneamente a la sección crítica (al recurso), en el caso de exclusión
mutua para grupos que se optimice la concurrencia en la sección crítica y en el caso
de h-out of-k se debe considerar que todos los procesos que están en la sección crítica
no excedan los k recuros disponibles. Los algoritmos que resuelven cualquiera de
las variaciones presentadas siguen un ciclo, esto es, inicialmente están en la sección
resto, sección entrada, sección crítica, sección salida y nuevamente a la sección
resto.
Los algoritmos de exclusión mutua se los puede clasificar en: basados en memoria
compartida ó basados en pasaje de mensaje. La última clasificación se los puede dividir
en los basados en quorum ó basados en token.
En los distintos modelos se quiere alcanzar un buen desempeño del mismo, y
este está relacionado con la cantidad de accesos a memoria, la cantidad de mensajes
requeridos para acceder a la sección crítica. Pero también es importante considerar
los procesos que puedan estar compitiendo en un instante de tiempo, las fallas de un
link o de un nodo, en el caso de considerar restricciones en el tiempo el manejo de
prioridades es la característica primordial para alcanzar la solución.
En [3], [4], [5], [6], [10] se presentan algoritmos que utilizan el modelo de memoria
compartida para resolver las diferentes extensiones al problema de exclusión mutua,
y en [7], [11], [12], [14], [15], [16], [17] se resuelve el problema utilizando el modelo
de pasaje de mensajes. Algunos algoritmo han tenido una mayor influencia en la
investigación sobre este tema, como el diseñado por Maekawa [14] que es un algoritmo
basado en quorum.
Desarrollo del Proyecto
Las aplicaciones distribuidas se pueden utilizar en diferentes modelos de redes,
presentar requerimientos de tiempo y de tolerancia a fallas.
En función del ambiente y requerimientos se pueden considerar distintas situaciones:
Ambientes que comparten la memoria o utilizan el paradigma de memoria compartida, usan los algoritmos de exclusión mutua basados en memoria compartida
distribuida.
Ambientes donde la red es cableada, sólo utilizan los algoritmos basados en el
pasaje de mensaje, aplicando tanto los basados en quorum como los basados en
token sobre redes solapadas.
Ambientes donde la red es inalámbrica, se utilizan los algoritmos basados en
el pasaje de mensaje, teniendo en cuenta esta topología de red, donde existen
frecuentes e impredecibles cambios, los algoritmos basados en token son una
mejor elección, porque requieren menor comunicación directa entre los procesos.
El trabajo está orientado al manejo de recursos con trabajo cooperativo y competitivo. El problema de exclusión mutua para grupos de procesos, la exclusión mutua
para k-grupos de procesos y por último el problema de h-out of-k.
Se ha trabajado sobre el problema de la exclusión mutua y la exclusión mutua
para grupos de procesos utilizando el modelo de memoria compartida distribuida y
en el modelo de pasaje de mensajes considerando una topología de red cableada.
Es motivo de futuros trabajos en este proyecto, profundizar el estudio de la problemática considerando restricciones de tiempo que soporten un alto grado de concurrencia, las incidencias que puede tener al considerar que se tiene como medio de
comunicación una red inalámbrica, cómo afecta la falla en un nodo ó link, cómo afecta
que cada proceso requiera más de un recurso al mismo tiempo de k recursos que hay
en el sistema.
Referencias
[1] R. Baldoni, A. Virgillito, R. Petrassi. A Distributed Mutual Exclusion Algorithm
for Mobile Ad-Hoc Networks Seventh International Symposium on Computers
and Communications (ISCC’02) July 01 - 04, 2002 Technical Report, LAAS
CNRS Toulouse, France 2003.
[2] M. Benchaïba , A. Bouabdallah , N. Badache , M. Ahmed-Nacer. Distributed mutual exclusion algorithms in mobile ad hoc networks: an overview, ACM SIGOPS
Operating Systems Review, v.38 n.1, p.74-89, January 2004.
[3] K. Cenci, J. Ardenghi. Exclusión Mutua en la Implementación Memoria Compartida Asincrónica. VI Congreso Internacional de Ingeniería Informática, ICIE
2000, 26 al 28 de Abril 2000 - Facultad de Ingeniería - UBA.
[4] K. Cenci, J. Ardenghi. Sobre Algoritmos Distribuidos de Exclusión Mutua para
n procesos. CACIC 2000.
[5] K. Cenci, J. Ardenghi. Exclusión Mutua para Coordinación de Sistemas Distribuidos. CACIC 2001.
[6] K. Cenci, J. Ardenghi. Algoritmo para Coordinar Exclusión Mutua y Concurrencia de Grupos de Procesos CACIC 2002.
[7] K. Cenci, J. Ardenghi. Exclusión Mutua en Grupos de Procesos a través de Mensajes CACIC 2003.
[8] Y. Chen, J. L. Welch. Self-Stabilizing Mutual Exclusion Using Tokens
in Mobile Ad Hoc Networks. Technical Report 2002-4-2. April 23, 2002.
http://www.cs.tamu.edu/academics/tr/tamu-cs-tr-2002-4-2.
[9] Jehn-Ruey Jiang. A Prioritized h-out of-k Mutual Exclusion Algorithm with
Maximum Degree of Concurrency for Mobile Ad Hoc Networks and Distributed
Systems. IEEE, 2003
[10] Y. J. Joung. Asynchronous Group Mutual Exclusion (extended abstract). In Proc.
17 th. ACM PODC, Junio 1998.
[11] Y. J. Joung. The Congenial Talking Philosophers Problem in Computer Networks
(extended abstract). In Proc. 13th International Symposium on Distributed Computing, 1999.
[12] Y. J. Joung. Quorum-Based Algorithms for Group Mutual Exclusion. IEEE
Transactions on Parallel and Distributed Systems, Mayo 2003.
[13] C. L. Liu, J. W. Layland Scheduling Algorithms for Multiprogramming in a HardReal-Time Environment. ACM, 1973.
[14] M. Maekawa. A
√
N Algorithm for Mutual Exclusion in Decentralized Systems.
ACM Transactions on Computer Systems, Mayo 1985.
[15] Y. Manabe, R. Baldoni, M. Raynal, S. Aoyagi. k-Arbiter: A safe and general
scheme for h-out of-k mutual exclusion. Theoretical Computer Science, Vol. 193,
No. 1-2, pp 97-112, Febrero 1998.
[16] Y. Manabe, N. Tajima. (h,k)-arbiters for h-out of-k Mutual Exclusion Problem.
[17] M. Mizuno, M. Neilsen, R. Rao. A Token Based Distributed Mutual Exclusion
Algorithm Based on Quorum Agreements.
[18] M. Mizuno, M. Nesterenko, H. Kakugawat. Lock-Based Self-Stabilizing Distributed Mutual Exclusion Algorithms. Proceedings of the 16th International Conference on Distributed Computing Systems (ICDCS ’96).
[19] Mukesh Singhal, D. Manivannan. A Distributed Mutual Exclusion Algorithm
for Mobile Computing Environments. 1997 IASTED International Conference
on Intelligent Information Systems (IIS ’97) December 08 - 10, 1997.
[20] J. Walter, S. Kini. Mutual Exclusion on Multihop, Mobile Wireless Networks
Technical Report: TR97-014, 1997.
[21] Y. E. Walter, G. Cao, M. Mohanty. A K-Mutual Exclusion Algorithm for Wireless
Ad Hoc Networks, Proceedings of the first annual Workshop on Principles of
Mobile Computing (POMC 2001), August, 2001. ACM 2001.
[22] J. E. Walter, J. L. Welch, N. H. Vaidya. A mutual exclusion algorithm for ad hoc
mobile networks, Wireless Networks, vol. 9, no. 6, pp. 585-600, Noviembre 2001
and Baltzer Wireless Networks Journal, special issue on DialM papers, 2001.
[23] J. E. Walter. A k-mutual exclusion algorithm for ad hoc mobile networks, Technical report 00-022, Texas A&M University, 2000.
