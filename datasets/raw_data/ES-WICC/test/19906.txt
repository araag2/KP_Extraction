Alternativas de implementación y evaluación de sistemas de tiempo real
﻿
El objetivo de esta línea de investigación 
es el estudio y desarrollo de sistemas de 
software que poseen restricciones tem- 
porales, sobre todo en lo referente a las 
plataformas donde aplicaciones de este 
tipo pueden ejecutarse.  
Se trabaja experimentalmente con dife- 
rentes sistemas operativos que soportan 
las características de tiempo real. 
CONTEXTO 
Esta línea de Investigación forma parte 
del proyecto "Arquitecturas multiproce- 
sador distribuidas. Modelos, Software de 
Base y Aplicaciones" del Instituto de Investigación en Informática LIDI acre- 
ditado por la UNLP. El planteo que se 
presenta constituye una línea incipiente 
en el III-LIDI 
 
Palabras Claves: Tiempo Real, Hardware, Sistemas Operativos, Sistemas 
Embebidos, Posix.  
 
1. INTRODUCCION 
Los sistemas de tiempo real (STR) [4] [5] 
[6] [11] [10] son sistemas de tiempo 
crítico, es decir, se trata de aplicaciones 
para las cuales las restricciones de tiempo 
de cada tarea a llevar a cabo son un 
requerimiento esencial. Esto conlleva a 
un cuidadoso diseño de los sistemas 
operativos empleados, en particular al 
planificador del mismo, que será en gran 
parte responsable del cumplimiento de 
dichos plazos. 
Por lo general, un STR incluye un 
conjunto de dispositivos relativamente 
independientes (hardware y software) que 
operan a diferentes velocidades. Deben 
satisfacer requerimientos de rendimiento. 
Comparando con un sistema tradicional, 
se debe tener especial control sobre la  
utilización de recursos, tiempos de res- 
puesta más estrictos, manejo de priori- 
dades y de fallos. 
Existen algunas diferencias importantes 
entre un sistema de software tradicional y 
uno de tiempo real [5][9] principalmente 
debido al peso de los siguientes tópicos: 
 Planificación de tareas dirigida al 
cumplimiento de las restricciones de 
tiempo en vez de al rendimiento. 
 Control de dispositivos externos. 
 Mayor uso de la E/S, ya que por lo 
general controla un proceso físico o 
químico, lo que implica interactuar 
con sensores, detectores y actuadores. 
 Procesamiento de mensajes que 
pueden llegar en intervalos irregu- 
lares, algunos periódicos y otros 
aleatorios. 
 Seguridad y confiabilidad son 
conjuntas en sistemas de este tipo, 
debe haber detección y control de 
condiciones de falla a fin de evitar 
daños y un funcionamiento sin inte- 
rrupciones. Debido a que muchas ve- 
ces estos sistemas no cuentan con 
supervisión humana (autónomos) el 
manejo de excepciones es crítico. Se 
espera que un STR se ejecute en 
forma continua, automática y segura, 
teniendo un impacto en los costos de 
desarrollo y la seguridad.  
 Modelización de condiciones concu- 
rrentes, ya que al mezclarse gran 
número de eventos periódicos y 
esporádicos es frecuente su concu- 
rrencia como la de los procesos cuya 
ejecución desencadenen dichos even- 
tos, con lo que se debe tratar la  alo- 
cación y control de procesos concu- 
rrentes. 
 Manejo de las comunicaciones entre 
procesos. 
 Protección de datos compartidos. 
 Manejo de requerimientos de tiempos 
y rendimiento. 
 Testeo y debug de procesos concu- 
rrentes. 
 Diseño de simuladores del hardware 
que no se encuentra disponible duran- 
te la fase de pruebas. 
 Selección del hardware adecuado para 
soportar el diseño del software, fre- 
cuentemente estos sistemas utilizan 
hardware especialmente diseñado. 
 Distribución  de tareas (Sistemas 
Distribuidos de Tiempo Real). 
 Por lo general se trata de Sistemas 
Embebidos, o sea sistemas que 
forman parte de un sistema /entorno 
mayor dentro del cual están insertados 
y que controlan. 
 
2. LINEAS DE INVESTIGACION 
Y DESARROLLO 
Se plantean como temas de estudio: 
 Benchmarking de Sistemas Operati- 
vos de Tiempo Real [3], determinan- 
do bajo qué restricciones son aptos. 
En este tema se están desarrollando 
experimentos a fin de medir la 
latencia en la respuesta a una interrup- 
ción, o sea el tiempo transcurrido 
desde que se produce dicha interrup- 
ción hasta que se ejecuta la primera 
instrucción del programa que la 
atiende. Se realizan pruebas sobre 
MaRTEOS [1], RTLinux, RTAI, 
Linux 2.6 y Linux 2.6 preemtive.  
 Dispositivos de Tiempo Real. Entre 
otras cosas, se está experi mentando la 
implementación de sistemas sobre 
plataforma de microcontroladores.  
 Políticas de planificación de CPU [2] 
[1] [8] [10]: en STRSe trabaja en 
simulaciones de diferentes algoritmos 
de planificación de uso de la CPU, 
utilizando la herramienta Cheddar [7]. 
Con esta herramienta es posible simular procesos con diferentes restricciones temporales y de procesamiento, 
con diversas prioridades, empleando 
planificadores que emplean diferentes 
políticas. También es posible em plear 
planificación a nivel de aplicación. En 
base a estas simulaciones, se intentará 
implementar planificadores experimentales tanto en MarteOS como en 
Linux preemptive[11].  
 Recursos compartidos: Inversión de 
prioridades (simple e ilimitada): Se 
llevan a cabo experimentos sobre los 
mismos SOTR mencionados, a fin de 
evaluar ventajas y desventajas de los 
mecanismos implementados en los 
mismos para evitar los efectos des- 
favorables de este fenómeno, en el 
cual un proceso de menor prioridad, 
bloquea a uno de mayor prioridad. 
 
3.  RESULTADOS 
OBTENIDOS/ESPERADOS 
De acuerdo con las tareas desarrolladas y 
a desarrollar, los resultados se enfocarán 
en varias direcciones relacionadas con 
sistemas operativos y con sistemas 
embebidos de tiempo real: 
 Se estudian los sistemas operativos 
MaRTeOS, RT-Linux, RTAI y Linux 
kernel 2.6 con parche-preemtive, 
explorando sus posibilidades para el 
desarrollo de aplicaciones en tiempo 
real, realizando ejemplos concretos. 
 Identificación y/o construcción de  
benchmarks sobre sistemas operativos 
tradicionales para evaluar la posibilidad de ejecutar sistemas con diferentes tipos de restricciones de tiempo 
real a considerar. 
 Identificación y definición de pautas 
para estrategias en Planifi cadores y 
su impacto en los sistemas en STR, 
ensayando las mismas en la herramienta Cheddar. 
 Llevar a cabo experiencias reales en 
RTOS, en cuanto al desarrollo de 
aplicaciones, análisis de sobrecarga y 
planificadores. Evaluar la posibilidad 
de combinaciones de problemas y 
soluciones con análisis de evaluación 
objetivo. 
 Uso de robots y simuladores de robots 
Kephera. Relación de la problemática 
de aplicaciones de robots y los sistemas embebidos de tiempo real. 
4. FORMACION DE RECURSOS 
HUMANOS 
En base a estos temas se están 
desarrollando un doctorado y dos posibles 
tesinas de grado. También aportan 
trabajos de alumnos de la materia Diseño 
de Sistemas de Tiempo Real.  
 
5.
