Revisando bases modales temporales
﻿
Uno de los aspectos que no ha sido considerado en forma profunda en el área de revisión
de creencias es el de la información temporal. La mayoría de los formalismos de revisión
de creencias utilizan un lenguaje proposicional, sin contar con operadores modales con
referencias temporales. Esto representa una limitación importante puesto que el tiempo
es un factor determinante para la toma de decisiones sobre todo en algunos formalismos,
aquellos en los cuales pueda modificarse la información y adquiere relevancia cuando se
produce esa modificación. En este trabajo brindaremos la base para el futuro desarrollo de
un sistema con bases de información temporales dinámicos, en los cuales la representación
del tiempo es adoptada en la forma de operadores modales temporales.
Palabras Clave: Revisión de Creencias, Lenguajes Lógico-Temporales.
1 Introducción
Los mecanismos para garantizar la consistencia del estado epistémico de cualquier agente, implicó el desarrollo de métodos de revisión de creencias. Hasta el momento no se han encontrado
desarrollos tendientes a revisar conocimiento temporal, es decir, conocimiento que esta afectado por el tiempo, no solo en cuanto al cambio, sino al momento en que tal conocimiento es
valedero.
Desde la filosofía y la lógica se ha tratado de capturar la noción de tiempo y de esta manera
se pueden encontrar diversas maneras, a veces contrapuestas desde el punto de vista filosófico.
Se encuentran así, lógicas temporales que se desprenden de las lógicas modales y en las que la
noción de tiempo se encuentra capturada a través de operadores. Las lógicas más conocidas
fueron desarrolladas por Arthur Prior [Pri67a, Pri67b]. Estas lógicas han servido de base para
muchos lenguajes de especificación [CA00, CA99, Gab87, BFG+96].
En el presente trabajo, se plantea como línea de investigación el desarrollo de métodos de
revisión para este lenguajes temporales basados en operadores modales.
2 Lenguaje Temporal L
El lenguaje temporal utilzado esta formado por fórmulas de la lógica de primer orden afectadas
por operdores temporales. Estos operadores serán notados a través de una serie de símbolos.
Los operadores, involucrados en el lenguaje, y su significado intuitivo son:

+ φ “Siempre en el futuro φ”

− φ “Siempre en el pasado φ”
 φ −φ ∧ φ ∧+φ (“Siempre en el pasado, ahora y futuro”)

+ φ “Alguna vez en el futuro φ”

− φ “Alguna vez en el pasado φ”
 φ −φ ∨ φ ∨+φ (“Alguna vez el pasado, en el futuro o ahora”)
⊕ φ “En el próximo instante φ”
 φ “En el instante previo φ”
S(φ, ψ) “φ desde que se verfica ψ”
U(φ, ψ) “φ hasta que se verfica ψ”
Los operadores pueden ser caracterizados por distintas propiedades, entre ellas las siguientes:
Reflexividad: cuando un operador es reflexivo su semántica necesariamente debe considerar el
momento de evaluación de dicho operador. Por ejemplo, si se considera que el operador
“siempre en el pasado” cumple con esta propiedad, la proposición afectada debe darse
ahora, en el presente, y además, en todos los momentos del pasado. En el caso de los
operadores binarios como Since, Until la reflexividad del operador implica que, para un par
de proposiciones α y β, puede darse que β sea verdadera ahora provocando que S(α, β)
se verifique ante la sola presencia de β en el momento actual. En cambio si se pide que
verifique irreflexividad, debe al menos ser verdadera α en el presente, para que verifique
la proposición en cuestión.
Fuerte: esta propiedad asegura la existencia de un próximo instante donde la proposición debe
verificarse. El contrapuesto, un operador débil, no asegura siempre la existencia de un
próximo instante de tiempo. El pedir que un operador binario como Since(α, β) sea fuerte
implica que la proposición β debe ser verdadera en algún momento, mientras que el pedir
que sea débil implica que puede darse el caso de que β no sea verdadera en ningún
momento. Esto podría darse si siempre se deduce α y no se deduce nunca β de la base
de conocimiento.
3 Aspectos importantes sobre el lenguaje temporal
Desde un punto de vista inicial, hay ciertos aspectos que es importante mencionar. Si el proceso
de revisión se produce cada vez que se agrega información externa, se pueden dar situaciones
de incompatibilidad.
La posibilidad de incompatibilidad, depende de cual sea el momento de tiempo a partir
del cual la información ingresada es verdadera. Si el tiempo en el cual la información llega al
sistema es independiente del tiempo de la sentencia ingresada, el ejemplo presentado siempre
presenta incompatibilidad. En el caso anterior, de no considerar independiente estas nociones,
posiblemente no haya incompatibilidad ya que los operadores que reflejan la noción “alguna
vez”, puede tomar lugar antes de que el siempre sea válido. En realidad, esta segunda opción
genera un base temporal diferente, donde este cambio se ve reflejado.
4 Hacia una teoría de revisión temporal
Como primer paso, resulta necesario establecer cuales serán las propiedades o postulados que
deberían respetar los operadores de cambio que traten con información temporal. En las siguientes subsecciones presentaremos postulados característicos de tales operadores sin referencia
a la construcción de los mismos.
4.1 Postulados para los operadores de cambio
Sean α y β sentencias de un lenguaje L presentado anteriormente ∼ un operador de contracción.
Reformulando los postulados de los modelos tradicionales de cambio, podríamos obtener los
siguientes postulados básicos para contracciones:
Clausura: Si K
(T ) = Cn(K(T )) entonces K(T )∼ α = Cn(K(T )∼ α)
Inclusión: K
(T )∼ α ⊆ K(T )
Vacío: Si α ∈ Cn(K
(T )) entonces K(T )∼ α = K(T )
Éxito: Si α ∈ K
(T ) entonces α ∈ Cn(K(T )∼ α)
Recuperación: K
(T ) ⊆ (K(T )∼ α)) + α
Preservación: Si 	 α ↔ β entonces Cn(K
(T )∼ α) = Cn(K(T )∼ β)
Es importante destacar que estos postulados están basados en los presentados como parte
del modelo AGM [AGM85, Gä88]. Además K
(T ) representa la base de conocimiento en el
momento T del sistema.
Análogamente, sea  un operador de revisión. Reformulando nuevamente los postulados de
los modelos tradicionales de cambio, podríamos obtener los siguientes postulados básicos para
revisiones:
Clausura: Si K
(T ) = Cn(K(T )) entonces K(T )α = Cn(K(T )α)
Éxito: α ∈ K
(T )α
Inclusión: K
(T )α ⊆ K(T ) + α
Vacío: Si α ∈ Cn(K
(T )) entonces K(T )α = K(T ) + α
Consistencia: Si 	 ¬α entonces Cn(K
(T ))α = K⊥
Preservación: Si 	 α ↔ β entonces Cn(K
(T )α) = Cn(K(T )β)
Asumiremos que Le representa el conjunto de sentencias específicas, esto es, aquella sentencias de la forma ⊕α o α, con α ∈ L. Además de estos postulados previos, se proponen los
siguientes postulados adicionales:
Clausura temporal: Si 	 α entonces α ∈ K
(T )β, ∀β ∈ L.
Este postulado plantea la necesidad de contar con todos los teoremas en forma temporal,
esto es, los teoremas son válidos en todos los momentos de tiempo. Es por eso que, sin
importar con que fórmula β del lenguaje se esté revisando nuestra base de conocimiento,
se agregará a la misma siempre α, para cualquier teorema α.
Prioridad de información específica:
1. Si ⊕α(α) ∈ K
(T ) entonces α ∈ K(T )β, ∀β ∈ L.
2. Si ⊕α(α) ∈ K
(T ) entonces +α(−α) ∈ K(T )β, ∀β ∈ L.
El lenguaje temporal que presentamos cuenta con operadores temporales que capturan
el tiempo de una forma imprecisa. Se cuenta con un momento de tiempo destacado,
usualmente llamado “presente”, y todas las referencias temporales hechas a través de los
operadores dependen de ese momento destacado. Se puede observar en la definición que
la mayoría de estos operadores proveen definiciones vagas de tiempo. Por ejemplo, +α
representa que α será verdadera en algún momento del futuro pero no se tiene precisión de
cuando lo será. Los únicos operadores que proveen una cierta precisión sobre el momento
en el que la formula afectada por ellos es verdadera son los operadores ⊕ y .
Desde el punto de vista del conocimiento que se desea mantener, es de suma utilidad
tratar de mantener la mayor cantidad de conocimiento temporalmente específico, ya que
de alguna manera representa un conocimiento mas fino o detallado del entorno.
Prioridad de información : Si ¬α ∈ K
(T ) entonces α ∈ K(T )β, ∀β ∈ (L L).
De la misma manera que en el conjunto de postulados anterior se prefiere la información más concreta, temporalmente hablando, en este caso se plantea la preferencia de la
información que es verdadera “alguna vez” que la que “siempre” lo es. Esto se debe a
que en los entornos más concretos de aplicación, la información del tipo siempre es menos
probable o creíble desde el punto de vista temporal. Se puede pensar en cualquier entorno
probable o conocido, el conocimiento de las posibles excepciones es más enriquecedor que
el conocer que una determinada cosa sea verdadera por siempre.
Excepciones:
En el pasado: Si α ∈ K
(T ) entonces K(T )+¬α = K(T )∼ α+[U(α,¬α)∧+¬α∧−α].
En el futuro: Si α ∈ K
(T ) entonces K(T )−¬α = K(T )∼ α + [S(α,¬α)∧−¬α∧+α].
Esta excepciones tratan con la necesidad de mantener la mayor cantidad de información
original como sea posible. Al conocer una determinada información α como verdadera en
todos los momentos de tiempo y revisar con respecto a la posibilidad de que esa misma
información sea falsa en algún momento, lo que podemos concluir es que α seguirá siendo
verdadera desde o hasta (según el caso) que se compruebe que en determinado momento
α es falsa.
Aceptación de Contraejemplo: Si α ∈ K
(T ) entonces K(T )¬α = K(T )∼ α+(+ α∧− α)
Este postulado presenta la capacidad de mantener la mayor cantidad de información
temporal una vez que se produce un cambio en el momento destacado o “presente”.
De esta manera, a pesar del contraejemplo, se puede seguir manteniendo la información
anterior para el resto de la estructura temporal.
Es importante destacar que algunos de los postulados deben ser considerados para otros
operadores temporales del lenguaje L.
5 Conclusiones y Trabajos Futuros
En este trabajo se presentan los postulados preliminares para el desarrollo de una teoría de
cambio de creencias temporal. No obstante, es necesario definir algoritmos para operadores de
contracción y revisión que respeten los postulados presentados en este trabajo. Como trabajo
futuro, resta obtener conjuntos más completos de postulados y obtener teoremas de representación de estos operadores, esto es, dar definiciones constructivas, postulados básicos, y
demostrar que todo operador construido con los algoritmos formulados satisface los postulados
propuestos y viceversa.
