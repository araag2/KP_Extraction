Representaciones básicas
﻿ 
Univvrsidad Nacional de la Patagonia Austral . 
Unidad Académica Caleta Olivia . 
Acceso Norte Ruta 3 CP (9011) Caleta Olivia - Santa Cruz - Argentina 
E-mail: gvilanov@satlink.comemarguez@uaco.unpa.edu.ar 
dpandolfi@uaco.unpa.edu.ar 
ennd@uacounpa.edu.ar dlorenzetti@uaco.unpa.edu.ar 
TE 54 0297 4550654 - FAX 54 0297 4854888 
''~~~ññcFaa666dfpp~~~;;;op;ii~rfs''~~~~t;;~~~"iifff:Y'=ZZ:::sr;¡:; 
investigación en la computación evolutiva. La idea es ajustar el algoritmo al problema mientras se 
resuelve el mismo. 
En los algoritmos genéticos (AGs) no solo es necesario elegir la representación y los operadores 
para el problema, sino que también debemos elegir valores de parámetros y probabilidades de operadores 
del (AG) de manera tal que éste encuentre la solución y de manera eficiente. El proceso de encontrar 'a 
mano' valores apropiados de parámetros y probabilidades de operadores para un AG que afecten la 
performance del algoritmo de una manera significativa, es una tarea que implica consumo de tiempo y 
esfuerzo considerable. Ello ha motivado la automatización de dicho proceso. 
En los (AGs), las soluciones tentativas del espacio de búsqueda son codificadas o representadas 
tradicionalmente por medio de cadenas binarias, el Gray coding es una representación alternativa a la 
codificación estándar de potencias de 2. Bajo esta codificación los puntos adyacentes difieren en sólo un 
bit. 
Como uno de los principales operadores genéticos, el crossover permite que dos individuos con 
alto valor de fitness o adaptabilidad puedan combinar las mejores características de cada uno. 
Los nuevos individuos se crean por crossover alineando los padres escogidos y creando dos 
nuevos individuos por intercambio de subcadenas detemiinadas en un punto aleatorio de corte (one-point 
crossover). Otra alternativa es seleccionar 2 o más puntos de corte (two-point y multi-point crossover). 
También es de uso corriente el uniform crossover que intercambia aleatoriamente bits entre ambos padres. 
En el presente trabajo se analiza la relación. entre las representaciones de los individuos y los 
métodos de crossover a los cuales son sometidos, partiendo de una población inicial en la que a cada 
individuo se le asocia aleatoriamente una probabilidad de cruzamiento. A medida que evoluciona el (AG), 
las probabilidades que heredan los individuos hijos se adaptan dinámicamente en función de una regla 
determinística. De esta manera no solo se logra una evolución en el fitness de los individuos sino 
también en las probabilidades de cruzamiento. 
PALABRAS CLAVE: algoritmos genéticos, adaptación, representación, crossover. 
J Integrantes del proyecto de Investigación. 
L'ii""llll' tradiC:l\lIlal. puuddd ocurrir l/u,' 

qul\ \)C;I':loñ:; al setear los parámetros (h:1 
Los dos pasos más importantes al aplicar algoritmo puedan ser origcn de errores hacia sub::ualquier algoritmo de búsqueda heurístico a un óptimos. 
problema particular son la especificación de la Dos importantes aportes fueron realizados 
:epresentación y la función de evaluación (fitness). por De .long [4] y Grefenstette [5] para mejorar el 
Estos dos ítems constituyen el puente entre el diseño de un (AG). De .long puso un considerable 
;ontexto Jel problema original y el espacio solución esfuerzo en encontrar valores de parámetros (para 
fel problema. En general, un espacio de búsqueda S un (AG) tradicional) que fuesen adecuados para un 

onsiste ..de dos' subconjuntos disjuntos de conjunto de problemas de testeo numérico. 
iubespacios de soluciones factibles y no factibles F Determinó experimentalmente valores 
, U respectivamente (Ver Fig.1). [1] [2] recomendables para probabilidades de crossover de 
Cuando se define un algoritmo genético un punto y mutación. Sus conclusiones fueron que 
AG) es necesario elegir sus componentes tales, para sus funciones de testeo, se obtiene una 
omo operadores de variación (mutación y performance aceptable fijando los parámetros de 
ecombinación ó crossover), representación, población en 50 individuos, probabilidad de 
lecanismo de selección de padres y una población crossover en 0.6, probabilidad de mutación en 0.001 
licia!. Cada una de estas componentes tienen y estrategia de selección elitista. Para otros 
arámetros, por ejemplo: la probabilidad de problemas éstos valores pueden no ser tan buenos. 
lutación o el tamaño de la población. ,;::;"';"",;;;-,,;9!$9.}Jlc!.o . -;;;~~~.1 .. S.:kk6 .. un..AG,,, f;;:,.;,;.;;.t:".;;;:;. ...... :.;'";'''', .. ...,f..,.:,* •. ; .• __#,'-'.;::;"'''':;,.....". ,''> .... ,.;., .. :tt,o."-:--~···, . como un meta-algorItmo para optImIzar valores de 
u 
'ig. 1 Un espacio de búsqueda y sus subespacios 
de soluciones factibles y no factibles. 
Los valores de estas parámetros determinan 
gran parte si el algoritmo encontrará una solución 
:cana al óptima y si la encontrará eficientemente. 

gir los valores correctas de las parámetros es una 
ea que consume tiempo y esfuerzo considerable. 
Los investigadores en el tema han utilizado 
tintas maneras para encontrar buenos valores de 
'ámetros de forma tal que éstos afecten la 
formance del algoritmo significativamente. 
rios investigadores han experimentado con 
ersos problemas de un dominio en particular, 
stando los parámetros en base a resultados de sus 
lerimentos (ajustando 'a mano'). Luego han 
)rmado sus resultados. al aplicar un (AG) en 
ticular a un problema específico, sin una 
ificación de la selección realizada. En este 
parámetros del algoritmo citados anteriormente. 
El propósito es encontrar el set de 
parámetros óptimo y general, es decir que pueda ser 
aplicado a un amplio rango de problemas de 
optimización. 
El proceso de encontrar 'a mano' valores 
apropiados de parámetros y probabilidades de 
operadores para un AG de manera que afecten la 
performance del algoritmo significativamente es una 
tarea que implica consumo de tiempo y esfuerzo 
considerable. 
2. Adaptación. 
La acción de determinar las variables y 
parámetros de un (AG) para adecuarse a un 
problema se ha llamado 'adaptación del algoritmo' 
al problema, y en un (AG) esto puede hacerse 
mientras el algoritmo busca una solución al 
problema. 
Los algoritmos genéticos (AGs), 
implementan la idea de evolución y como la 
evolución en sí misma puede alcanzar su actual 
estado de sofisticación, es natural esperar que la 
adaptación se utilice no solo para encontrar 
soluciones a un problema sino también para ajustar 
el algoritmo a un problema particular. Es posible 
modificar los parámetros durante la ejecución del 
AG. Ello puede hacerse usando alguna regla 
(posiblemente heurística), tomando información de 
retroalimentación del estado actual de la búsqueda o 
bien empleando algún mecanismo de auto­
:ld:!Pl :IC i 1')11. 
Es de notar que estas modificaciones pueden 
afectar a un elemento de un individuo (cromosoma). 
a lodo el individuo o más aun a toda la población. Es 
claro que al cambiar los valores de parámetros 
mientras el algoritmo está buscando la solución a un 
problema. se gana en eficiencia. 
La auto-adappión.basada en la, evolución. 
de la evolución, fue desarrollada' en las Estrategias"­
Evolutivas (EEs) para adaptar los parámetros de 
mutación durante la ejecución. El método ha sido 
extendido a otras áreas de la computación evolutiva 
pero todavía las representaciones, control de 
parámetros y operadores fijos, siguen siendo la 
norma. 
• Qué componentes2 del AG se ven 
afcctadas por cl IllccallislIl\I, L::- decir a 
qué nivel dentro del ¡\G ocurrc la 
adaptación. Se distinguen cuatro niveles 
(ambiente, población, individuos, 
componentes ). 
'. -, .... ,,'-,' ...... ;. '';" ,-ADAPTACION O SETEO DE 
1\ 
PARAMETROS 
Estática Dinámica 
AJUSTE DE PARAMETROS CONTROL DE PARA METROS 
=-:=:i:.:::::_ .... _:==~!Apa .. 
» Representación de individuos. 
» Operadores. Es claro que distintos 
operadores juegan distintos roles en 
distintos momentos del proceso 
evolutivo. Los operadores deberían 
adaptarse. (ej. 'Adaptative crossover, 
Shaffer & Morishima [6], Spears [7]). 
» Control de parámetros. 
En general se distinguen dos formas de 
setear valores de parámetros: 
• Ajuste de parámetros: Se buscan 
buenos valores de parámetros antes de 
ejecutar el algoritmo. (estático) 
• Control de parámetros: Se ejecuta el 
algoritmo con valores iniciales y los 
mismos se van cambiando a medida que 
se ejecuta el algoritmo. (dinámico). 
En el enfoque dinámico hay distintas 
maneras de realizar el control. Dichas maneras se 
clasifican en base a dos aspectos: 
• Cómo trabaja el mecanismo de cambio o 
ajuste. Eltipo de mecanismo puede 'ser 
estático o dinámico. A su vez el 
dinámico puede ser determinístico, 
adaptable o auto-adaptable. 
Determinístico Adaptativo Auto-Adaptativo 
Fig. 2 Taxonomía Global de Adaptación o Seteo 
de Parámetros. 
La clasificación del tipo de adaptación (Ver 
Fig. 2 ) se hace en base al mecanismo usado en el 
proceso, poniendo atención particular en el hecho de 
utilizar o no alguna información de 
retroalimentación del AG. (Eiben, Hinterding y 
Michalewicz [1] y [2]). 
» Adaptación Estática. 
» Adaptación Dinámica. 
Para el primer caso los valores de parámetros 
permanecen constantes durante la ejecución del 
algoritmo. Se necesita de un agente externo ( 
persona o programa) para ajustar los parámetros y 
elegir los valores más adecuados. Típicamente se 
realizan numerosas corridas de testeo tratando dd 
encontrar la relación entre los valores de parámetros 
y la performance del algoritmo. 
2 'Componentes' se refiere a partes de un AG, tales como 
operadores (mutación, recombinación), selección, función 
de fitness, etc. 
La Adaptación dinámica ocurre cuando existe 
:1II11·ITl l1h .. 'l':Jlli"'1l1C\ qUl' nl\\d:r¡¡:. L,:·. p:t:···lnlL't:\':..: sin 
CUlllrld .:xllrno. La claa.: de aiilll'illlltll quu' usall .:1 
tipo de adaptación dinámica. de acuerdo al 
mecanismo de adaptación pueden sub-dividirse en: 
• 
• 
Adaptación dinámica dctcrminÍstica: Los 
valores se modifican en base a una regla 
dt:t.:rminÍstica sin usar información de 
retroalimentación obtenida de la ejecución 
del AG. 
Adaptación dinámica adaptable: Se usa 
información de retroalimentación del 
algortimo para determinar la dirección y/o 
magnitud del cambio de los parámetros. Ello 
incluye la acción de determinar si un valor 
se propaga o no en la población durante la 
evolución. 
código hinario y Grny para direrenlcc métod()) de 
,Tu/.alllil'llhl. i7j.II;. ¡li;. ; .11; 
(0 J ('"ussO\'er '- 'UII/hiJ/dd(J ,:ulllislc l'1l aplit.:ar 
aleatoriamente diferentes métodos de cruzamiento a 
los individuos en el pool de aparcamiento. 
El método utilizado para seleccionar individuos 
de la población para aplicarles los operadores 
genéticos el de 'Selección Proporcional al Fil11ess' 
() RUl/lelll! ¡Yheel. 
Durante el proceso de evolución se realiza una 
adaptación o seteo de parámetros dinámica 
determinÍstica. Se van modificando las 
probabilidades de crossover de cada individuo de la 
población a medida que se ejecuta el algoritmo, 
aplicando una regla determinÍstica (Ver Fig.3). Se 
inicia el AG con una población inicial de tamaño 
fijo. Para cada individuo de la población, en función 
del experimento a realizar (El,E2, .. ElO) se generan 
• Adaptación dinámica Auto-adaptable: En aleatoriamente las probabilidades para los distintos 
este caso se us.a la jj...ª- dC1..YQl1!!.o.,"de_.!!F.QQ.d.eeross9yer.:··8ñ.p'oiñ, (!lE.!!z::2-P9j!tt,,,P:C;;;1..=;·_:;  ~~~olli'Cigii:p;JiiiripTTmeóta;'aui02iCíaptácioññ:::'''"""'WW'«!iiiiifónrie' (pcunif} y kpoiñt'(pck). Cabe aclarar que, 
de parámetros. Los parámetros a ser si bien la información de probabilidades de 
adaptados se codifican como parte del crossover se codifican en cada individuo, no se 
individuo (cromosoma) y se lo somete a los aplica mecanismo de auto-adaptación de parámetros 
operadores genéticos recombinación y debido a que las probabilidades no son sometidas a 
mutación. operadores genéticos. 
Experimentos. 
Se implementa una versión modificada del 
goritmo genético canónico (Goldberg, 1990) para 
la serie de 10 experimentos ( 20 corridas para cada 
10) ( Ver Tabla 1) en las funciones de testeo F 1: 
richalewicz y F2:Easom (ver Tabla 2 y Figs. 4 y 
Los sets de parámetros iniciales seleccionados 
.ra ambas funciones se indican en Tabla 2. 
El : Representación binaria y crossover de un punto 
E2 i Representación binaria y crossover de dos puntos 
E3 i Representación binaria y crossover uniforme 
E4 i Representación binaria y crossover multipunto 
ES ! ReEresentación binaria   crossover combinado (. ) 
E6 i Representación Gray Code crossover de un punto 
E7 ! Representación Gray Code crossover de dos puntos 
ES ! Representación Grav Code crossover uniforme 

9 i Representación Gray Code crossover multipunto 

1O : Representación Gray Code crossover combinado (.) 
Tabla l. Detalle de Experimentos. 
Los experimentos consistieron en aplicar 
resentación de individuos ( cromosomas) en 
Para cada pareja de padres seleccionados del Pool 
De apareamiento. 
1. Elegir aleatoriamente de los padres la 
Probabilidad de crossover (Pc) a aplicar 
2. Generar los dos hijos por crossover de los 
padres. 
3. Evaluar los fitness de los hijos y 
compararlos con sus padres: 
Si alguno de los hijos ó ambos tienen 
mejor fitness que sus padres asignar a los 
hijos la Pc elegida aleatoriamente de los 
padres en 1. 
Sino 
asignar al primer hijo la Pc del 
primer 
padre 
asignar al segundo hijo la Pc del 
segundo 
padre. 
4. Mutar los hijos. 
Fig. 3. Regla de selección de Probabilidad de 
crossover para asignar a individuos hijos. 
.................... _........ . .............. _ ......... _ .... _ .. _---.El ¡Representación blnana \' crossover de un punto 
Pareja de padres s.:leeeionados. 
Cromosoma Pe l Pe2 Peunir Pek 
11101 Ji Ji Ji 0111 O.H 0.12 0.15 0.251 
Cromosoma Pe l Pe2 Pcunif Pck 
1 Ji 01 01 0111 Ji 11 0.15 0.25 0.69 0.10 I 
Punto de corte 
Pcl = 0.15 elegida aleatoriamente entre ambos padres. 
Hijos producidos por crossover one-point en el caso 
de que uno o ambos hijos tengan mejor fitness que 
sus padres los hijos heredan la Pcl= 0.15. 
Cromosoma Pc 1 Pc2 Pcunif Pck 
1 11 01 01 0111 0111 0.15 0.25 0.69 0.10 I 
Notación Descripción 
F 1: Michalewicz' s Fl(x., X2)= 21.5 + XI sin (41t XI) +X2 sin (20 1tX2) 
Function 
(altamente Para -3.0 <= XI <= 12.1, 4.1 <= X2 <= 5.8 
multimodal) (Ver Fig. 1) 
Máximo valor Estimado 38.827553 
(Michalewicz, 1996). 
F2:Easom's Function F2(x"X2)= - cos( XI) cos( X2) e (-( (xl ... ) 2 + (x2·,,)2» 
Unimodal, con un 
mínimo global en un Para X., X2 in [-100,100] 
área muy pequeña en 
el espacio de (Ver Fig.2 a, Fig. 2 b) 
búsqueda. 
Valor mínimo global: -1 
Tabla 2. FunclOnes de Testeo Fly F2 . 
Fig. 4 Easom' S Function 
¡ .ni,. 
Fig.5 Michalewicz's Function 
Set de Parámetros 
Población : 200 individuos 
Generaciones : 500 
Probabilidad de Mutación 0.01. 
Probabilidad de Crossover con 
adaptación. 
Población : 250 individuos 
Generaciones : 1000 
Probabilidad de Crossover con 
adaptación dinámica. 
Probabilidad de Mutación : 0.05 
Las siguientes variables de performance son 
izadas: 
':";".,,:  ,' c':':','!' pl1:''::'ntll;¡! dd I1ll'j(lr illcli\ idll" 
:11';\ l;;trad\, ":lll1lparado (,)Jl l'l m;'¡:\im() valor qll(: l:: 

I valor óptimo conocido o estimado. Nos da una 
dea de cuan lejos estamos del óptimo. Se calcula 
:omo: 
l\'all1T optimo - me.ior individuo)! valor óptimo) * 100 
Ipop Nos da una idea de cuan lejos está el fitness 
'romedio 'Cle-'la "poblaéióÍl ·'respecto' del valor 
ptimo estimado o conocido. Se calcula como: 
:onclusiones. 
'unción de Michalewicz 
¡ -, : 
!- , 
IIl 
[4] 
[5] 
Conferenee on Evolutionary Computation. 
Indianapolis. April 13-16. 1997. pp.6:'-G(j 
:iñn. :\,L.. 1 iimndint!-. R .. auu l\1il'ilJÍl:\\'il:J:, /. .. 
!)aroIllCler Control in ¡';voluliona/'l' Algorilhlll,l', 
IEEE Transaetions on Evolutionary Computation. 
Vol.3. No.2, 1999. 
Spcars. William M. (1992). Adapting Crus.wJI'cr in 
o Gcnclic Algorilhm (Tcchnieal Rcport AIC-92025j. Washington, DC: Naval Researcil 
aboratory,Navy Center for Applied Researeh on 

~f.icial  te!ligence.._ .:, ..... "',_''' .. _,. 
K. De Jong. '.The Analysis of the Behavior of a 
class ofGenetic Adaptive Systems' PhD. thesis, 
Department of Computer Seienee, University of 
Miehigan, Ann Arbor, Michigan, 1975. 
J.J. Grefenstette. 'Optimization of control 
parameters for genetic algorithms. IEEE 
Transaetions on Systems, Many and Cybemeties, 
16 (1):122-1281988. En general, para los experimentos con 
lción dinámica de probabilidades de crossover se 
'"- .. '''i ;;1 ·"-·-----··'--1aA' "'!'-........ ...." . •;-<rJ':s;:. .... Scñiffcr;iñW--ÁÁ;Monsiiiina:· "A,,.. ¡idiirp"tfVF Imm "'me.JoleSi4t.teS1lttau6"r""'·que"""panClos·-··" 'VF' 
mento s con asignación fija de probabilidades crossover distribution mechanism for genetic 
a/gorithms'. In Proceedings 01 the 2'w International 
especto a la desvl'acl'o'n con el me!ior valor 
;¡ Conference on Genetic Algorithms. Laurence Erlbaum 
trado (Ebest), y significativamente mejor para la Associates, 1987. Pp, 38-40. 
,ción con respecto a la media poblacional 
). 
En particular el mejor comportamiento 
'ado para las dos variables de perfomace 
idas (Ebest y Epop), correspondió a la estrategia 
ptación dinámica con representación Gray Code 
;over combinado. 
Llnción de Easom 
En general los experimentos con adaptación 
ca de probabilidades de crossover tuvieron un 
rtamiento tan optimo como los experimentos 
gnación fija de probabilidades con respecto a la 
:ión con el mejor valor encontrado (Ebest), y 
:ativamente mejor para la desviación con 
:> a la media poblacional (Epop). 
En particular el mejor comportamiento 
Ido para las dos variables de perfomace 
fas (Ebest y Epop), correspondió a la estrategia 
,tación dinámica con representación Binaria y 
er combinado. 
'encias. 
Hinterding, R., Miehalewiez, Z., and Eiben, A.E., 
4daptation in Evolutionarv Computation: A 
)urvev, Proeeedings of the 4th IEEE Intemational 
[7] 
[8] 
[9] 
[lO] 
W.M. Spears. 'Adapting Crossover in evolutionary 
algorithms. In J.R. Me. Donnell, R.G. Reynolds, 
and D.B. Fogel, editors, Proceedings of the Fourth 
Annual Conference on Evolutionary Programming. The 
MIT Press, 1995, pp. 367-384 
Golberg, D.E, "Genetic AIgorithms in Search 
Optimization & Machine Learning' Addison­
Wesley Publishing Company. (1.988). 
Miehalewiez, M: "Genetic Algorithms + Data 
Structures = Evo/ution Programs". Springer third 
revised edition, 1.996 
"Changing 
Comparative 
Evolutionary 
© The 
Mathias K, Whitley L.D, 
representations during Search: A 
Study of Delta Coding" 
Computation 2 (3): 249-278. 
Massaehusetts Institute ofTeehnology. 
