Ingeniería de software de sistemas distribuidos
﻿
El proyecto, continuidad del presentado en WICC’s anteriores investiga y desarrolla sobre
temas relacionados con problemas de Ingeniería de Software en Sistemas Distribuidos (ISSD).
Los temas de interés relacionados con la ISSD tienen que ver con los propios de arquitectura
de sistemas, estructuras de BD distribuidas y enlace de comunicaciones del entorno. Además, la
especificación, validación y desarrollo de aplicaciones de software en este tipo de ambientes
requiere de consideraciones especiales que la diferencian de la IS clásica. Dentro de la
especificación, es de interés el estudio de metodologías de Ingeniería de Requerimientos y como se
ve afectada la misma en los entornos distribuidos, tanto para la especificación del sistema como
para la toma distribuida de requerimientos.
El desarrollo de aplicaciones distribuidas de tiempo real es otro punto de interés, lo que lleva
a estudiar y plantear alternativas a las metodologías y herramientas más usuales para poder
evolucionar hacia la especificación de este tipo de ambientes.
Palabras Clave
Sistemas Distribuidos. Automatización de Oficinas. Sistemas centrados en la WEB.
Sistemas de apoyo a la toma de decisiones.
Introducción
Un sistema distribuido consiste en un conjunto de computadoras autónomas conectadas por
una red y con soporte de software distribuido. Dichas computadoras coordinan sus actividades y
además, comparten los recursos de hardware y de software. Las potenciales ventajas que se
presentan con los sistemas distribuidos son:
! Permitir compartir información mientras se mantiene control local de la misma
! Incrementar de disponibilidad y confiabilidad de la información
! Mejorar la performance integral del software.
! Facilitar la modelización de aplicaciones que son de naturaleza distribuida. Por ejemplo, una
compañía que tiene sucursales en diversas ciudades.
                                                
1 Docentes-Investigadores LIDI – Facultad de Informática – UNLP – E-Mail: { ppesado, pbertone, hramon,
marcosb, pthomas, responda, apasini, juanlb, gricci, balbanesi, miglesias, ismael}@lidi.info.unlp.edu.ar
2 III LIDI- Facultad de Informática – UNLP – Calles 50 y 115 Primer Piso – (1900) La Plata, Argentina.
TE/FAX +54 221 4227707. http://www.lidi.info.unlp.edu.ar
! Control y administración más localidad, en cada nodo de la red que lo necesite.
! Expandir incrementalmente el sistema. Esto permite un mejor costeo e incremento de
performance a medida que se necesite.
! Balancear adecuadamente la carga entre los nodos de la red.
El modelo de software hace imposible utilizar BD centralizadas. Es imprescindible
entonces, definir un modelo de datos que por sus características se implementará como una BD
distribuida, heterogénea o eventualmente federativa. La idea anterior tiene que ver con el tipo de
arquitectura definida para el problema. En el primer caso, una BD distribuida, se supone que se está
trabajando con un modelo de datos unificado entre todas las localidades de trabajo, utilizando como
soporte el mismo DBMS. El segundo caso en tanto, las BD heterogéneas, nos presentan un único
modelo pero donde el soporte de DBMS puede ser diferente. De aquí, que el desarrollo de
aplicaciones bajo este entorno requiere estudiar características de trabajo que permitan manejar esta
heterogeneidad de soporte. Por último, una BD federativa, presenta un esquema de modelado donde
las aplicaciones comparten información que no respeta la misma estructura. En este caso, el
desarrollo de las aplicaciones debe contemplar la forma de interacción de los datos del software
distribuido.
Un área de investigación de este proyecto tiene que ver con el estudio de la arquitectura bajo
la cual se define el entorno distribuido. De esta forma se busca analizar los problemas de
distribución y encontrar el óptimo para la ubicación de datos y procesos, teniendo en cuenta el nivel
de tolerancia a fallos con el cual se enfrenta la aplicación.
La extracción de los requerimientos es una parte especialmente crítica del proceso de
desarrollo del software. Se pueden utilizar una variedad de técnicas para determinar qué es lo que
los usuarios quieren realmente. Este tipo de aplicaciones distribuidas hacen que se deba investigar y
desarrollar variantes sobre las técnicas tradicionales para la elicitación de requerimientos que
permitan evaluar todas las características propias que presentan los  sistemas distribuidos.
Líneas actuales de trabajo, estudio e investigación
Las líneas de trabajo son coincidentes con las presentadas para WICC 2002:
! Procesamiento distribuidos. Arquitectura, comunicaciones y software. Lenguajes de
aplicación
! Ingeniería de software distribuidos. Extensiones para el tratamiento de sistemas distribuidos
de tiempo real.
! Metodologías de especificación. UML
! Métricas para evaluación del software. Mediciones y métricas para sistemas de tiempo real
y/o distribuidos.
! Bases de datos distribuidas. Estudios sobre replicación y consistencia. Tolerancia a fallos.
Migración de datos
! Ingeniería de Requerimientos. Evaluación de alternativas para la toma, aceptación y
validación de requerimientos de sistemas distribuidos.
! Tecnología de desarrollo bajo WEB.
Bibliografía
ACM Journal of Educational Resources in Computing, ACM Transactions on Computer Systems,
ACM Transactions on Computer-Human Interaction, ACM Transactions on Database Systems,
ACM Transactions on Information Systems, ACM Transactions on Software Engineering and
Methodology.
Andrews “Foundations on Multithread and Distributed Programing” Addison Wesley. 1999.
Arthur L. “Improving software quality” , Wiley 1993
Beizer B. “Software testing techniques”  Internation Thompson Computer Press 1990
Bell, David; Grimson, Jane, "Distributed Database Systems",. Addison Wesley. 1992
Bobak, A, “Distributed and Multi-Databse Systems”, Artech House, 1996
Buretta, M “Data Replication”, John Wiley and Sons, 1997
Burlesson, D, “Managing Distributed Databses, Building Bridges between Database Island”, John
Willey 1995.
Communications of the ACM
Coulouris G., Dollimore J., Kindberg T. “Distributed Systems Concepts and Design”, Addison
Wesley 1994
Date, C.J., "Introducción a los sistemas de Bases deDatos". Addison Wesley 1994.
De Marco.”Controlling Software Projects”. Yourdon,1998
Frakes, W, Baeza Yates, R “Information Retrieval. Data Structures & Algorithms”, Prentice Hall
1992
Ellison K. “Developing real time embedded software” . Wiley 1994.
Hatley D., Pirbhai I., “Strategies for Real-Time System Specification”, Dorset House, 1988.
Humphrey W..”Managing the software process”. Addison Wesley, 1989.
Huns M, Singh, M Readings in Agents”, Morgan Kaufmann Publishers, 1997.
IEEE Computer, IEEE Concurrency, IEEE Realiability and Manteniability Symposium, IEEE
Sigact News, IEEE Software Engineering, IEEE Transactions on Parallel and Distributed
Processing
Jajodia S., Kerschberg L. “ Advanced transaction models and architectures” Kluwer Academic Pub.
1997
Larson, J., "Database Directions. From relational to distributed, multimedia, and OO database
Systems". Prentice Hall. 1995
Leben, M, “Client Server Databases Enterprise Computing”, Prentice Hall, 1997.
Loucopoulos, P, Vassilio, K, "System Requirements Engineering" McGraw-Hill Book Company
Moore J. “Software engineering standards”  IEEE 2000
Özsu, T, Valduriez, P,“Principels of distributed database systems”, Prentice Hall, 1999
Pfleeger S. “Ingeniería de Software. Teoría y Práctica”.  Addison Wesley 2000.
Pressman, R;”Ingeniería de Software, Un enfoque práctico.” Cuarta edición. Mc Graw Hill. 1998
Robinson, W, Volkov, S, "Conflict-Oriented Requirements Restructuring" Departament of
Computer Information Systems. Georgia State University.Atlanta. USA.
Seepold, R, Martinez Madrid, N, "Virtual Components Design and Reuse", Kluwer Academic
Publishers - 2000.
Shumate K., “Software  specification and design for real-time systems”, Wiley 1992.
Silbershatz; F., "Fundamentos de las Bases de Datos".. Mc Graw Hill. 1998.
Wolf, W, "Computers As Components: Principles of Embedded Computing System Design",
Morgan Kaufmann - 2000.
Simon Errol. “Distributed Information Systems. From C/S to distributed multimedia.”  .  Editorial:
Mc GrawHill
