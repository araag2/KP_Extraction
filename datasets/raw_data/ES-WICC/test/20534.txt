Expresividad de la programación en lógica rebatible
﻿
En el marco del Proyecto de Investigación “Técnicas de Inteligencia Computacional para el
diseño e implementación de Sistemas Multiagentes”, de la Universidad Nacional del Comahue, se
ha abierto una línea de investigación que da continuidad al desarrollo de la semántica GS , y que
tiene como objetivo estudiar la Complejidad Computacional y Descriptiva de la Programación en
Lógica Rebatible a través de la semántica declarativa definida.
El propósito de este trabajo es presentar los resultados alcanzados en esta línea de investigación, los desarrollos en progreso y los trabajos a futuro.
PALABRAS CLAVES: Sistemas Argumentativos, Razonamiento Rebatible, Programación en Lógica,
Semántica basada en juegos, Complejidad Computacional, Complejidad Descriptiva
1. Introducción
La Complejidad Descriptiva [13] relaciona los lenguajes con las clases de Complejidad Computacional. Así determina el lenguaje adecuado que permite expresar exactamente aquellas propiedades
que pueden ser chequeadas en una clase de Complejidad Computacional.
Este campo de la Complejidad Computacional tuvo su génesis en 1974 cuando Ron Fagin[11]
mostró que existe una conexión entre la clase de complejidad NP, aquellos problemas computables
en tiempo polinomial no determinístico, y la lógica:
Un problema está en NP si y sólo si puede ser expresado como una sentencia existencial
de segundo orden.[11]
*Este trabajo está parcialmente financiado por la Universidad Nacional del Comahue (Proyecto de Investigación
“Técnicas de Inteligencia Computacional para el diseño e implementación de Sistemas Multiagentes”(04/E062)) y por
la Secretaría General de Ciencia y Tecnología de la Universidad Nacional del Sur.
Este resultado permite relacionar a la Complejidad Computacional de un problema con la riqueza
necesaria en un lenguaje para especificar dicho problema.
Una medida de mucho interés, particularmente en el área de Bases de Datos, es aquella que evalúa
la dificultad de describir consultas. La Complejidad Descriptiva da una caracterización precisa de
cuáles conceptos son definibles como consultas en un sistema. Existe una relación muy estrecha entre
la Programación en Lógica (P.L.) y el área de Bases de Datos, lo que motiva el deseo de capturar la
expresividad de los lenguajes de P.L. en función del tipo de consultas que podemos realizar.
La Programación en Lógica Rebatible (P.L.R.) [12] es una extensión de la P.L. cuya teoría de
prueba está basada en el análisis dialéctico de argumentos a favor y en contra de un argumento inicial.
La semántica declarativa GS [6] definida a partir de las semánticas de interacción basadas en juegos[1,
16] caracteriza a dicha teoría de prueba en forma sensata y completa.
En el marco del Proyecto de Investigación “Técnicas de Inteligencia Computacional para el diseño
e implementación de Sistemas Multiagentes”, de la Universidad Nacional del Comahue, se ha abierto
una línea de investigación que da continuidad al desarrollo de la semántica GS y que tiene como
objetivo estudiar la Complejidad Computacional y Descriptiva de la P.L.R. a través de la semántica
declarativa definida. La motivación principal de este estudio es el interés despertado en los últimos
años por los sistemas argumentativos como herramienta para el desarrollo de diversas aplicaciones [7,
8, 2, 9] y su posible expansión a otros campos de aplicación. El propósito de este trabajo es presentar
la línea de investigación, los resultados alcanzados y los trabajos a futuro.
2. Resultados Alcanzados
En una primer etapa de la investigación se estudió la Complejidad Computacional del sistema a
través de la semántica basada en juegos GS . En este sentido se definieron dos problemas de decisión
que se consideraron relevantes [4]:
GAMESAT: Decidir si existe un juego para un literal α ganado por el proponente en el contexto
de un programa lógico rebatible.
NOWINGAME: Decidir si no existe ningún juego para el literal α ni para el complemento de
dicho literal que sea ganado por el proponente en el contexto de un programa lógico rebatible.
Como paso intermedio, se analizaron subproblemas[4] como determinar si un conjunto de reglas
es un argumento para un literal y la existencia de un argumento para un literal, entre otros.
En una segunda etapa, se comenzó la comparación con otros sistemas lo que llevó a definir nuevos
subproblemas que aún están en estudio como la no existencia de un contraargumento.
En paralelo, se extendieron conceptos definidos en los trabajos [10, 15] para bases de datos a la
P.L.R.. Se estudiaron [5] en el contexto de la P.L.R. a la complejidad de los datos (Data Complexity),
la de los programas (Program Complexity) y la combinada (Combined Complexity). Estos conceptos
evalúan la complejidad de aplicar una consulta a una base de datos considerando como variables de
entrada a alguno de los dos parámetros o a ambos. Los resultados obtenidos en cuanto a complejidad
computacional bajo los enfoques Data complexity y Combined complexity pueden encontrarse en
[4, 5].
Como consecuencia de la investigación realizada sobre Data Complexity se determinaron límites
inferiores de la Complejidad Descriptiva de la P.L.R.. Ya que nuestros resultados están parametrizados, hemos establecido una cota inferior en NP = Σ11, que coincide con la clase de propiedades de
las estructuras expresables en lógica de segundo orden existencial [11].
3. Conclusiones y Trabajo Futuro
En este trabajo se ha presentado la línea de investigación que estudia la Complejidad Computacional y Descriptiva de la P.L.R.. Se detallaron los resultados alcanzados especificando en cada caso
el trabajo donde ha sido publicado.
Ya que la P.L.R. no asume como entrada al conjunto de argumentos los primeros resultados que
han sido establecidos están relacionados con los argumentos, los movimientos del juego. Los resultados obtenidos contrastan fuertemente con muchos de los sistemas argumentativos existentes, ya que
estos tienen como lógica subyacente a la Lógica Proposicional.
Actualmente, estamos estudiando la expresividad del lenguaje de la P.L.R. teniendo en cuenta la
cota inferior hallada.
Entre nuestros trabajos futuros se encuentran estudiar si los resultados obtenidos sobre Data Complexity pueden ser extendido a otros sistemas argumentativos [3, 14] cuya representación sea similar
a la de la Programación en Lógica y cuya teoría de prueba sea análoga.
