Sincronización de relojes en ambientes distribuidos
﻿  
 
Esta línea de Investigación forma parte de dos 
de los Subproyectos dentro del Proyecto “Sistemas Distribuidos y Paralelos” acreditado por la 
UNLP y de proyectos específicos apoyados por 
CyTED, CIC, Agencia e IBM. 
 
 
RESUMEN 
 
Esta línea de investigación se orienta a 
resolver el problema de sincronización de 
tiempo en ambientes distribuidos. El objetivo inicial de la sincronización de relojes 
es la estimación de rendimiento a partir de 
experimentos con la mínima instrumentación (y su consecuente interferencia) posible.  
 
El algoritmo básico sigue las estrategias 
clásicas de sincronización de tiempo en 
ambientes distribuidos [1] [3] [11]. Sin embargo, se adaptan (al menos en principio) al 
entorno de un cluster o, al menos, de una 
red de interconexión sobre la que se tiene 
acceso exclusivo (o al menos controlado) 
para todas las comunicaciones entre las 
computadoras que se sincronizan. Este ambiente es específicamente el de los entornos 
de cómputo paralelo en clusters.  
 
Keywords: Sincronización de Procesos, Relojes Distribuidos, Rendimiento e Instrumentación, Sistemas Paralelos y Distribuidos, Paralelismo en Clusters e Interclus                                                 
1 Investigador Asistente CICPBA 
ters, Sincronización Interna y Externa .  
 
                 1. INTRODUCCION 
 
Siempre ha sido necesario disponer de un 
sistema capaz de proporcionar una referencia de tiempo en los sistemas de cómputo 
[19] [21]. Dicha referencia es esencial para 
resolver problemas tales como el ordenamiento de eventos (ej: envío y recepción de 
correo electrónico, eventos dentro de las 
transacciones, inicio de procesos en tiempo 
real, etc.).  
 
También cobra importancia la medición de 
tiempos en la optimización del rendimiento 
tanto en sistemas de cómputo monoprocesador como en sistemas paralelos y distribuidos [2] [4] [7] [12] [13]. En todos los 
casos, las aplicaciones con fuertes requerimientos de cómputo o procesamiento son 
las que también requieren la optimización 
para el máximo aprovechamiento del hardware disponible. La relación es bastante 
directa: a partir de la monitorización de los 
tiempos de ejecución se pueden analizar los 
problemas de rendimiento e intentar solucionarlos [9]. 
 
Aún en el caso de las mediciones en una 
misma computadora (usualmente en el contexto de un sistema con un único procesador), es deseable que el registro de tiempos 
no influya en el tiempo de ejecución de la 
misma. En todos los casos, se necesitan 
resoluciones de reloj acordes a los tiempos 
que se deben medir en las aplicaciones. 
Usualmente, los métodos provistos por el 
sistema operativo no son apropiados [20] 
para todos los casos. Por otro lado, los 
métodos y/o herramientas provistas por los 
lenguajes dependen del sistema operativo y, 
por lo tanto, resultan inadecuados también.  
 
En el caso de procesamiento distribuido, 
con un programa que ejecuta procesos en 
diferentes computadoras o en los que el 
tiempo de las comunicaciones es importante, la tarea de medir intervalos de tiempo 
conlleva la necesidad de sincronizar los 
relojes de las diferentes computadoras que 
se utilizan [5] [16] [17]. Sería deseable que 
esta tarea de sincronización se lleve a cabo 
fuera del tiempo en que se ejecute el 
programa que se está monitorizando, y 
conociendo el tipo (o al menos magnitud) 
de error con que se sincroniza. 
 
Por otro lado, es deseable que dicha sincronización se lleve a cabo sin la necesidad de 
incluir hardware adicional al del sistema. 
Esto implica que todo lo referente a las 
comunicaciones deberá utilizar la red de 
interconexión entre computadoras existente 
y el sistema de medición existente en cada 
sistema de cómputo. 
 
Básicamente, se desea contar con una herramienta de instrumentación para programas 
paralelos que: 
• Pueda ser usada inicialmente en un 
cluster de PC's, con la posibilidad de ser 
extendido a clusters en general y luego 
en plataformas distribuidas aún más generales. 
• Sea de alta resolución, es decir que se 
pueda utilizar para medir tiempos cortos, 
del orden de microsegundos. 
• Que no altere el funcionamiento de la 
aplicación bajo prueba, o que la alteración sea mínima y conocida por la 
aplicación. 
• Utilice en forma predecible la red de 
interconexión. Más específicamente, se 
puedan determinar, desde la aplicación, 
los intervalos de tiempo en los cuales se 
utilizará la red. De esta forma, se puede 
desacoplar el uso de la red de interconexión, ya que habrá intervalos de tiempo usados para la sincronización e intervalos de tiempo utilizados para la ejecución de programas paralelos.  
 
 
2. LINEAS DE INVESTIGACION Y 
DESARROLLO 
 
Inicialmente, se estudian tanto los algoritmos básicos como las implementaciones 
existentes. En este sentido, se cuenta con 
una amplia cantidad de información tanto 
de los algoritmos como de las implementaciones. Como requisito previo, normalmente se establece que cada computadora 
cuente con un oscilador físico de frecuencia 
más o menos constante. A partir de este 
oscilador físico se derivan los relojes lógicos que son los que se sincronizan [8] [10] 
[15]. En todos los casos, lo que se tiende a 
resolver son las diferencias de (Fig. 1): 
1. Referencia fija en el tiempo a partir de la 
cual se contabiliza el tiempo en cada 
computadora. Aunque normalmente es 
constante, es relativamente difícil establecer con precisión su valor. 
2. Frecuencia entre los relojes de las computadoras que se sincronizan. En algunos 
casos, se suelen incluir en este punto las 
diferencias de las variaciones de los relojes, dado que los relojes no necesariamente tienen frecuencia constante a lo 
largo del tiempo. 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Figura 1: Relojes de Dos Computadoras. 
Tiempo 
Clk1 
θ1 
T01 
Tiempo 
Clk2 
θ2 
T02 
La Fig. 1 muestra dos computadoras, cada 
una de ellas con su oscilador, que a su vez 
tiene sus propias características. El instante 
de tiempo T01 es la referencia al tiempo 
real en una computadora y T02 es el equivalente en la otra computadora. La pendiente θ1 corresponde al oscilador de una computadora y θ2 es la correspondiente pendiente de la otra.  
 
Una de las formas más sencillas e intuitivas 
de sincronizar dos computadoras consiste 
en determinar el reloj de una de ellas en 
función del reloj de la otra teniendo en 
cuenta algún tipo de interconexión entre 
ellas. La Fig. 2 muestra esquemáticamente 
esta forma de sincronización, donde el reloj 
de una computadora se puede establecer a 
partir del reloj de la otra teniendo en cuenta 
el tiempo de las comunicaciones de sincronización entre las dos.  
 
 
 
 
 
 
 
 
                      t = t2-t1 
                     d = t/2 
 
 
Figura 2: Sincronización Básica. 
 
Sin embargo, como paso previo se deben 
investigar las formas de hacer referencias al 
reloj físico y/o a los relojes lógicos con la 
mínima sobrecarga. La idea básica para 
disminuir la sobrecarga normalmente se 
basa en evitar llamadas al sistema operativo 
para, al menos, evitar el consiguiente cambio de contexto. También es necesario investigar en particular hasta qué punto las 
referencias a los relojes/osciladores físicos 
son portables o al menos tienen funciones u 
operaciones equivalentes en diferentes plataformas de hardware. 
 
Paralelamente a lo anterior, al menos en 
principio, es necesario analizar y, más específicamente cuantificar las características de 
NTP (Network Time Protocol). Esta cuantificación se refiere principalmente a: 
• Resolución posible del reloj sincronizado. Aunque NTP es paramétrico esto 
no significa a priori que se puede obtener una resolución arbitraria cualquiera. 
• Relación entre la resolución definida y la 
sobrecarga en la red de comunicaciones.  
• Relación entre la resolución definida y la 
sobrecarga en la pila de protocolos TCP/ 
UDP/IP.  
• Relación entre la resolución definida y la 
sobrecarga en el uso de CPU y la jerarquía de memoria.  
Todo este análisis es básicamente experimental [14] [17] [18], dado que el funcionamiento de NTP se define por un lado 
paramétricamente y por el otro con el comportamiento o rendimiento de la red de interconexión.   
 
Una vez realizada la sincronización mínima 
entre las computadoras se debe investigar el 
comportamiento de la misma en términos 
de escalabilidad. Usualmente la sincronización se da entre dos máquinas y en el 
caso particular de NTP se lleva a cabo con 
el modelo cliente/servidor. Es claro que 
cualquier tipo de centralización (en el servidor, por ejemplo) tiene sus inconvenientes 
de escalabilidad y al menos debería ser 
posible su cuantificación. En este contexto 
específico es muy interesante la posibilidad 
de sincronización utilizando mensajes 
broadcasts con su consiguiente ahorro de 
comunicaciones punto a punto.   
 
Como extensiones futuras, siempre es deseable la sincronización externa de los relojes [8]. Este paso está muy ligado también a 
la posibilidad de utilizar más de un cluster 
de computadoras para cómputo paralelo y 
en este contexto la sincronización de los 
relojes va más allá del análisis de rendimiento con el objetivo de optimizarlo. Las 
alternativas en este contexto están abiertas 
para varias posibilidades. Entre otras alternativas: una nivel jerárquico superior a to   t1 
   t2 
  t1 + d 
  t2 + d 
dos los clusters, tomar un cluster como el 
de mayor jerarquía, sincronizar con algún 
tipo de estrategia de tiempo real, etc. 
 
 
3. RESULTADOS 
OBTENIDOS/ESPERADOS 
 
Inicialmente, la idea es contar con una 
biblioteca mínima en cuanto a la medición 
de tiempos de cómputo en un mismo 
sistema (usualmente en una máquina monoprocesador). Ya se cuenta con una, para el 
sistema operativo Linux en PCs (procesadores Intel y compatibles) en las cuales se 
puede hacer referencia al contador de ciclos 
del oscilador. Entre las tareas pendientes se 
tienen la cuantificación de la sobrecarga y 
posibilidad de extensión a otros sistemas 
operativos y/o plataformas de hardware. En 
lo referente a la sobrecarga, los datos preliminares muestran resultados altamente 
satisfactorios, dado que la sobrecarga no 
excede las decenas de ciclos de reloj. En 
este sentido, ya es posible la instrumentación de código y el análisis de las aplicaciones que se resuelven en un mismo sistema o máquina. La precisión es satisfactoria: 
del orden de los microsegundos.  
 
Se está desarrollando software (básicamente una biblioteca de una cantidad reducida 
de funciones) para instrumentación de programas paralelos que se ejecuten en clusters 
de PCs. Esta biblioteca tiene los lineamientos dados antes, con énfasis en la resolución 
del orden de los microsegundos, la mínima 
sobrecarga de procesamiento y el desacople 
de la red de interconexión. 
 
Además, se están llevando a cabo pruebas 
sobre los sistemas de relojes distribuidos 
empleados en este momento tales como 
NTP (Network Time Protocol) y DTS 
(Distributed Time Service), con el  fin de 
analizar sus ventajas y desventajas. También un análisis de los sistemas que utilizan 
hardware especializado, como para tener un 
marco de referencia más amplio [6]. En 
todos estos casos, la idea final es contar con 
un conjunto de programas del estilo de los 
benchmarks para que provean automáticamente la caracterización del sistema de sincronización elegido/utilizado. Como mínimo, el objetivo es contar con una metodología de caracterización de las herramientas,  
bibliotecas, y/o protocolos de sincronización que incluso pueda ser aplicada a la 
nueva biblioteca que se desarrolle, mencionada antes. 
 
Como paso posterior, se espera extender la 
biblioteca para su uso en Internet y múltiples clusters para cómputo paralelo [22]. 
Quizás en este punto se deban redefinir 
algunas características de la herramienta o 
biblioteca, tal como la capa de transporte de 
los mensajes con los cuales se implementa 
la sincronización. 
 
 
4. FORMACION DE RECURSOS 
HUMANOS 
 
En esta línea de I/D existe cooperación a 
nivel nacional e internacional. Inicialmente 
se tiene una posible tesis de maestría y está 
abierta la posibilidad para varias Tesinas de 
Grado de Licenciatura. 
 
 
5.
