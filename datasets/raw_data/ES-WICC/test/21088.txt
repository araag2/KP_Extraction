Combinando clustering con aproximación espacial para búsquedas en espacios métricos
﻿
El modelo de espacios métricos permite abstraer muchos de los problemas de búsqueda por
proximidad. La búsqueda por proximidad tiene múltiples aplicaciones especialmente en el área
de bases de datos multimedia. La idea es construir un índice para la base de datos de manera tal
de acelerar las consultas por proximidad o similitud. Aunque existen varios índices prometedores,
pocos de ellos son dinámicos, es decir, una vez creados muy pocos permiten realizar inserciones
y eliminaciones de elementos a un costo razonable.
El Árbol de Aproximación Espacial (dsa–tree) es un índice recientemente propuesto, que ha
demostrado tener buen desempeño en las búsquedas y que además es totalmente dinámico. En
este trabajo nos proponemos obtener una nueva estructura de datos para búsqueda en espacios
métricos, basada en el dsa–tree, que mantenga sus virtudes y que aproveche que en muchos espacios existen clusters de elementos y que además pueda hacer un mejor uso de la memoria
disponible para mejorar las búsquedas.
1. Introducción y motivación
Con la evolución de las tecnologías de información y comunicación, han surgido almacenamientos
no estructurados de información. No sólo se consultan nuevos tipos de datos tales como texto libre,
imágenes, audio y video; sino que además, en algunos casos, ya no se puede estructurar más la información en claves y registros. Aún cuando sea posible una estructuración clásica, nuevas aplicaciones
tales como la minería de datos requieren acceder a la base de datos por cualquier campo y no sólo por
aquellos marcados como “claves”. Estos tipos de datos son difíciles de estructurar para adecuarlos
al concepto tradicional de búsqueda. Así, han surgido aplicaciones en grandes bases de datos en las
que se desea buscar objetos similares. Este tipo de búsqueda se conoce con el nombre de búsqueda
aproximada o búsqueda por similitud y tiene aplicaciones en un amplio número de campos. Algunos ejemplos son bases de datos no tradicionales; búsqueda de texto; recuperación de información;
aprendizaje de máquina y clasificación; sólo para nombrar unos pocos.
Como en toda aplicación que realiza búsquedas, surge la necesidad de tener una respuesta rápida
y adecuada, y un uso eficiente de memoria, lo que hace necesaria la existencia de estructuras de datos
especializadas que incluyan estos aspectos.
El planteo general del problema es: existe un universo U de objetos y una función de distancia
positiva d: U  U ! R+ definida entre ellos. Esta función de distancia satisface los tres axiomas
Este trabajo ha sido financiado parcialmente por el Proyecto RIBIDI CYTED VII.19 (todos los autores) y por el
Centro del Núcleo Milenio para Investigación de la Web, Grant P01-029-F, Mideplan, Chile (último autor).
que hacen que el conjunto sea un espacio métrico: positividad estricta (d(x; y) = 0 , x = y),
simetría (d(x; y) = d(y; x)) y desigualdad triangular (d(x; z)  d(x; y) + d(y; z)). Mientras más
“similares” sean dos objetos menor será la distancia entre ellos. Tenemos una base de datos finita
S  U, que es un subconjunto del universo de objetos y puede ser preprocesada (v.g. para construir
un índice). Luego, dado un nuevo objeto del universo (un query q), debemos recuperar todos los
elementos similares que se encuentran en la base de datos. Existen dos consultas típicas de este tipo:
Búsqueda por rango: recuperar todos los elementos de S que están a distancia r de un elemento q
dado.
Búsqueda de k vecinos más cercanos: dado q, recuperar los k elementos más cercanos a q en S.
La distancia se considera costosa de evaluar (por ejemplo, comparar dos huellas dactilares). Así,
es usual definir la complejidad de la búsqueda como el número de evaluaciones de distancia realizadas, dejando de lado otras componentes tales como tiempo de CPU para computaciones colaterales, y aún tiempo de E/S. Dada una base de datos de jSj = n objetos el objetivo es estructurar la base
de datos de forma tal de realizar menos de n evaluaciones de distancia (trivialmente n bastarían).
Un caso particular de este problema surge cuando el espacio es un conjunto D-dimensional de
puntos y la función de distancia pertenece a la familia L
p
de Minkowski: L
p
= (
P
1id
jx
i
