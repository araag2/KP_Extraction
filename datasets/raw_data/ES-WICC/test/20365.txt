Qantenna una aplicación multiplataforma para el análisis y visualización de antenas y patrones de radiación
﻿QAntenna: una Aplicación Multiplataforma para el
Análisis y Visualización de Antenas y Patrones de
Radiación
Gustavo González1, Lisandro Pérez Meyer1,3, Pablo Odorico2, Ricardo Coppo1
y Claudio Delrieux1
1Depto. Ing. Eléctrica y Computadoras — Universidad Nacional del Sur, Av. Alem 1253
2Depto. Cs. e Ing. de Computación — Universidad Nacional del Sur, Av. Alem1253
3Autor para contacto perezmeyer@gmail.com
1. Introducción
Qantenna es un programa multiplataforma desarrollado para proveer una herramienta para la visualización, análisis y diseño de elementos radiantes de ondas electromagnéticas (antenas) y sus patrones de radiación asociados. El patrón de radiación de un antena es una función
que modela de qué manera dicha antena emite o recibe la potencia (comúnmente el campo eléctrico). Estas funciones son típicamente 5D × 1V , es decir, son funciones escalares cuyo valor depende de la posición y dirección. En modelos simplificados puede plantearse un análisis isotrópico
respecto de la dirección de radiación del campo, con lo cual el patrón de radiación se modela como una función escalar tridimensional. La dificultad en su análisis y visualización radica no solo
en la complejidad geométrica, sino también en la variación del patrón de radiación con respecto a
parámetros relevantes, como por ejemplo la frecuencia de alimentación, el material de la antena
y la disposición de sus partes, la configuración de los planos de tierra, etc. Esta complejidad es
notable aún en antenas sencillas y bien estudiadas. [4, 8].
Esta complejidad afecta al diseño, análisis y testeo de antenas, dado que los modelos
matemáticos son excesivamente complejos como para una solución analítica cerrada. La resolución numérica de dichos modelos, por otra parte, genera un volumen de resultados que resulta
poco práctico para poder entender o visualizar de una manera sencilla las propiedades geométricas del patrón de radiación de una antena específica, y sus parámetros derivados (direccionalidad,
eficiencia, relación de ondas estacionarias, etc.).
Durante años los diseñadores tuvieron que trabajar con bocetos y/o cortes de patrones
simplificados realizados a mano a partir de deducciones teóricas de algunas propiedades fundamentales altamente idealizadas de los elementos radiantes. Esto llevó a la elaboración de
cartas estandarizadas como auxilio al diseño, el cual devino en un procedimiento puramente
empírico basado en prueba y error. Si bien las antenas constituyen elementos específicos dentro
de los sistemas de comunicaciones, igualmente el diseño por prueba y error es muy costoso y
lento dado el instrumental requerido y la gran cantidad de mediciones que conlleva, y el alto
error experimental. Este estado de la tecnología, por otra parte, restringe el diseño de antenas
a laboratorios altamente equipados y con personal especializado, quedando instituciones como
las Universidades relegadas a impartir un conocimiento únicamente teórico y desligado de la
experiencia.
Figura 1: Geometría de la radiación electromagnética.
La simulación numérica es evidentemente una alternativa atractiva para el diseño y
análisis de patrones de radiación de antenas. Uno de los primeros y mas famosos programas fue el NEC[2], desarrollado en los 80’s para uso militar, que permite modelar antenas tipo cable o de superficie. Los primeros programas eran complejos y costosos, requiriendo de los usuarios amplios conocimientos de propagación y radiación de ondas electromagnéticas, quedando también fuera del alcance económico de la mayoría de las instituciones y
personas. Con el paso del tiempo surgieron algunas implementaciones más útiles y versátiles, como Antennavis [7], basadas en el NEC, que permitió a personas sin demasiado conocimiento ni recursos, ver con bastante precisión el patrón de radiación de las antenas que estaban estudiando o diseñando. Con el paso del tiempo, Antennavis fue quedando obsoleto y hoy en día su mantenimiento se limita a la corrección de bugs.
En este marco, se decidió programar QAntenna, un proyecto de software libre que trata de ocupar el lugar del Antennavis, mejorando algunos aspectos en la visualización de los patrones y con una interfaz aún más amigable, que facilite la manipulación de las antenas y los patrones. Las decisiones que tuvimos en cuenta durante el diseño de QAntenna fueron, por un lado
que el sistema fuera software libre y multiplataforma, para incluir a la mayor parte de usuarios
potenciales. Por otro lado, que la aplicación implemente los conceptos más potentes de Visualización Científica [5], para poder dotarla de la mayor versatilidad y facilidad de uso. En
las siguientes secciones describiremos los aspectos salientes de QAntenna y las funcionalidades
futuras que están siendo incorporadas.
2. Descripción de QAntenna
La intensidad de un campo eléctrico obtenido en un punto del espacio E(θ, φ) producido
por una antena es función de la amplitud y de la fase de la distribución espacial de corriente
sobre una superficie radiante denominada apertura de la antena (A(x, y)) (ver Fig. 1). E(θ, φ)
puede ser hallada integrando las contribuciones de elementos radiantes diferenciales de A(x, y)
ponderados por un factor que adelanta o retarda la fase en función de la posición del observador
con respecto al eje de referencia [8].
Figura 2: (a) Confección de la antena ubicando los elementos, y (b) el patrón de radiación
obtenido.
E(θ, φ) =
∫ ∫
A
A(x, y) e2πi(
x
λ
sinφ+
y
λ
sin θ) dx dy
Por su complejidad esta integral normalmente se resuelve por métodos numéricos o por
medio de simplificaciones en la forma de de la superficie radiante. El ploteo de la intensidad
del campo magnético E(θ, φ) define el patrón de intensidad del campo eléctrico. E2(θ, φ) define
el patrón de la potencia transmitida. El Numerical Electromagnetic Code versión 2 (NEC2) [3]
utiliza el método de los momentos para convertir la función integral definida más arriba en un
sistema de ecuaciones lineales simultáneas, las cuales pueden resolverse numéricamente [4]. NEC2
utiliza dos ecuaciones integrales, una especializada para superficies suaves y otra en alambres,
proveyendo un modelado preciso de un gran rango de estructuras. NEC2 fué desarrollado bajo
contrato con la Armada de los EEUU de Norteamérica en el laboratorio Lawrence Livermore [1]
por G. J. Burke, A. J. Poggio et. al. [2]. El código fue originalmente escrito con una mezcla de
FORTRAN y OCCAM, y difícil de modificar. Mas adelante, el programa fuente se recodificó en
C++ haciéndolo modular y con doble precisión por T. C. A. Molteno y N. Kyriazis [3]. Dicho
código, denominado NEC++, es de dominio público y es utilizado por nuestro programa para
realizar el cálculo numérico de las antenas.
La descripción de las antenas en nuestra herramienta se realiza en un archivo de texto en
formato de cartas, según [2]. El programa lee este archivo y renderiza la estructura de la antena.
Al requerir el análisis de la antena, se llama a NEC2++ para que genere un archivo de análisis el
cual luego se lee, generando así la información necesaria para renderizar el patrón de radiación.
La interfaz gráfica del programa se muestra en un widget OpenGL bajo el cual se encuentra
el panel de control. Este último se encuentra dividido en solapas según las características de
los distintos parámetros disponibles. En la primer solapa se realiza el manejo de las distintas
antenas, pudiendo agregarlas y quitarlas. Luego de agregar una antena, es posible cambiar la
frecuencia de simulación a través de la opción a tal fin en la pestaña “Parámetros de simulación”.
Por último, en la solapa “Parámetros de visualización”se puede calcular el patrón de radiación
con el botón homónimo. Una vez calculado, puede visualizarse el mismo mediante diferentes
metáforas visuales (ver más abajo).
El programa se utilizó para el desarrollo de un enlace WiFi punto a punto. Para el mismo se debían desarrollar dos antenas del tipo Yagi–Uda, como la disponible en [6]. Antes de confeccionarlas, se simuló el diseño utilizando el programa (Fig. 2(a)). Las imágenes obtenidas fueron muy claras con respecto a las propiedades de
Figura 3: (a) Patrón de radiación de la Fig. 2 visualizado con esferas, (b) con transparencia, y
(c), con wireframe.
Figura 4: (a) Antena Yagi–Uda para 144Mhz, (b) Patrón de radiación resultante.
la antena: un patrón de radiación bien dirigido, con lóbulos laterales bajos. El mismo pudo ser observado desde distintos ángulos (Fig. 2(b)). Si fuese necesario analizar la estructura del patrón cerca del origen, se puede recurrir a la vista con esferas (Fig. 3(a)), la vista con transparencia (Fig. 3(b)), o la vista tipo wireframe (Fig. 3(c)).
Como otro ejemplo, se puede citar la antenna de la figura Fig. 4. La misma es otra YagiUda, pero ésta vez con un reflector. Esta antena fue diseñada para trabajar a 144 MHz. Puede
verse que la misma irradía con mucha potencia (zonas rojas) hacia varias direcciones, no sólo
la dirección preferencial (que corresponde a la protuberancia horizontal no achatada). También
puede observarse el efecto del reflector en el achatamiento posterior de la superficie.
3. Funcionalidades futuras
El equipo de desarrollo de QAntenna piensa agregar nuevas funcionalidades a futuro, incluyendo las siguientes:
1. Cortes en los planos XY y XZ de los patrones de radiación
2. Una carta de Schmidt para poder analizar la impedancia de las mismas mediante un barrido de frecuencia
3. Mejoras en la visualización de los segmentos de las antenas, como ser una escala de colores para indicar la corriente fluyendo por las mismas.
4. La posibilidad de ver el sentido de polarización del patrón de radiación (ya hay resultados
preliminares disponibles en la versión 0,2).
5. Presentación de la impedancia de la antena a la frecuencia de trabajo de la misma
6. Cambiar la descripción actual de las antenas (método punchcard) por un archivo XML.
7. Reemplazar las esferas por sprites para hacer el renderizado mas rápido, con la posibilidad
de realizarlo con shaders GLSL o CG.
8. Posibilidad de mover las antenas en el espacio, para poder comparar dos o más de ellas.
9. Posibilidad de diseñar antenas directamente sobre el programa.
10. Realizar los cálculos mediante shaders en el hardware gráfico utilizando CUDA u otras
bibliotecas.
11. Traducciones de la interfaz a otros idiomas (la versión 0.2, en desarrollo, se realiza con base
en el inglés y ya cuenta con traducciones al alemán, español, francés, holandés y ruso).
El prototipo, junto con información adicional, está disponible en
http://qantenna.sourceforge.net/.
