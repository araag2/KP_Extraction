Restricciones de integridad referencial y dependencias de inclusión claves para el enriquecimiento semántico de una base de datos
﻿o semántico de los datos, es decir que se 
incorporaron facilidades para representar objetos más complejos y mayor variedad de propiedades. 
Sin embargo, los DBMSs tradicionales proveen recursos limitados para expresarlas. Paralelamente, 
la adquisición de las propiedades de los datos a partir del Universo del Discurso (UdeD) se tornó 
también más compleja dando origen a novedosas áreas de desarrollo. Como consecuencia del 
enriquecimiento en la carga semántica de los datos surge la posibilidad de expresar variadas y 
valiosas conexiones entre los mismos. Por lo tanto, resulta imperativo contribuir en la identificación 
de las propiedades de los objetos del mundo real y sus relaciones con el objetivo de facilitar su 
representación fidedigna en el mundo de la base de datos, y fundamentalmente de constituir las 
bases de una documentación que permita su validación. Este proyecto tiene como objetivo el 
estudio de las relaciones como elementos que juegan un rol fundamental tanto en el UdeD como en 
el modelado, refinamiento y reingeniería de bases de datos. 
Rediseño de Esquemas Relacionales 
El modelado conceptual es la fase inicial y por ende fundamental en el diseño de una base de 
datos. En esta etapa los requerimientos de información del usuario, principalmente los objetos y las 
conexiones entre ellos se representan apropiadamente, en el caso de bases de datos relacionales 
generalmente en alguna de las extensiones del muy difundido Modelo de Entidades y Relaciones 
(MER) (Chen, 1976). Las dependencias de inclusión (DI) constituyen uno de los conceptos 
fundamentales en el diseño de bases de datos. Una DI se define como la existencia de atributos 
(simples o compuestos) en una tabla, cuyos valores deben ser un subconjunto de los valores de 
atributos compatibles (simples o compuestos respectivamente) en otra tabla. Cuando estos últimos 
constituyen la clave primaria de la tabla, la DI es basada-en-clave y se denomina habitualmente 
restricción de integridad referencial (RIR). Por el contrario, si es un atributo o conjunto de ellos 
cualquiera, la DI es no-basada-en-clave o pura. 
A partir de su especificación original, la evolución natural del sistema modelado conduce a 
modificaciones del esquema, que frecuentemente no son debidamente respaldadas por la 
documentación correspondiente. En estos sistemas, la comprensión de los datos se ha perdido 
parcial o totalmente o bien no refleja el UdeD actual, restringiendo por esta razón el uso efectivo 
que la organización puede hacer de su información. En otras circunstancias algunas dependencias 
han sido detectadas o previstas en estadios tempranos del diseño pero luego fueron incorrectamente 
representadas. Por esta razón, el producto final a menudo resulta inadecuado para las aplicaciones 
requeridas, y es difícil de mantener puesto que generalmente está indebidamente documentado. Por 
la potencial inconsistencia de los datos, se requiere un esfuerzo mayor para desarrollar programas 
de aplicación y mantener la integridad, que en estas situaciones anómalas se vuelve una 
responsabilidad del programador de aplicaciones.   
Viviana E. Ferraggine(1) 
vferra@exa.unicen.edu.ar 
Jorge H. Doorn(1) 
jdoorn@exa.unicen.edu.ar 
Laura C. Rivero(1)(2) 
lrivero@exa.unicen.edu.ar 
 
(1)INTIA, Fac. de Ciencias Exactas, Universidad Nacional del Centro de la Pcia.de Bs.As., Tandil, Bs.As., Argentina 
(2)LINTI, Fac. de Informática, Universidad Nacional de La Plata, La Plata, Buenos Aires, Argentina 
Por otra parte, en aplicaciones reales es frecuente que los usuarios especifiquen el esquema 
dentro del modelo relacional convencional, es decir, usando tablas que no se encuentran en la forma 
normal más apropiada (idealmente FNBC). Este escenario es muy común y puede ocurrir como 
consecuencia de la división o unión de tablas debido a requerimientos de las aplicaciones que se 
imponen a las ventajas de una normalización apropiada; un pobre análisis o diseño; diseñadores 
inexpertos; o bien debido a decisiones tomadas usualmente en las fases finales del diseño lógico. 
Las RIRs surgen naturalmente en el proceso de normalización u obtención de un esquema lógico 
basado en un modelo semántico, generalmente el MER o alguna de sus extensiones. Las 
dependencias puras y algunas RIRs atípicas, aparecen por otros factores.  
Un tercer factor que promueve la aparición de referencias atípicas es la transformación de 
relaciones n-arias en esquemas relacionales. Este es un tema que requiere un análisis muy profundo 
puesto que no siempre es posible encontrar una conjunto de relaciones equivalentes. Para que tal 
equivalencia sea real, el esquema relacional resultante debe ser estructural y semánticamente 
equivalente al original. La equivalencia estructural implica que la conversión es sin pérdida. La 
equivalencia semántica denota que el esquema transformado preserva las dependencias funcionales, 
hecho que sumado a la propiedad de transformación sin pérdida garantiza que se preserva el 
conjunto específico de instancias durante la transformación o reconstrucción. Estos aspectos 
constituyen la perspectiva estática del problema. Para completar la equivalencia deben considerarse 
conjuntamente los aspectos dinámicos, es decir, la habilidad del esquema transformado para 
manejar en forma equivalente las operaciones de actualización. Esta transformación es compleja y 
requiere en algunos casos la especificación de DIs, y aún de restricciones más complejas que de 
alguna forma adoptan la semántica de la inclusión, para garantizar la equivalencia estructural y 
dinámica de ambas representaciones. 
Los factores que pueden “fabricar” estas dependencias en la base de datos pueden obtenerse 
efectuando un rastreo en sentido retrospectivo desde el esquema de la base de datos hacia el UdeD. 
El objetivo de esta inspección consiste en descubrir los conceptos o ideas que encierra la 
dependencia para reconstruir, mediante la asistencia del diseñador, el procedimiento o 
transformación que la generó.  
De la inspección profunda del UdeD correspondiente a un conjunto razonable de casos reales, se 
ha observado que es difícil, si no imposible, detectar fehacientemente el tipo de vínculo semántico 
que justificaría la aparición de DIs en el mundo de la base de datos. Lo mismo ocurre con ciertos 
casos atípicos de RIRs. Sin embargo, luego de la observación de los esquemas reales se ha 
comprobado que estas construcciones semánticas aparecen con frecuencia.  
Cuando los sistemas no cumplimentan los requisitos de calidad esperados es necesaria su 
reingeniería. Traducir el esquema de una base de datos de un modelo en otro con mayor capacidad 
semántica es un tema de investigación actual, con aplicación en varias áreas de desarrollo, por 
ejemplo: migración de sistemas ‘legacy’ y de sistemas relacionales a otros DBMSs, integración de 
sistemas en ambientes de interoperabilidad y documentación del significado de bases de datos 
existentes. Cuando se tratan problemas de migración de datos, reingeniería e integración de 
sistemas de bases de datos, la idea básica consiste en capturar la semántica de los datos 
recuperándola de los esquemas, documentación y software disponibles. (Casanova et al., 1989),  
(Castellanos, 1993), (Johannesson, 1994), (Rivero et al., 2001, 2002), (Dey et al., 1999), (Levene y 
Vincent, 2000), (Jones et al., 2000).  
Un esquema de base de datos con las deficiencias mencionadas puede ser restaurado y llevado a 
un estado bien definido, a partir del cual se pueda trabajar con las herramientas, métodos y 
heurísticas convenientes. El estudio de los orígenes de las DIs y de los casos atípicos de 
restricciones basadas en claves, juntamente con la investigación de estrategias para su remoción y/o 
tratamiento, resultan un aporte a la transformación de esquemas incorrectos y difíciles de mantener, 
en esquemas normalizados. 
Una vez detectado el origen de las DIs y RIRs atípicas, sería posible aplicar mecanismos 
semiformales para efectuar la conversión del esquema. Este objetivo se logra a través del análisis de 
la naturaleza y origen de las dependencias puras y de la identificación de otros vínculos ocultos con 
una semántica específica del UdeD (reglas del negocio). Los resultados de este análisis pueden 
volcarse en el proceso de conversión.  
Un mecanismo de conversión está destinado a obtener una correspondencia 1-1 entre tipos de 
objetos y esquemas de relaciones facilitando la conexión y rastreo de las nociones involucradas en 
ambos mundos, el real (UdeD) y el de la base de datos. De esta forma, el proceso de conversión está 
guiado por las siguientes preguntas: a) qué concepto del UdeD representa el objeto referenciado?; b) 
cuál es la representación apropiada del mismo?; c) cuál es la manera correcta de representar las 
relaciones con este objeto?; d) hay algún atributo o conjunto de ellos en la clase referenciada que 
tenga una dependencia semántica sólo respecto del objeto referenciado?; e) cuál es el significado de 
la inclusión relacionada con el objeto de referencia?. Este proceso debe utilizar un método 
fundamentado en la sintaxis de cada caso, ya que la necesaria interacción con el usuario proveerá 
los aspectos semánticos que permitan decidir los pasos a seguir en la reconstrucción. 
Este estudio resulta demasiado complejo si no se establece previamente un marco de referencia 
que permita la categorización de las dependencias en diferentes clases. La estrategia aquí es que la 
metodología en estudio conste de dos etapas. La primera de ellas destinada a la clasificación de 
relaciones y la segunda a la aplicación de un conjunto de reglas que permitan generar las 
construcciones del esquema enriquecido. Las relaciones clasificadas se analizarán según el grado de 
correlación entre claves primarias y extranjeras. 
 Con el objeto de formalizar este marco de referencia, se han estudiado las dependencias en forma 
exhaustiva, inicialmente desde un punto de vista sintáctico para determinar posteriormente, en un 
proceso reconstructivo, la semántica subyacente a cada caso. Este análisis permitió determinar el 
origen de aquéllas que no son basadas en claves y de aquéllas que, con la apariencia de RIRs, no 
provienen de un diseño normalizado.  
Para las primeras se está analizando una heurística que permita rediseñar el esquema conceptual, 
teniendo como fundamento la identificación de reglas del negocio ocultas y la conversión de las 
dependencias en RIRs equivalentes, manteniendo la misma capacidad de información. La inferencia 
de las acciones referenciales de las restricciones inicialmente especificadas, en las correspondientes 
al esquema mejorado, se está desarrollando con énfasis en las acciones locales de reparación y en la 
preservación de la semántica global. Para las segundas se ha completado la clasificación de casos y 
se ha desarrollado una propuesta de conversión. 
Análisis y optimización del esquema resultante 
Como es sabido, a todos los inconvenientes derivados de diseños inapropiados o de estructuras de 
la realidad muy complejas se le suman aquellos originados en las limitaciones del paradigma 
utilizado o del motor de la base de datos. Estos últimos deben ser considerados circunstanciales en 
oposición a los primeros que son esenciales al problema. 
En el contexto de una base de datos relacional la definición de un conjunto de RIRs con acciones 
referenciales coexistiendo con restricciones de nulidad, puede dar lugar a comportamientos 
impredecibles. Esto ocurre porque: a) en el plano estático el esquema definido presenta conflictos, 
b) el estándar SQL3 no provee un conjunto completo de definiciones de acciones referenciales para 
operaciones que involucran RIRs, c) para las tablas referenciada y referenciante, los sistemas de 
bases de datos SQL actuales no adhieren a la totalidad de las características establecidas por el 
estándar SQL3 y finalmente d) es difícil describir en SQL3 la semántica global de un conjunto de 
acciones referenciales, basándose en su semántica local. En algunos DBMS la definición de RIRs 
en forma declarativa está restringida a los casos no conflictivos. A esto debe sumarse que su 
comportamiento varía de un DBMS a otro, comprometiendo su portabilidad.  
En el plano abstracto o genérico, los problemas existentes en las redes de RIRs son bien 
conocidos y han sido desarrollados en numerosos artículos en relación con algunos aspectos de ellos 
(Casanova y Tucherman, 1988), (Casanova et al., 1989), (Markowitz, 1994), (Reinert, 1996), 
(Rivero et al, 2000). 
Si el análisis estático de un esquema conceptual determina que éste es pasible de arrojar 
resultados impredecibles cuando se somete a una o más actualizaciones, muy probablemente en el 
mundo real exista un conjunto de propiedades en las que se oculta la preeminencia de una propiedad 
sobre la otra, esta preeminencia no llegó al modelo de datos, por lo que debe retornarse al UdeD, 
capturarla y modelarla. Las preeminencias entre propiedades se modelan en el mundo de las bases 
de datos mediante el orden en el que las restricciones deben ser forzadas.  
Una forma de resolver el problema consiste en la asignación de un orden explicito que pueda ser 
seguido en la activación de las restricciones. Esta es una estrategia relativamente conocida y 
utilizada, aunque conlleva un problema conceptual puesto que se impone una característica 
procedural no siempre presente en el UdeD.  
En SQL-DBMSs debe considerarse además el orden en el que los distintos mecanismos 
disponibles tales como los chequeos, las restricciones referenciales, los triggers y los stored 
procedures se ejecutan (Ceri et al., 2000). SQL3 ha definido un orden preciso de ejecución y 
alcance de sus cláusulas, pero no todos los productos disponibles adhieren al mismo. El modelo que 
integra la ejecución de triggers con la evaluación de restricciones declarativas en sistemas de bases 
de datos SQL se analiza en (Cochrane et al., 1996) y en (Türker y Gertz, 2000). El uso de 
herramientas de soporte al modelado puede generar automáticamente restricciones en un orden no 
deseado, complicando aún más la interpretación del resultado obtenido luego de una actualización. 
Otra alternativa de resolución al problema, es la generación de triggers en los que se codifican 
secuencias de diferentes acciones para forzar ese orden. Si bien en casos sencillos esto último puede 
ser útil, es especialmente desaconsejable para resolver el problema debido a que un único trigger 
debería contener la secuencia de acciones para todos los caminos referenciales involucrados, los 
cuales, a su vez constan de varios tramos, cada uno con su propia acción referencial. 
En el presente proyecto se analiza como integrar los aspectos esenciales de los imperativos de 
preeminencia de restricciones que provienen de la realidad, con las posibilidades que brindan los 
DBMSs disponibles. En este sentido se aspira a detectar las fuentes de conflicto en tiempo de 
diseño conceptual mediante el enriquecimiento del prototipo desarrollado en etapas previas de este 
proyecto. Éste permite el análisis de los inconvenientes producidos por las actualizaciones en bases 
de datos cuyos esquemas conceptuales promueven ambigüedades semánticas a escala global, 
aunque las acciones referenciales sean correctas localmente. 
Para analizar un esquema relacional conflictivo a la luz de una implementación en un DBMS en 
particular es necesario especificar el esquema relacional formalmente para luego aplicar un 
algoritmo que depure los caminos referenciales redundantes y permita detectar la presencia de 
caminos que manifiesten problemas de indeterminismo. Se ha encarado un estudio para la 
caracterización completa de estos problemas bajo un modelo teórico declarativo de la semántica 
global de las acciones referenciales. 
Grado de avance 
De las dos etapas mencionadas más arriba, la primera se encuentra terminada y se está trabajando 
en la especificación de una herramienta interactiva que asista al usuario en la reingeniería local de 
esquemas relacionales, convirtiéndolos en esquemas conceptuales. El paradigma en que se 
desarrolla este proyecto se enmarca en el modelo relacional, pero la propuesta puede aplicarse, con 
los ajustes necesarios, al enriquecimiento de esquemas en modelos orientados a objetos.  
Al mismo tiempo, el producto obtenido de esta primera reconstrucción puede ser refinado 
mediante dos procesos adicionales: la detección y eliminación de redundancias y, a través del 
análisis estático del esquema resultante, la identificación de puntos de conflicto potencial al ejecutar 
las acciones referenciales iniciadas por operaciones de actualización. La comprensión de la 
semántica global de este comportamiento permitirá mejorar el prototipo disponible a la vez que 
servirá como base para el análisis de la interacción entre referencias y otro tipo de restricciones.  
