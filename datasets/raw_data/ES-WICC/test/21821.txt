Visualizacion interactiva de diagramas de fase
﻿Visualizaci¶on Interactiva de Diagramas de Fase
Claudio Delrieux, Juli¶an Dominguez y Andr¶es Repetto
Universidad Nacional del Sur, Alem 1253, (8000) Bah¶³a Blanca, ARGENTINA.
Voice: (54)(291)4591501 ext. 3381 | Fax: (54)(291)4595154 | e-mail: claudio@acm.org
Palabras Clave: Visualizaci¶on Cient¶³fica | Sistemas no Lineales y Ca¶oticos
| Streamlines | (LIC) Line Integral Convolution.
1 Introducci¶on
En la literatura se han presentado varios m¶etodos para la visualizaci¶on de campos vectoriales
(glifos, trayectorias de part¶³culas, ¶³conos, Streamlines, Hyperstreamlines, Spot Noise, LIC,
etc.) [1, 2, 3, 12, 15, 16], de las cuales Streamlines y LIC son las m¶as importantes y utilizadas. En °ujos estacionarios, el m¶etodo de las Streamlines o l¶³neas de °ujo coincide con la
integraci¶on de trayectorias en sistemas din¶amicos [9, 14]: se posiciona una condici¶on inicial (o
semilla) en el espacio de fases, y se integra la ecuaci¶on diferencial por medio de diferenciales
¯nitos. Para obtener un cubrimiento uniforme del diagrama de fases o para ubicar todos los
puntos cr¶³ticos del sistema, se requiere encontrar un conjunto representativo de trayectorias,
lo cual implica encontrar las respectivas semillas, y el paso y la longitud de integraci¶on.
La elecci¶on de un valor para el diferencial ¯nito o factor de integraci¶on debe ser realizada
cuidadosamente para no producir excesivo oversampling o undersampling. La ¶unica manera
de asegurar un paso ¶optimo en toda circunstancia consiste en utilizar un paso adaptativo,
como se sugiere en [4]. La cantidad de iteraciones, junto con el paso de integraci¶on y la velocidad media en la trayectoria, son todos factores que inciden en la longitud ¯nal que tendr¶a
la misma en el diagrama de fases. En muchas circunstancias la correcta apreciaci¶on de un
campo de velocidades se logra visualizando un gran conjunto de trayectorias relativamente
cortas (\colas de cometa" [6, 7]), y para brindar una buena idea de la direcci¶on del °ujo se
pueden representar las trayectorias modi¯cando la saturaci¶on [8]. El posicionamiento uniforme de las semillas no garantiza un cubrimiento satisfactorio. Ni siquiera garantiza que todos
los puntos cr¶³ticos del sistema din¶amico se representen adecuadamente. Una soluci¶on para
estos problemas consiste en realizar la din¶amica inversa del sistema a partir de la semilla,
una cierta cantidad de iteraciones, para determinar si el punto est¶a cerca de un repeledor.
Esta t¶ecnica de \path-search" [5] permite lograr un cubrimiento m¶as parejo del diagrama
de fases, y adem¶as acelera la generaci¶on del diagrama de fases porque requiere integrar una
menor cantidad de trayectorias. Un problema inevitable es que muchas de estas t¶ecnicas son
directamente dependientes del sistema en particular, por lo que una visualizaci¶on adecuada
requiere de la asistencia del usuario.
Por su parte, la LIC (Line Integral Convolution) [1] realiza una integraci¶on m¶as corta
(t¶³picamente se realizan menos de 100 iteraciones). La trayectoria generada no se gra¯ca, sino
que se utiliza para recorrer los texels correspondientes, integrando el color de los mismos para
Workshop de Investigadores en Ciencias de la Computación WICC 2002
Página 889
Textura 1
CLIC 1
Textura 2
CLIC 2
Figura 1: Representaci¶on gr¶a¯ca (1D) del comportamiento del CLIC, aplicado a dos texturas.
El sentido del °ujo es de izquierda a derecha.
encontrar el color ¯nal del pixel. Por dicha raz¶on, la LIC produce un cubrimiento uniforme
del diagrama de fases, por lo que todos los puntos cr¶³ticos del sistema son satisfactoriamente
representados. Una mejora inmediata consiste en multiplicar, para cada pixel, el aporte de
cada texel por medio de una misma funcion ponderadora o kernel de convoluci¶on de longitud
L igual a la cantidad de pasos de integraci¶on. Sin embargo muchas veces resulta dif¶³cil
identi¯carlos adecuadamente. No siempre se pueden distinguir atractores de repeledores, y
resulta casi imposible determinar la existencia de trayectorias cerradas (focos, ciclos l¶³mite,
trayectorias homocl¶³nicas). La mejora de las posibilidades de la LIC constituye un activo
campo de investigaci¶on [8, 10, 11, 13, 17], especialmente en lo que concierne a mejorar su costo
computacional y la representaci¶on del sentido del °ujo y las trayectorias cerradas. Muchas
de las mejoras mencionadas m¶as arriba para las streamlines son directamente aplicables en la
LIC. En particular podemos mencionar que la LIC adaptativa es aproximadamente un orden
de magnitud m¶as veloz [4]. Por ¶ultimo, podemos mencionar un aspecto de importancia: la
textura utilizada para la generaci¶on de la LIC. En efecto, la textura constituye un medio
para introducir determinadas caracter¶³sticas geom¶etricas y crom¶aticas en la imagen ¯nal,
las cuales interact¶uan con la distribuci¶on geom¶etrica de las trayectorias en el diagrama de
fases. En [5, 6] se sugiere un conjunto de t¶ecnicas para generar texturas m¶as adecuadas, las
cuales luego pueden ser utilizadas para resaltar diversos aspectos de un determinado campo
vectorial.
2 LIC acumulativo
El LIC acumulativo (Cumulative LIC o CLIC) [5, 6] surge de combinar las t¶ecnicas de
desaturaci¶on de las trayectorias, y de posicionamiento no uniforme de las semillas en las
streamlines. La idea consiste en acumular el color de los texels visitados en una LIC, en vez
de computar una convoluci¶on (ver Fig. 1), e ir gra¯cando el color acumulado en la imagen
¯nal. De esa forma, el c¶omputo del color ¯nal de un pixel es mucho m¶as sencillo que con
la LIC, pueden reutilizarse los c¶omputos parciales para encontrar los colores de los pixels
vecinos, y cada trayectoria computada genera varios pixels en la imagen ¯nal. En general
esta t¶ecnica permite bajar en promedio un orden de magnitud el tiempo de c¶omputo con
calidades similares a la LIC original. Adem¶as el CLIC puede utilizarse con todas las dem¶as
Workshop de Investigadores en Ciencias de la Computación WICC 2002
Página 8990
(a) (b) (c)
Figura 2: (a) LIC original, L=300, t=212 seg. (b) CLIC adaptativo sembrado en cada pixel,
L=300, t=2.5 seg. (c) CLIC adaptativo con path search, sembrado al 10% y con segundo
paso, L=300, t=0.65 seg.
t¶ecnicas mencionadas en la secci¶on anterior (paso adaptativo, path search), con lo cual se
obtiene un m¶etodo cuyo tiempo de c¶omputo es muy cercano a los streamlines, pero con
la calidad de la LIC. Un detalle importante del CLIC es que {manejado cuidadosamente{
permite utilizar kernels mucho mayores que la LIC convencional (> 500) sin un incremento
dram¶atico en el tiempo de c¶omputo. Aplicado en forma directa, sobre cada pixel de la ¯gura
¯nal, produce resultados similares a una LIC de mismo kernel L, con tiempos sensiblemente menores (ver Fig. 2). El mejor aprovechamiento de la t¶ecnica consiste en efectuar un
\sembrado" no uniforme en un determinado porcentaje de los pixels de la imagen de salida.
Experimentalmente podemos mencionar que generando una trayectoria CLIC cada 5 o 10
pixels, se produce un cubrimiento casi total de la imagen de salida (dependiendo de c¶omo
sea el diagrama de fases y del valor de L elegido). El cubrimiento de la imagen ¯nal puede
mejorarse sensiblemente utilizando path search, y eventualmente se puede computar un segundo paso de CLIC para generar una trayectoria en cada pixel no visitado, obteni¶endose
de esa manera un cubrimiento total. Es f¶acil ver, entonces, que aumentando la longitud L
del kernel no aumenta necesariamente el tiempo de c¶omputo del CLIC. Un L mayor genera
trayectorias m¶as largas, con m¶as pixels visitados, lo cual permite disminuir tanto la cantidad
de trayectorias a recorrer como la cantidad de c¶omputo en el segundo paso.
Una observaci¶on detallada realizada a las im¶agenes resultantes puede mostrar que las
trayectorias con L grandes van perdiendo saturaci¶on muy r¶apidamente, lo cual di¯culta la
visualizaci¶on de las caracter¶³sticas geom¶etricas del diagrama de fases. Una forma de solucionar este problema consiste en utilizar una funci¶on ponderadora lineal (de muy bajo costo
computacional) que permita acumular el color a lo largo de la trayectoria con menor intensidad. De esa forma el factor k o carry permite controlar la desaturaci¶on de las trayectorias.
En la Fig. 3 podemos ver el efecto del factor k sobre el CLIC. Se observa que con menor k
la in°uencia de la textura original es mayor.
3 Doble CLIC
Como pudimos ver en la Secci¶on anterior, el CLIC y sus mejoras asociadas nos permiten
visualizar diagramas de fase en tiempos semejantes a las streamlines, con calidades semejantes a la LIC. Sin embargo, el m¶etodo es nuevamente dependiente del sistema din¶amico en
particular y requiere la elecci¶on cuidadosa de los par¶ametros por parte del usuario para ser
correctamente utilizado. Seg¶un se mencionara m¶as arriba, la textura de entrada juega un rol
Workshop de Investigadores en Ciencias de la Computación WICC 2002
Página 901
(a) (b) (c)
Figura 3: Visualizaciones del diagrama de fases del oscilador de Van der Pol (a) k = 0:2, (b)
k = 0:5, y (c) k = 1.
preponderante en la calidad del resultado, y dado que el CLIC es notablemente econ¶omico
para computar, la idea para lograr un m¶etodo aut¶onomo consiste en utilizar un CLIC (probablemente de baja calidad pero poco costo computacional) como textura de entrada para
el c¶omputo del CLIC. Es decir, aplicamos dos veces el m¶etodo. La primera transforma la
textura original en una textura intermedia de mejor calidad, y la segunda produce la visualizaci¶on ¯nal. De esa forma, el \doble CLIC" logra combinar la rapidez y autonom¶³a de
los streamlines con la calidad de la LIC. En la Fig. 4 podemos comparar, para un campo
vectorial y una textura especialmente dif¶³cil, el efecto de aplicar dos veces el CLIC. De esa
forma se logra un efecto visual de mayor semejanza al LIC original. Esta forma de trabajar
permite elegir diferentes valores de k para realizar un CLIC inverso y luego hacia adelante
(utilizando el primero como textura de entrada para el segundo). Se observa que la visualizaci¶on producida por los nuevos m¶etodos (CLIC y doble CLIC) son de calidad semejante a
la LIC, con una e¯ciencia computacional mucho mayor.
