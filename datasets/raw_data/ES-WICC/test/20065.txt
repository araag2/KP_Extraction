Ontologías en arquitecturas dirigidas por modelos
﻿
 
La arquitectura dirigida por modelos (MDA) y 
las ontologías son dos de los recursos cada vez 
más populares dentro de la comunidad informática para el desarrollo de sistemas de software. 
La MDA presenta un marco de trabajo para crear aplicaciones informáticas. Paralelamente, las 
ontologías devienen en recursos cuya función es 
facilitar la interacción entre herramientas de 
software heterogéneas. Los objetivos de ambos 
recursos, si bien son distintos, no son mutuamente excluyentes. Esto permite establecer una 
relación entre ellos. Este proyecto investiga, 
clasifica y utiliza los puntos de conexión entre 
MDA y ontologías, a partir del análisis de trabajos desarrollados en este campo, a fin de proponer una metodología para el desarrollo de 
Arquitecturas dirigidas por  Modelos sustentada 
en el uso de ontologías. 
Palabras clave: ontologías, MDA 
 
Contexto 
 
Proyecto de innovación tecnológica acreditado por la Secretaría de Ciencia y Técnica de la 
Universidad de Buenos Aires para la Programación Científica 2011-2014. 
 
Introducción 
 
Como resultado de las mejores prácticas en 
Ingeniería de Software surge la Arquitectura 
dirigida por Modelos (MDA). Este tipo de arquitectura propone un marco de trabajo basado en 
el uso de modelos para el desarrollo de software [3] [4]. Los modelos desarrollados pueden 
clasificarse de acuerdo al punto de vista del sistema que muestren y están relacionados entre 
sí a través de transformaciones que permiten 
pasar de un modelo a otro. 
Las Ontologías han surgido como una manera 
de estandarizar y facilitar la interacción  de los 
sistemas actuales,  como una manera de representar el conocimiento compartido acerca de un 
dominio determinado [5]. Por lo general, las 
ontologías están  asociadas a la idea de contenedores semánticos [6], esto es a través de vocabularios controlados o bien por  estructuras 
que soportan todo el peso semántico de una 
interacción entre servicios: tienen algún lugar 
dentro de la  arquitectura de los sistemas [26]. 
Las ontologías se implementan en el diseño 
de aplicaciones mediante el uso de artefactos 
de software. Siendo un artefacto, las ontologías 
pueden ser construidas de manera ad hoc o se 
puede seguir un estándar de construcción de 
aplicaciones [20].  
No hay diferencias sustanciales entre el modelado y la representación de ontologías [14]. 
De este modo, la solución debe ser una unificación de ambas técnicas que tome de las ontologías la representación formal a través del uso 
de Lógica Descriptiva que logre una semántica 
formal consistente y de MDA los mecanismos de 
representación a través de sus múltiples niveles, 
metaniveles y dimensiones [18]  [24]. 
Las ontologías facilitan la reutilización y generan confiabilidad en las aplicaciones, dado 
que  permiten sistematizar el chequeo de la 
consistencia [7] [12]. También mejoran la documentación del software y en consecuencia 
reducen los costos de mantenimiento [29]. 
Parrend y David [12]  presentan un proceso 
basado en ontologías del dominio para apoyar 
los procesos de ingeniería basada en modelos. 
Algo similar propone Pahl [13] para el diseño de 
servicios web. Otros usos de las ontologías existentes se enfocan en la recopilación de requisitos de diferentes dominios como los modelos 
de procesos [31]  y los componentes de software [15]. Además, Chitchyan y otros [16]  las emplean en el diseño de aplicaciones orientadas a 
aspectos y Ferreiro y otros [17]  en la construcción de bases de datos desde documentos de la 
Web.  
 Devedzic [18] propone la construcción de 
ontologías a partir de patrones de diseño y Romay y Cuesta [19]  proponen un enfoque basado en aspectos para la construcción de ontologías del dominio durante el desarrollo de sistemas de información.  
La generación automática de código, como 
una solución para cerrar la brecha existente 
entre las etapas de análisis y diseño a la implementación, es fuente de muchos trabajos de 
investigación. Las ontologías se usan, en este 
contexto, de diversas formas.  
Bures y otros [20]  definen la síntesis de programa (program synthesis) como el proceso 
para derivar, automáticamente, código ejecutable desde especificaciones de alto nivel no ejecutables.  
Bench-Capon [21]  utiliza ontologías para verificar la coherencia de una base de conocimientos, proveer un medio para estructurar las 
pruebas y sugerir respuestas apropiadas cuando 
las pruebas indican que existen fallas. Looker y 
otros [22]  proponen un método para medir la 
capacidad de un sistema para ejecutar su función de una manera confiable, en el contexto de 
los servicios Web y las arquitecturas orientadas 
a servicios. Se construyeron varias ontologías: 
descripción de los servicios Web, una extensión 
de un modelo general de fallas y modos de 
errores. Yu y otros [23]  proponen un método 
para probar la capacidad que poseen los servicios Web para operar entre ellos. El uso de la 
ontología permite detectar nuevos tipos de 
errores, permitiendo el ingreso de las reglas 
correspondientes.  
La ontología de Kitchenham y otros [24]  contiene los conceptos relevantes para la clasificación de estudios empíricos en el mantenimiento 
de software. Algunos tipos de conocimiento, 
implícitos en los artefactos construidos en el 
ciclo de vida de desarrollo de una aplicación, se 
representan como conceptos en la ontología 
presentada por Deridder [26]. Entre estos conocimientos, se encuentran las conexiones entre 
los diferentes artefactos, el conocimiento que 
se pierde en los refinamientos interactivos y el 
conocimiento considerado como de sentido 
común por las partes participantes en el desarrollo. Hyland-Wood y otros [27]  construyen 
una ontología de conceptos de la Ingeniería de 
Software. Dichos conceptos corresponden a las 
componentes y metadatos del sistema y permiten la navegación sobre éste facilitando el entendimiento del software y su mantenimiento. 
April [28]  formaliza una ontología de mantenimiento con base en la ontología de Ruiz y otros 
[29]  y establece una relación con un conjunto 
de mejores prácticas contenidas en la integración de modelos de capacidad y madurez 
(CMMI).  
La multiplicidad de esquemas generada en el 
proceso de síntesis de programas, se mejora 
con la introducción de una ontología de conceptos de dominios específicos, que guía la actualización y el cambio de los sistemas, actividades 
representativas de la fase de mantenimiento 
[31]. Nistor [30]  se ocupa de hacer extensible la 
síntesis de sistemas, por medio de la ontología, 
a nuevos dominios de aplicación. 
 
Líneas de investigación y desarrollo 
 
Generación de modelos con base en Ontologías 
En esta línea se consideran desarrollos cuyo 
punto de partida es una ontología, la cual a 
través de transformaciones es convertida en un 
modelo. Ejemplos de este grupo son los trabajos 
de Wongthongtham [4], Johansson [9]  y Soares 
[10]. La característica principal de esta línea es 
la tendencia a la reutilización de ontologías y 
uno de los principales motivos para el uso de 
una ontología como base de modelado es que 
éstas representan el conocimiento concertado 
sobre un dominio determinado, generalmente 
dado por una comunidad especializada en dicho 
dominio. De este modo,  los modelos obtenidos 
por esta técnica pueden ser más completos en 
pocas interacciones comparados con los obtenidos por un método ad hoc. También la ontología constituye el punto de referencia sobre el 
cual es comparado el modelo final para ver si 
cumple o no con los requerimientos y la conceptualización inicial [31]. 
Wongthongtham, de Palol y Olivé [4], proponen la creación de Modelos Conceptuales partiendo de una Ontología. Este método propone 
obtener una ontología del dominio sobre el cual 
se desea hacer un desarrollo. En este paso se 
puede crear la ontología o usar una ya existente 
que se encuentre disponible [7]. La ontología 
permitirá dar una visión más amplia para la especificación del sistema y reducirá el número de 
aspectos no contemplados en el desarrollo. A 
través de procesos de refinamiento de la ontología y de validación del modelo contra la ontología, se obtendrá un modelo conceptual de 
mejor calidad para que sea el soporte de desarrollo de cualquier aplicación. Los procesos de 
refinamiento y validación, realizan el papel de 
modelos de transformación que usa MDA. 
Un caso similar es presentado por Soares, 
Heckel y Lohmann [10] quienes se basan en una 
ontología para la construcción de modelos en el 
desarrollo de Servicios Web. La ontología nuevamente es tomada como base y la generación 
de los modelos es realizada a través de la aplicación de “Reglas de Transformación de Grafos”. Johansson, Pan, Oberle, Wallace, Uschold y 
Kendel [9], presentan las ontologías como Modelos Formales de Especificación. Siendo las 
ontologías instrumentos para facilitar el entendimiento entre diversos agentes tomando en 
cuenta las propiedades semánticas de la comunicación y siendo reflejadas estas propiedades 
en un entorno de formalismos lógicos, estas se 
convierten en muy buenos instrumentos no solo 
para la creación de modelos conceptuales sino 
también para la creación de Modelos de Datos 
que dan completitud a la aplicación de la que 
son soporte [31].  
 
Generación de Ontologías con base en 
modelos 
Esta línea abarca los desarrollos en los cuales 
las ontologías son el producto de procesos de 
transformación de uno o varios modelos. Las 
ontologías obtenidas son el reflejo de la conceptualización sobre la cual se han basado uno o 
varios desarrollos. Astrova y Stantic [1]  nos 
muestran un caso de ingeniería inversa, en el 
cual basado en un Modelo de Datos podemos 
llegar a la Ontología.  
Pahl [13]  resalta la importancia de tener un 
vocabulario común que sirva de soporte a todos 
los elementos involucrados en un desarrollo y 
que sea utilizado durante todo el proceso de 
desarrollo de la aplicación. Asimismo,  resalta 
cómo una ontología podría compilar el punto de 
vista utilizado por una arquitectura.  De este 
modo, si un punto de vista describe un sistema 
desde una única perspectiva, se podría concluir 
que varias aplicaciones desarrolladas bajo el 
mismo punto de vista y centradas en el mismo 
dominio deben tener una ontología común. Este 
punto es la formalización de la tarea de recopilación de mejores experiencias para una tarea 
específica: modelar un dominio a partir de un 
punto de vista específico y plasmarlo en una 
ontología.  
 Astrova [1]  evidencia  que la relación puede 
ser 1 a 1, donde un modelo genera una ontología. Sin embargo, Pahl [13]  presenta una relación 
1 a varios, donde varios puntos de vista sobre 
un problema generan una sola ontología. 
 
Resultados y Objetivos 
 
1. Definir un marco teórico/práctico que de 
sustento al uso de Ontologías en el marco 
de la construcción de Arquitecturas dirigidas 
por modelos. 
1.1. Presentar una visión unificada sobre aspectos y nomenclatura de la Arquitectura dirigida por modelos. 
1.2. Plantear un marco teórico/práctico general  que cubra los aspectos del uso de 
Ontologías colaborando para la definición de Arquitecturas dirigidas por Modelos. 
2. Especificar, desarrollar y evaluar un protocolo para la aplicación de Ontologías en relación a la construcción de Arquitecturas dirigidas por Modelos. 
2.1. Presentar una visión unificada sobre 
componentes de metodologías  para el 
diseño de aplicaciones con Arquitectura 
dirigida por Modelos. 
2.2. Presentar una extensión del componente metodológico específico que custodie 
los aspectos correspondientes  a la Arquitectura dirigida por Modelos (MDA) 
sustentada por la aplicación de Ontologías. 
 
Formación de Recursos Humanos 
 
El equipo de trabajo se compone de los autores, 
y actualmente se encuentra en desarrollo una 
tesis de grado de Ingeniería en Informática y un 
trabajo para la Licenciatura en Análisis de Sistemas 
