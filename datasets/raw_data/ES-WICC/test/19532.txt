Definici√≥n de un metamodelo para la validaci√≥n de procesos de software organizacionales basados en modelos est√°ndares
Ôªø
del proyecto de investigaci√≥n 
"Implementaci√≥n de un modelo de 
validaci√≥n para la definici√≥n y 
mantenimiento de procesos de desarrollo 
de software", que representa la segunda 
etapa del programa para la generaci√≥n de 
"Un entorno de aprendizaje activo de 
ingenier√≠a de software basado en la 
integraci√≥n Universidad-Industria" 
(LIDICALSO:2010) en el Laboratorio de 
Investigaci√≥n y Desarrollo en Ingenier√≠a y 
Calidad del Software (LIDICALSO) de la 
Universidad Tecnol√≥gica Nacional - 
Facultad Regional C√≥rdoba. 
Adicionalmente este trabajo se enmarca 
como parte de la tesis de Maestr√≠a en 
Ingenier√≠a en Sistemas de Informaci√≥n del 
Ingeniero Pablo Szyrko, investigador del 
proyecto de investigaci√≥n. 
RESUME 
Las organizaciones que desarrollan 
software tienen sus propios procesos de 
desarrollo tailorizados de acuerdo a sus 
caracter√≠sticas organizacionales y de sus 
proyectos. Estos procesos gu√≠an y 
asesoran a los desarrolladores con el fin de 
producir software de calidad. Diversos 
modelos, est√°ndares y normas1 han sido 
creados con el objetivo de asistir a las 
organizaciones en la definici√≥n y mejora 
de sus procesos.  La premisa fundamental 
es ser capaces de determinar si las buenas 
pr√°cticas definidas en el modelo, y los 
cambios que se han realizado sobre el 
mismo,  efectivamente est√°n especificados 
en los procesos de la organizaci√≥n.  
El objetivo de este trabajo es contribuir a 
la definici√≥n de un metamodelo de 
procesos que permita determinar la 
adherencia de las pr√°cticas definidas a 
nivel organizacional con respecto a los 
modelos de referencia, a trav√©s del 
desarrollo de una herramienta, 
permitiendo analizar el impacto ante 
cualquier cambio tanto del modelo de 
referencia como del proceso 
organizacional, utilizando la sem√°ntica 
SPEM representado con EPF. 
                                                           
1 La palabra Modelo ser√° utilizada como 
referencia gen√©rica a Normas, modelos y 
est√°ndares para facilitar la narraci√≥n. 
                      395WICC 2010 - XII Workshop de Investigadores en Ciencias de la Computaci√≥n
Palabras clave: metamodelo, procesos de 
software, validaci√≥n, SPEM, EPF  
1. ITRODUCCIO 
El gran crecimiento de la industria del 
Software a nivel global ha estado 
sustentado, entre otros componentes, por 
la aplicaci√≥n de modelos orientados a la 
Gesti√≥n de la Calidad, entre los cuales se 
encuentran CMMI-SW (SEI:2006) e ISO 
(ISO:2008). La inserci√≥n de procesos de 
software con metodolog√≠as, 
procedimientos y pr√°cticas para la mejora 
de la calidad y productividad en el 
desarrollo de sistemas, se ha convertido en 
uno de los sectores de mayor inversi√≥n en 
las organizaciones que desean mejorar su 
competitividad en el mercado (Bezerra et 
al: 2006). Por su parte, la definici√≥n de un 
patr√≥n de proceso establece una estructura 
com√∫n a ser utilizada por la organizaci√≥n 
en sus proyectos de software y constituye 
la base para la definici√≥n de todos sus 
procesos. De esta forma, se establece un 
proceso b√°sico que servir√° de punto de 
partida para la posterior definici√≥n de los 
procesos de software adaptados a las 
diferentes caracter√≠sticas de cada proyecto, 
permitiendo una econom√≠a de tiempo y 
esfuerzo en la definici√≥n de nuevos 
procesos (Bezerra et al: 2006). 
Se torna dif√≠cil evaluar la adherencia hacia 
los modelos de calidad tomados como 
base y los aspectos relevantes entre los 
diferentes procesos institucionalizados, lo 
que podr√≠a contribuir de forma 
significativa tanto a la mejora de los 
procesos como de los propios modelos. El 
asunto se complica a√∫n m√°s cuando 
algunos elementos en el modelo cambian. 
Por ejemplo, si nos focalizamos en 
CMMI-SW, si un nuevo tipo de pr√°ctica 
es aceptado por la industria o un nuevo 
objetivo (goal) es identificado como 
necesario para satisfacer un √°rea de 
proceso espec√≠fico. En ese caso, los 
expertos necesitan ser reentrenados para 
ser capaces de lidiar con la nueva versi√≥n 
del modelo, present√°ndose la dificultad de 
asegurar que los procesos 
organizacionales cumplen con dichas 
pr√°cticas. Y otro aspecto a considerar es 
que las personas son propensas a errores. 
En otras palabras, el proceso tedioso de 
verificar las relaciones entre las variadas 
pr√°cticas y objetivos (goals) en una 
organizaci√≥n puede generar errores no 
intencionales (Soydan et al: 2006). 
La pregunta a responder es c√≥mo facilitar 
en forma eficiente la comparaci√≥n entre 
esos modelos. Muchos trabajos han sido 
focalizados en comparaci√≥n de modelos a 
trav√©s de m√©todos informales; [‚Ä¶]. 
Aunque ciertamente √∫tiles, estos enfoques 
informales son caros, propensos a errores, 
y pueden f√°cilmente llevar a la p√©rdida de 
memoria organizacional, debido a que la 
evaluaci√≥n de los resultados es con 
frecuencia dif√≠cil de reusar o ampliar en 
oportunidades futuras. Las ventajas de los 
m√©todos formales incluyen que (i) reducen 
la ambig√ºedad, (ii) sirven como un 
contrato y ayudan a resolver conflictos 
acerca de la interpretaci√≥n, permitiendo 
razonar acerca de las propiedades, y (iii) 
son prerrequisitos para muchas t√©cnicas de 
an√°lisis sofisticadas (De Moor et al:2006).  
Una herramienta de soporte 
computacional ser√≠a capaz de aliviar 
algunos de los problemas antes 
                      396WICC 2010 - XII Workshop de Investigadores en Ciencias de la Computaci√≥n
mencionados. Una herramienta no ser√≠a 
propensa a errores. Ser√≠a m√°s veloz. Y 
podr√≠a ser m√°s barata de usar. Y las 
compa√±√≠as podr√≠an usar esa herramienta 
sin la necesidad de contratar consultores 
externos. Incluso, si es dise√±ada 
apropiadamente, cualquier modificaci√≥n 
en el modelo (por ejemplo CMMI-SW) 
podr√≠a ser implementado con mayor 
facilidad, y una nueva versi√≥n de la 
herramienta podr√≠a estar disponible para 
los usuarios en un tiempo relativamente 
corto (Soydan et al: 2006). El concepto de 
procesable por computadora se aplica en 
este contexto, exigiendo la necesidad de 
disponer de representaciones de las 
normas/modelos en una sem√°ntica que 
pueda ser ejecutada por una computadora, 
para proceder a su validaci√≥n contra la 
especificaci√≥n organizacional. 
2. LIEAS DE IVESTIGACIO y 
DESARROLLO 
El presente trabajo se plantea en torno a la 
relaci√≥n que se establece entre los 
modelos de referencia, el metamodelo de 
proceso y el proceso de desarrollo de 
software organizacional establecidos para 
el proyecto "Implementaci√≥n de un 
modelo de validaci√≥n para la definici√≥n y 
mantenimiento de procesos de desarrollo 
de software" (Szyrko et al: 2009), tal 
como se representa en la figura 1. 
SPEM (Software Process Engineering 
Metamodel) es el est√°ndar definido por el 
OMG (Object Management Group) para la 
representaci√≥n de procesos de desarrollo y 
determina el lenguaje mediante el cual se 
definen procesos de software. SPEM 
ofrece un marco de trabajo para el 
modelado, documentaci√≥n, presentaci√≥n, 
gesti√≥n e intercambio de los procesos de 
desarrollo Software y sus componentes, 
dando una sintaxis y una estructura com√∫n 
para cada aspecto del proceso de 
desarrollo (SPEM:2008). A trav√©s del 
 
Figura 1: Modelo de referencia definido a nivel de proceso organizacional 
                      397WICC 2010 - XII Workshop de Investigadores en Ciencias de la Computaci√≥n
presente trabajo se pretende representar 
las pr√°cticas de los modelos utilizando 
SPEM. De la misma forma la 
especificaci√≥n del proceso de desarrollo 
de software a nivel organizacional 
tambi√©n se expresa a trav√©s de los 
componentes proporcionados por SPEM. 
La representaci√≥n a trav√©s de SPEM est√° 
soportada por la utilizaci√≥n de Eclipse 
Process Framework (EPF) (EPF:2008), 
una herramienta gratuita que permite la 
definici√≥n de metodolog√≠as (Larrucea et 
al:2007). 
El objetivo de este trabajo es contribuir a 
la definici√≥n de este metamodelo de 
proceso, haciendo una validaci√≥n de la 
adherencia de las pr√°cticas definidas a 
nivel organizacional con respecto al 
modelo de referencia, lo cual 
adicionalmente permite analizar el 
impacto ante cualquier cambio tanto del 
modelo de referencia como del proceso 
organizacional. En el escenario de uso 
esperado, una organizaci√≥n deber√≠a 
insertar informaci√≥n acerca de las 
pr√°cticas organizacionales que usa en su 
proceso de desarrollo de software. Para ser 
m√°s preciso, las pr√°cticas de la compa√±√≠a 
deber√≠an estar expresadas en t√©rminos de 
la sintaxis SPEM, utilizando EPF. El 
siguiente paso es invocar al validador para 
chequear la consistencia de la definici√≥n 
organizacional que incluye informaci√≥n 
espec√≠fica de la compa√±√≠a. De esta forma 
se pretende proporcionar la herramienta de 
soporte computacional que sea capaz de 
aliviar algunos de los problemas 
previamente mencionados.  
3. RESULTADOS 
OBTEIDOS/ESPERADOS 
Los primeros esfuerzos estuvieron 
orientados a obtener los conocimientos 
te√≥ricos y pr√°cticos relacionados a las 
herramientas de definici√≥n y modelado de 
procesos de desarrollo de software. 
Adicionalmente  es preciso considerar que 
al momento de definir los procesos de una 
organizaci√≥n, surge la necesidad de 
disponer de herramientas que ayuden en el 
modelado de dichos procesos. De esta 
manera se procedi√≥ a establecer un 
conjunto de requerimientos esperables a  
ser cumplimentados por dichas 
herramientas, aplicando un criterio de 
comparaci√≥n y selecci√≥n resultando 
finalmente seleccionado EPF, junto con el 
lenguaje de modelado SPEM previamente 
explicado. Los siguientes objetivos est√°n 
planteados, guiando las actividades en 
curso: 
-Establecer una sem√°ntica de 
representaci√≥n en SPEM de las pr√°cticas 
de un modelo de proceso de desarrollo de 
software. Inicialmente se pretende 
establecer una prueba piloto para una 
pr√°ctica de CMMI-SW, expandi√©ndolo 
posteriormente a otras pr√°cticas, y a otros 
modelos. 
-Especificar una pr√°ctica organizacional 
en sem√°ntica SPEM, con el fin de 
establecer el mapeo de √©sta, con la 
definici√≥n previamente realizada de la 
pr√°ctica del modelo est√°ndar CMMI-SW. 
El concepto que se aplica es el mismo, es 
decir, comenzar con una prueba piloto 
para expandir la especificaci√≥n. 
-Desarrollar la herramienta que valide la 
adherencia entre la definici√≥n de un 
proceso de software organizacional y el 
modelo tomado como base, permitiendo 
                      398WICC 2010 - XII Workshop de Investigadores en Ciencias de la Computaci√≥n
analizar el impacto de los cambios en el 
proceso especificado. 
-Proceder a la validaci√≥n de las pr√°cticas 
del modelo y organizacional expresadas 
en sem√°ntica SPEM para determinar su 
adherencia. 
4. FORMACIO DE RECURSOS 
HUMAOS  
Se planea la transferencia de los resultados 
del proyecto en dos niveles: a nivel 
acad√©mico y a nivel industrial. A nivel 
acad√©mico, a trav√©s del desarrollo de 
investigadores relacionados a la tem√°tica y 
el dictado de seminarios y conferencias. 
Particularmente, como se expres√≥ 
previamente, este trabajo es realizado 
dentro del contexto de la tesis de Maestr√≠a 
en Sistemas de Informaci√≥n del Ingeniero 
Pablo Szyrko.  
Y a nivel industrial a trav√©s del desarrollo 
del metamodelo y la  implementaci√≥n de 
la herramienta que permita validar la 
implementaci√≥n de un proceso de 
desarrollo de software para un conjunto de 
pr√°cticas de los modelos de referencia 
seleccionados. 
5.
