Propuesta de un modelo genérico para el modelo de negocio
﻿
Para el abordaje al diseño y desarrollo de todo sistema de software es necesario estudiar en detalle
la estructura y dinámica de la organización donde el mismo deberá funcionar. Esto ayudará a
obtener una lista de requerimientos del sistema más acertada. Con el propósito enunciado, Booch,
Rumbaugh y Jacobson [3] proponen construir el modelo de negocio como primera etapa del
Proceso Unificado de desarrollo de software. En este trabajo analizamos los artefactos del modelo
del negocio y sus relaciones, especificamos las reglas de negocio existentes entre los artefactos, y
construimos un modelo genérico que permite definir diferentes instancias de modelos de negocio
como propuestas de solución a un problema real planteado.
1. Introducción
El Proceso Unificado es una metodología de desarrollo de software que define quién está haciendo
qué, cuándo, y cómo para construir o mejorar un producto de software. Utiliza UML,  como medio
de expresión de los diferentes modelos que se crean durante las etapas del desarrollo. UML es un
lenguaje estándar de modelado que permite visualizar, especificar, construir y documentar los
artefactos de un producto de software.
El Modelo de Negocio es la primer etapa que propone el proceso para establecer una abstracción de
la organización. El RUP [1] (Rational Unified Process) propone un workflow para definir el modelo
de negocio y un conjunto de artefactos que deben construirse para modelar el negocio.
Existen algunos trabajos que presentan el modelo de negocio del RUP, la definición de sus
artefactos y la evolución al modelo de requerimientos, sin embargo no reflejan claramente las
relaciones entre los artefactos ni especifican reglas para verificar las instanciaciones realizadas. En
[8] se presenta una estrategia para obtener de modo sistemático el modelo de casos de uso y el
modelo conceptual, a partir del modelado del negocio basado en diagramas de actividades UML. En
[9] se describe un “UML Profile” para automatizar procesos de  negocio con un mapeo a
BPEL4WS (The Business Process Execution Language for Web Services). En [10] y [11] presentan
como modelar procesos de negocio con UML, usando las extensiones propuestas por Eriksson y
Penker [13]. En [12] se propone una técnica para desarrollar sistemas utilizando el Razonamiento
Basado en Casos (RBC) y obtener el Modelo del Negocio a partir de un conjunto de
especificaciones iniciales brindadas por los analistas, permitiendo aprovechar la experiencia de
otros desarrolladores en el diseño de sistemas con características similares. Eriksson y Penker [13]
extienden UML, usando los mecanismos de extensión, para una mejor definición de  procesos de
negocio. Además, presentan una introducción a Object Constraint Language (OCL) y su uso para
modelar reglas de negocio.
En este trabajo se muestran y explican algunas relaciones existentes entre los artefactos del modelo
de negocio, se define un conjunto de reglas de negocio [7] que el modelo debe verificar y se
propone un modelo genérico, que establece las bases para especificar un modelo de negocio
concreto. El aporte de este trabajo consiste en comprender y desarrollar el contexto del sistema y las
relaciones entre sus artefactos de manera más rápida y sencilla.
En la sección 2 se introduce la definición del modelo de negocio y sus artefactos. En la sección 3 se
presenta la definición de un modelo genérico para el modelo de negocio, representado por un
diagrama de clases de UML. Por último se exponen las conclusiones y trabajos futuros.
2. Modelo de Negocio
El RUP propone una técnica para estudiar el contexto del problema, denominada modelo de
negocio.  Tal como lo postulan los creadores del proceso en [3], el modelo de negocio está
soportado por el modelo de casos de uso del negocio y el modelo de objetos. El modelo de casos de
uso de negocio describe los procesos de negocio de una empresa en términos de casos de uso del
negocio y actores del negocio que se corresponden con los procesos del negocio y los clientes,
respectivamente. Por otro lado, el modelo de objetos del negocio es un modelo interno a un
negocio, que describe cómo cada caso de uso de negocio es llevado a cabo por parte de un conjunto
de trabajadores que utilizan un conjunto de entidades del negocio y unidades de trabajo,
actualmente llamado Modelo de Análisis por el RUP [1]. El modelo de negocio es una técnica que
permite comprender los procesos de negocio de la organización. Describe como desarrollar una
visión de la organización, y basado en esta visión define los procesos, roles y responsabilidades de
la organización. El conjunto de artefactos del modelo de negocio captura y presenta el contexto del
sistema.
3. Modelo Genérico del Modelo de Negocio
El modelo genérico del modelo de negocio es una reconstrucción bien formada del modelo original
presentado por el RUP [1]. Permite visualizar y especificar de manera precisa, no ambigua y
completa los artefactos que componen el modelo de negocio y sus relaciones. Sirve para representar
cualquier modelo de negocio en cualquier contexto.
La propuesta original utiliza el lenguaje natural para describir los artefactos y sus relaciones. Como
es bien conocido, esto lleva aparejados distintos riesgos como imprecisión, ambigüedad, etc., muy
peligrosos a la hora de traducirlos a una notación formal o semiformal (como por ejemplos los
diagramas típicos de UML); necesariamente, el diseñador debe interpretar, agregar y/o quitar
información para poder llevar a cabo su tarea.
El modelo genérico propuesto simplifica la obtención de una solución al problema de modelado de
negocio, ya que resume en un único diagrama de clases todos los artefactos que componen el
modelo de negocio, y las relaciones entre ellos, además la propia semántica del diagrama de clases
de UML (tipo de relaciones, multiplicidad, navegabilidad, etc.) permite visualizar y especificar
cuales artefactos son obligatorios construir y cuales son opcionales. El conjunto de reglas definidas
para cada artefacto permiten construir un modelo correcto, a partir de su verificación durante el
proceso de construcción del modelo de negocio. Por otro lado, estas reglas también sirven para
verificar la corrección de un modelo previamente construido.
La Figura 1.b muestra el Diagrama de Clases que representa el modelo genérico propuesto para el
modelo de negocio. Cada clase modela un artefacto del modelo de negocio y es nombrada por una
sigla que la identifica de acuerdo a lo indicado en la Figura 1.a. En adelante, se utilizan estas siglas
para referirnos a cada uno de los artefactos.
Figura 1.a. Siglas de los Artefactos del Modelo de Negocio
Documentos
〈GN, Glosario de Negocio〉
〈VFO, Valoración del Fin de la Organización〉
〈VN, Visión del Negocio〉
〈DAN, Documento Arquitectura del Negocio〉
〈ESN, Especificación Suplementaria del Negocio〉
〈RN, Reglas del Negocio〉
〈ON, Objetivo del Negocio〉
Modelos
〈MCUN, Modelo de Casos de Uso de Negocio〉
〈MAN, Modelo de Análisis de Negocio〉
Elementos de Modelos
〈CUN, Caso de Uso del Negocio〉
〈AN, Actor del Negocio〉
〈RCUN, Realización de Caso de Uso de Negocio〉
〈SN, Sistema de Negocio〉
〈EN, Entidad de Negocio〉
〈WN, Worker de Negocio〉
〈EvN, Evento de Negocio〉
E s trateg ias  del 
Negoc io
disparan y rec iben
AN
< < elem ent> >
VFO
< < doc um ent> >
C UN
< < elem ent> >
0..*1..*
+ pres ta s ervic io
< < interac c ion> >
ESN
< < doc um ent> >
O N
< < doc um ent> >
M C U N
<<m odel>>
+ bas e de
+ s on cuantific adores  y  res tric c iones
1
0..1
+ se dirige a
R CUN
< < elem ent> >
R N
< < doc um ent> >
0..1
1
GN
< < doc um ent> >
1
0..1
D AN
< < doc um ent> >
VN
< < doc um ent> >
EvN
< < elem ent> >
W N
< < elem ent> >
SN
< < elem ent> >
EN
< < elem ent> >
1..*1..*
< < interac c ion> >
M AN
<<m odel>>
1
0..1
1
0..1
1..*
0 ..1 1
Figura 1.b. Modelo Genérico del Modelo de Negocio
Este diagrama de clases permite visualizar los artefactos que componen el modelo completo de
negocio, categorizados por modelos que se indican con <<model>>, elementos de modelos como
<<element>> y especificados por relaciones de composición, y documentos con <<document>>,
que representan las definiciones suplementarias para los dos modelos fundamentales representados
por MAN y MCUN.
Si se analiza en detalle el MCUN y su relación con los demás artefactos, este diagrama especifica
de manera precisa que para cada MCUN debe existir un GN, un RN y un ON asociado, que deben
ser construidos antes que el propio MCUN. Se sabe que, principalmente el GN, evolucionará
paulatinamente con la construcción del modelo general. Las RN existen en cualquier contexto bajo
estudio, y por lo tanto se visualiza y especifica que por lo menos un RN debe existir siempre que se
construye un MCUN. Las estrategias de negocio son materializadas a través de los ON, y el MCUN
dirige su propósito hacia ellos. Esto aporta una importante definición a la construcción de una
solución, en la que el desarrollador puede determinar qué artefactos son indispensables u
obligatorios definir en todo modelo de negocio. Luego dependiendo del contexto del problema a
resolver y de la envergadura  del negocio a modelar, existen otros documentos que son
suplementarios al MCUN que pueden ser incluidos al modelo general.
Cuando el análisis del negocio es bien entendido por todo el equipo del proyecto, el MAN puede ser
excluido. Si ésta es la decisión, es claro ver que eliminando el MAN se eliminan todas sus
componentes asociadas, ello por la propia definición de la relación de agregación compuesta donde
existe una fuerte relación de pertenencia y vidas coincidentes de la parte con el todo [2], en este
caso elementos del modelo y el MAN. En otro caso, el MAN puede construirse de manera completa
o puede alcanzar con definir solo el modelo de dominio, es decir las EN. Este modelo de clases
especifica que si el MAN es realizado deben ser definidas por lo menos una o más EN. Además,
tanto las RN como el GN deben ser creadas antes que el MAN, y serán revisadas y actualizadas
cuando el MAN sea desarrollado.
Las restricciones definas por las RN pueden ser de comportamiento o estructurales, y afectan tanto a
la secuencia de acciones que definen un CUN como a pre y poscondiciones que deben satisfacerse
para la RCUN. Las RN estructurales, se pueden ver como relaciones y cardinalidad entre EN en el
modelo de dominio. Además, las RN están también involucradas con el GN, dado que el
mantenimiento de dichas políticas y condiciones durante todo el proyecto, exigen una revisión
permanente del GN.
El MAN está relacionado con el  MCUN dado que su propósito es describir cómo los CUN se
desarrollan o ejecutan. Por lo tanto en el diagrama se visualiza una relación semántica entre ambos
modelos representada con una dependencia indicando que el MAN usa la definición del MCUN, en
la cual un cambio en el MCUN, elemento independiente, puede afectar la semántica del MAN, el
elemento dependiente.
4. Instanciación del modelo con un caso real
A través de diferentes ejemplos es posible mostrar los alcances del método propuesto. A
continuación se muestran algunas de las reglas definidas por los autores en [7] para verificar que un
modelo de negocio se construye correctamente a partir del modelo genérico presentado.
4.1. Reglas definidas para cada artefacto
Cada regla está definida en lenguaje natural. Se identifica unívocamente primero por el artefacto al
cual se asocia y luego por un número correlativo. En general, la primera regla presentada para cada
artefacto define los elementos o propiedades que lo componen.
Artefacto: GN
GN.1) GN: {(término, descripción)}
GN.2) Cada término posee un sustantivo singular + una descripción textual.
GN.3) Cada término del GN debe estar incluido en la descripción de por lo menos un CUN.
Artefacto: Modelo de Dominio (subconjunto del MAN)
MAN.1). Las clases del modelo de dominio son términos definidos en GN.
Artefacto: MCUN
MCUN.1) MCUN: 〈{CUN}, {AN}, {Relaciones include, extend, generalización entre CUN},
{Relaciones de Generalización entre AN}, {Asociaciones entre CUN y AN}〉
MCUN.2) Un CUN está siempre relacionado a un AN, excepto los CUN abstractos.
MCUN.3) Un CUN es abstracto si no está relacionado con un AN, por lo tanto nunca será
instanciado. En caso contrario no es abstracto.
MCUN.4) Un CUN abstracto debe poseer relación con al menos un CUN no abstracto.
Artefacto: RN
RN.1) RN: (categoria, definición)
RN.2) categoría: Restricción de Estímulo y Respuesta | Restricción de Operación | Restricción
de Estructura | Derivación de Inferencia | Derivación de Computación
RN.3) Por reglas de Restricción Estímulo y Respuesta, existe una condición y un
comportamiento, si la condición evalúa en verdadera el comportamiento es ejecutado.
RN.4) Por reglas de Restricción de Operación, una operación pertenece a un workflow de un
CUN. Existe una pre condición de dicha operación y existe una pos condición de dicha
operación.
RN.5) Por reglas de Restricción de Estructura, se impone una condición en la estructura y
asociación entre entidades, o en la multiplicidad de la asociación, que debe ser verdadera en
todos los casos.
RN.6) Por reglas de derivación de Inferencia, existe un método que se aplica sobre un estado de
actividad del workflow de un CUN.
5. Conclusiones
Las diferentes etapas por las que deben pasar los ingenieros de software para desarrollar un sistema,
transitan en torno a las funcionalidades identificadas en la etapa de captura de requerimientos, y
refinados en cada iteración. El problema central radica en determinar de manera correcta cuáles son
los requisitos del sistema necesarios para soportar la estructura y dinámica de la organización. El
Modelo de Negocio es la primera etapa que propone el Proceso Unificado para obtener, en forma
preliminar, los requerimientos del sistema que necesita la organización.
A partir del estudio realizado en torno de estos artefactos que componen el modelo de negocio
construimos el modelo genérico, representado gráficamente en términos de UML a través de un
diagrama de clases, que muestra las relaciones entre los artefactos, categorizados como documento,
modelo o elemento de modelo. Este modelo genérico permite visualizar y especificar de manera
precisa, no ambigua y completa los artefactos que componen el modelo de negocio y sus relaciones.
Se puede observar que todos los artefactos del modelo tienen una importante, y por lo tanto
atendible, relación entre ellos. Además, las reglas definidas para cada artefacto identifican las
relaciones entre los mismos y la incidencia que tiene la construcción de un artefacto sobre otro. Para
negocios pequeños o de mediana complejidad, el modelo genérico permite deducir claramente que
bastará con definir los artefactos: MCUN, ON, GN y RN, para construir el modelo de negocio, y la
solución al problema será rápidamente comprendida y entendida por todos los participantes del
proyecto.
Se pretende continuar con el estudio detallado de los artefactos y sus relaciones, con el objeto de
lograr refinar el modelo genérico propuesto, y utilizarlo para luego analizar la evolución hacia el
modelo de casos de uso y a los posteriores modelos. Por otra parte, las reglas propuestas,
actualmente descriptas en lenguaje natural, deben  traducirse a un lenguaje formal para verificar que
las diferentes instanciaciones del modelo genérico son válidas, en el sentido que están bien
construidas, y por lo tanto permiten evolucionar a los siguientes modelos propuestos por el Proceso
Unificado para el desarrollo de software.
6.
