Métodos y herramientas orientados a la calidad del software
﻿
En este trabajo se muestran los resultados 
obtenidos y las actividades en curso de distintas 
líneas de trabajo enfocadas en la calidad del 
software. Entre los resultados se destacan, el 
desarrollo de una aplicación para medir nivel de 
madurez de mejora de procesos, una metodología 
para evaluar el nivel de complejidad de 
aplicaciones orientadas a objetos, un método para 
evaluar la calidad en uso de un producto software 
y la aplicación de técnicas combinadas para la 
elicitación y especificación de requerimientos en el 
desarrollo de aplicaciones web. Se destaca el 
esfuerzo de integración de las unidades académicas 
participantes, como así también, la vinculación con 
las empresas de software nucleadas en los polos 
tecnológicos de la región, en el marco de acciones 
orientadas a la promoción de la industria del 
software en la región NEA.  
Palabras clave: Calidad de software. 
Herramientas de medición de software. Métodos 
de evaluación de calidad de producto y de proceso. 
CONTEXTO 
Las líneas de I/D presentadas forman parte de las 
actividades definidas en el marco del proyecto 
F007-2009: “Modelos y métricas para la 
evaluación de la calidad de software”, acreditado 
por la Secretaría General de Ciencia y Técnica de 
la Universidad Nacional del  Nordeste (UNNE). 
En este proyecto participan tres unidades 
académicas del país. Los integrantes pertenecen a 
la Universidad Tecnológica Nacional Regional 
Resistencia (UTN-FRRe) y a la Facultad de 
Ciencias Exactas de la UNNE, bajo la dirección de 
un docente investigador de la Universidad 
Nacional de Lomas de Zamora (UNLZ). 
El objetivo fundamental del proyecto es contribuir 
a la mejora en la calidad de los productos de 
software mediante modelos y métricas aplicados al 
producto y al proceso de creación, diseño, 
desarrollo y mantenimiento de software, como 
medio para aumentar la competitividad de las 
pymes de la región NEA en el contexto de la 
industria del software. 
1. INTRODUCCION 
A raíz de los avances de la tecnología y de la 
Informática, el software se encuentra inmerso en 
diferentes actividades humanas, y abarca a todos 
los sectores productivos: industriales, 
gubernamentales, comerciales, educación, 
entretenimiento, etc. Dada su transversalidad, 
constituye la base del crecimiento de todas las 
economías modernas, y genera una mayor 
competitividad de la economía.  
En nuestro país, se considera a la industria del 
software como la de mayor crecimiento en los 
últimos años. La CESSI (Cámara de Empresas de 
Software y Servicios Informáticos) señala que 
entre el 2003 y el 2011 las ventas al exterior 
crecieron un 340 por ciento [1]. Por tal motivo, el 
sector SSI (Software y Servicios Informáticos) es 
el primero convocado para los Foros del Plan 
Estratégico 2020, con el propósito de trabajar 
sobre los objetivos del sector de cuadriplicar la 
industria nacional en los próximos ocho años, 
aumentar la disponibilidad de recursos e insertarse 
en otras cadenas productivas con el desarrollo de 
soluciones informáticas. 
El crecimiento del sector se debe en gran medida a 
las políticas públicas de apoyo, entre las que 
destaca la ley de Promoción del Software 
(N°25.922), que otorga beneficios fiscales a las 
empresas exportadoras. Para acceder a estos 
beneficios, las empresas, entre otros requisitos, 
deben certificar calidad. Esta exigencia redundó en 
una mejora en los procesos de desarrollo de 
software, y el posicionamiento de nuestro país en 
el puesto número 11 a nivel mundial en el ranking 
de empresas de software certificadas en calidad, en 
el cual previamente no figuraba. 
Desde los estamentos gubernamentales, se 
reconoce que por primera vez en la historia, la 
información empieza a convertirse en algo con 
valor económico y se busca que la ciencia impacte 
en la economía, para lo cual es primordial elevar el 
valor de los productos de software y servicios 
informáticos, a través de la I+D+i, y aumentar los 
niveles de calidad [2]. 
 
WICC 2012 660
2012 XIV Workshop de Investigadores en Ciencias de la Computación
La mencionada Ley del Software fomenta la 
inserción de un sector mayoritariamente 
compuesto por pymes [1]. En este sentido, en la 
región NEA, particularmente en Chaco y 
Corrientes, se promueve la articulación de 
acciones para promover la industrialización del 
software desarrollado por las empresas locales, que 
se nuclean en dos polos tecnológicos [3]. 
De esta manera, la obtención de certificación de 
calidad y la aplicación de modelos de calidad 
favorecen la mejora continua, establecen procesos 
estándares, reducen costos y promueven la 
eficiencia [4]. 
 
Modelos de calidad de producto software 
Existen diversos modelos y estándares de calidad 
de software referidos al producto. Uno de los más 
conocidos es la norma ISO 9126 [5]. Con la 
evolución de la industria este estándar se dividió 
en dos: El ISO/IEC 9126, relacionado con la 
calidad del producto software y el ISO/IEC 14598, 
relacionado con la evaluación del producto. 
Posteriormente, surge SQuaRE (System Quality 
Requirements and Evaluation), o bien ISO 25000, 
que introduce nuevas formas para analizar los 
conceptos referidos a la calidad y considera que los 
objetivos deben estar alineados, en relación a la 
especificación de todos los requisitos que demanda 
un producto software [6]. 
Ingeniería de Requerimientos 
La Ingeniería de Requerimientos cumple un papel 
primordial en el proceso de desarrollo de software, 
ya que se especializa en la definición del 
comportamiento del sistema, es decir, de lo que se 
desea desarrollar o producir. Su objetivo principal 
es la definición clara, consistente y compacta de 
las especificaciones correctas que definen el 
comportamiento del sistema con el fin de 
minimizar al máximo los problemas que se 
presentan en el desarrollo de software y que tanto 
afectan a la calidad del producto final.  
La captura correcta de los requerimientos 
contribuye a la mejora de la calidad de software 
dado que permite definir con precisión las 
condiciones que éste debe cumplir.  
Trazabilidad de requerimientos web 
La trazabilidad en la Ingeniería de Software es una 
práctica de control que ayuda a obtener el producto 
en el dominio de la solución lo más exacto y fiable 
posible a las necesidades expresadas por el cliente 
en el dominio del problema. La trazabilidad está 
condicionada por los cambios y las validaciones 
que los participantes del proyecto hagan al sistema 
durante el proceso de desarrollo [7]. Según el 
estándar IEEE 830-1998, la trazabilidad es la 
habilidad para seguir la vida de un requerimiento 
en ambos sentidos, hacia sus orígenes o hacia su 
implementación a través de las especificaciones 
generadas durante el proceso de desarrollo. Es un 
factor de calidad. 
En el desarrollo de aplicaciones web, el 
requerimiento está inmerso en un proceso 
de ingeniería más amplio y detallado. La  
existencia de una importante estructura de 
navegación obliga a un desarrollo preciso de este 
aspecto que garantice que el usuario no se “pierda 
en el espacio navegacional del sistema” [8]. Estas 
características particulares requieren atención 
también en la fase de especificación de 
requerimientos [9]. 
NDT (Navigational Development Techniques) [10] 
[11] es una técnica para especificar, analizar y 
diseñar el aspecto de la navegación en aplicaciones 
web. El flujo de especificación de requisitos de 
NDT comienza con la fase de captura de requisitos 
y estudio del entorno, y luego se definen los 
objetivos del sistema. En base a estos objetivos, el 
proceso continúa definiendo los requisitos que el 
sistema debe cumplir para cubrir los objetivos 
marcados. Finalmente, se realiza la revisión del 
catálogo de requisitos y el desarrollo de una matriz 
de trazabilidad que permite evaluar si todos los 
objetivos han sido cubiertos en la especificación. 
Métricas de software orientado a objetos 
En general, las técnicas que más frecuentemente se 
utilizan en el aseguramiento de calidad de 
software, con buenos resultados, se corresponden 
con la medición de software, los procesos de 
revisión y auditoría y las pruebas de software [12]. 
Para garantizar la calidad del software, se necesita 
medir los atributos que la definen. Por lo tanto, se 
requiere  analizar las mediciones con que se evalúa 
la calidad del producto mientras se diseña o 
construye. Estas medidas de atributos internos del 
producto proporcionan a los desarrolladores una 
indicación en tiempo real de la eficacia de los 
modelos de análisis, diseño y código, y también 
aportan indicadores de la efectividad de los casos 
de prueba y la calidad general del software [13].  
Las métricas para aplicaciones Orientadas a 
Objetos  (OO) deben ajustarse a las características 
que distinguen al software de este paradigma del 
software convencional. Estas métricas hacen 
hincapié en los conceptos básicos de la 
programación OO, tales como encapsulamiento, 
herencia y polimorfismo. Los objetivos principales 
de las métricas OO se derivan del software 
convencional: comprender mejor la calidad del 
producto, estimar la efectividad del proceso y 
mejorar la calidad del trabajo realizado a nivel del 
proyecto [14].  
Verificación y Validación. Técnicas de 
evaluación dinámicas 
La creciente complejidad del software conlleva la 
posibilidad de un aumento de fallos y errores 
durante su utilización, que pueden acarrear 
WICC 2012 661
2012 XIV Workshop de Investigadores en Ciencias de la Computación
consecuencias adversas en términos económicos, 
de tiempo o incluso de vidas humanas. Por tanto, 
es necesario incluir actividades de aseguramiento 
de calidad durante el proceso de desarrollo y 
mantenimiento del software. La verificación y 
validación (V&V) contribuyen directamente a la 
calidad del producto de software, dado que 
determinan si los productos de una actividad de 
desarrollo o mantenimiento cumplen los 
requerimientos de esa actividad, y si el producto 
final de software satisface su propósito y los 
requerimientos del usuario. Ambos procesos 
comienzan tempranamente en la fase de desarrollo 
o mantenimiento [15]. 
Estos procesos implican la elaboración de casos de 
prueba, que consisten en un conjunto de entradas, 
condiciones de ejecución y resultados esperados 
para un objetivo particular.  
La prueba exhaustiva del software (exponerlo en 
todas las situaciones posibles), es imposible desde 
todos los puntos de vista: humano, económico e 
incluso matemático. Por lo tanto, fueron creadas 
diversas técnicas de pruebas, que proporcionan 
criterios distintos para generar los casos de prueba. 
Entre ellas se puede mencionar: inspecciones de 
software, pruebas de software de caja blanca y caja 
negra, pruebas de unidad y de integración, pruebas 
de sistemas, de validación y de aceptación [16] 
[17][18]. 
Las pruebas unitarias consisten en la 
comprobación de componentes individuales en el 
sistema, es un proceso de prueba de defectos. La 
palabra “unitaria”, hace referencia a la parte más 
pequeña de un software que se puede probar. Se 
pueden probar funciones individuales o métodos 
dentro de un objeto, clases de objetos, 
componentes compuestos, formados por diferentes 
objetos o funciones. Las pruebas básicamente 
consisten en un conjunto de llamadas a estas 
rutinas con diferentes parámetros de entrada [13]. 
Un test unitario consiste en un pequeño programa 
que instancia clases e invoca métodos de forma 
automática. La forma más fácil de implementarlos 
es usando frameworks de pruebas automatizadas.  
Algunos frameworks utilizados son: JUnit (para 
Java), csUnit, MbUnit, NUnit (para C#, Vb.NET, 
J# y C++), PHPUnit (para PHP), entre otros. JUnit 
es uno de los más populares, es sencillo, fácil de 
usar y es open source [19]. Puede ejecutarse por sí 
solo o incorporado a entornos de desarrollo como 
NetBeans y Eclipse [20]. 
Framework para evaluación de calidad de 
productos 
Desde el año 2011, en el marco del proyecto, se 
trabaja en el desarrollo de un Framework cuyo 
objetivo es  integrar la información de la gestión 
de calidad de un producto software brindando así 
la posibilidad de evidenciar y monitorear los 
esfuerzos del equipo de desarrollo en pos de la 
calidad, permitiendo que tanto el cliente como el 
evaluador de calidad puedan visualizar el proceso 
de gestión de una forma clara y uniforme [21].                      
Para ello se planteó el  desarrollo de un contenedor 
para pequeños componentes reutilizables que 
permitan evaluar alguna característica en 
particular, y que facilite que tanto el equipo de 
desarrollo como el evaluador de calidad puedan 
seleccionar el/los componentes representativos de 
la medición que se desea realizar.  
Por cada característica posible de evaluar se define 
una escala asociada a la misma, con la posibilidad 
de definir a su vez un peso relativo según el 
proyecto.  
Una vez definidas las características, escala y peso 
relativo se elige (o crea) un componente que 
registre y obtenga datos para el análisis de calidad. 
Es decir que se obtendrá información genérica y 
consolidada sobre la calidad del producto 
evaluado. El Framework proveerá diferentes roles 
de usuario: 
- Desarrolladores: Tienen a su cargo el registro 
de información referida al proceso de 
desarrollo y el diseño de las autoevaluaciones 
para monitorear la evolución de la calidad del 
producto. 
- Evaluadores de Calidad: Son los responsables 
de verificar que la información registrada por 
los desarrolladores sea correcta y de realizar 
evaluaciones de calidad propias para analizar la 
evolución del sistema desde su óptica. 
- Clientes: El cliente visualizará la información 
generada por el sistema y tomará decisiones en 
base a la misma. Ante conflictos la decisión 
estará a cargo del cliente. 
Los desarrolladores y el evaluador de calidad 
definen el modelo de evaluación, en función de los 
atributos que se desean medir. 
2. LINEAS DE INVESTIGACION  y 
DESARROLLO 
Las principales líneas del proyecto están orientadas 
hacia el análisis, estudio y discusión de modelos de 
evaluación de calidad, estándares, metodologías y 
herramientas, especialmente enfocadas a la 
aplicabilidad en las pymes de software. 
En particular, se trabaja actualmente en las 
siguientes líneas: 
- Verificación y validación. Estudio de métodos 
y técnicas para probar software. 
- Medición de software. Métodos y herramientas 
para calcular métricas técnicas enfocadas en 
aplicaciones orientadas a objetos. 
- Ingeniería de Requerimientos. Métodos y 
técnicas para la especificación de 
requerimientos en aplicaciones web y para la 
trazabilidad de los mismos. 
Adicionalmente, en forma permanente, se realizan 
actividades para cumplir otros objetivos del 
proyecto: Uno de ellos es la vinculación con el 
sector productivo, compartiendo resultados y 
WICC 2012 662
2012 XIV Workshop de Investigadores en Ciencias de la Computación
fomentando actividades de capacitación, con el 
objetivo de lograr una retroalimentación para 
favorecer el crecimiento del sector y mejorar la 
formación de profesionales de la Informática. En 
este sentido, se propicia la participación de 
alumnos para el desarrollo de becas de 
investigación de pregrado, para el desarrollo de 
trabajos o proyectos que forman parte de las 
exigencias curriculares para obtener la titulación, y 
la orientación de graduados y docentes en etapa de 
tesis de carreras de posgrado vinculadas con la 
Ingeniería de Software.  
 
RESULTADOS OBTENIDOS/ESPERADOS 
En esta etapa del desarrollo del proyecto algunos 
resultados obtenidos fueron:  
 Se elaboró una metodología para la medición 
de atributos de calidad y determinación de 
nivel de complejidad en aplicaciones 
orientadas a objeto desarrolladas en Java [22]. 
 Se realizó un estudio de los estándares de 
evaluación de productos software y la 
evaluación de la calidad en uso de una 
aplicación usada en el entorno académico [23]. 
 Se desarrolló una herramienta web para medir 
el nivel de madurez del proceso de desarrollo 
de proyectos específicos, siguiendo las pautas 
que propone el modelo Competisoft [24]. 
 Se realizó un análisis comparativo de la 
utilización de diferentes técnicas de elicitación 
y especificación de requerimientos, aplicadas a 
un caso de estudio particular, una aplicación 
web del ámbito académico [25]. 
 Se aplicaron técnicas de V&V a una aplicación, 
de  mesa de ayuda para usuarios de un servicio 
de conectividad a Internet, provista por una 
empresa del medio. Se realizaron pruebas 
funcionales utilizando las técnicas propuestas 
en el modelo Competisoft [26]. 
 Se concretaron actividades de vinculación con 
el medio, surgidas de la participación en foros 
de competitividad, programas de extensión de 
las universidades, actividades de capacitación, 
cuyos resultados serán publicados por el 
Núcleo de Estudios e Investigaciones en 
Educación Superior del Sector Educativo del 
MERCOSUR [27]. 
Los trabajos que se encuentran en curso son: 
 Estudio del impacto sobre la calidad en el 
desarrollo de software, en particular sobre la 
Ingeniería de Requerimientos, como resultado 
del proceso de certificación ISO 9001 en 
empresas de software locales. 
 Estudio comparativo de herramientas software 
para el cálculo de métricas de atributos de 
calidad en aplicaciones OO, en aplicaciones 
desarrolladas en PHP y .NET. 
 Desarrollo e implementación de una 
aplicación para la persistencia de las 
mediciones de complejidad de software 
orientadas a la generación de una base de 
conocimientos aplicada al  nivel de desarrollo 
de proyectos específicos. 
 Análisis de métodos y herramientas para  la 
generación automática de casos de prueba, 
orientada a definir una metodología 
transferible a las pymes software. 
 Elaboración de una propuesta metodológica 
para la especificación de requerimientos en el 
desarrollo de aplicaciones web, basada en el 
estándar IEEE 830-1998, las normas ISO/IEC 
15504 e ISO/IEC 12207, la metodología NDT 
y el concepto de trazabilidad aplicado como 
factor de calidad, con el objetivo de contribuir 
a la mejora de la calidad de aplicaciones web.   
 Desarrollo de una herramienta para la 
evaluación genérica de aplicaciones web, 
basada en estándares de calidad de producto 
software. Cada uno de los componentes está 
siendo implementado en la forma de plugins, 
que evalúa una característica en particular y 
entrega al Framework el valor obtenido para 
que éste  evalúe el nivel global de calidad de 
la aplicación.   
3. FORMACION DE RECURSOS 
HUMANOS 
En el último año culminaron su Trabajo Final de 
Aplicación de Sistemas 1 becario TIC y 1 becaria 
de SECYT-UNNE. Actualmente, desarrollan sus 
tareas 2 becarios del programa nacional de 
Becas de Estímulo a las Vocaciones Científicas y 1 
becaria de la Secretaría de Ciencia y Tecnología de 
UTN-Rcia. Inician sus actividades 3 becarios de 
pregrado de la SECYT-UNNE. A nivel de 
posgrado, se avanza en el desarrollo de 3 trabajos 
de Especialización en Ingeniería de Software.  
4.
