Procesamiento digital de imágenes threshold para la detección de objetos
﻿
González, A. Zavala A. 
Proyecto U.N.S.L. - 338403 
Departamento de Informática 
Universidad Nacional de San Luis 
Av. Ejercito de los Andes 950 Local 106 
5700 - San Luis 
Argentina 
e-mail {adelag.azavala}@unsl.edu.ar 
En los sistemas de control de tiempo real, tanto la velocidad de respuesta como la confiabilidad y 
la robustez son todos factores importantes. Si bien existen diversas técnicas en las cuales el 
proceso de threshold es lo suficientemente rápido, es cierto también que dichos métodos 
presentan falencias a la hora de detectar cambios no previstos en la iluminación, por lo cual en 
este proceso se toma menos confiable la separación entre objetos y fondo (background). A 
consecuencia de esto su implementación resulta poco práctica en entornos· en donde es 
imperativa la automatización del proceso de threshold y segmentación, como por ejemplo en 
visión. 
Como una forma de mejorar la segmentación automática realizada por el proceso de threshold y 
agregar robustez y solidez al mismo, se han implementado variaciones a los algoritmos 
propuestos originalmente por [Nalwa] y las variantes de [Frey et all]. En este trabajo las 
imágenes procesadas son a color y fueron tomadas con iluminación directa, con sombras 
parciales y con sombra total; además, las mismas pueden contener múltiples marcas que 
corresponden a los objetos de interés para la detección. Las marcas con las que se 
experimentaron siguen la línea propuesta por Frey, es decir marcas de diferentes tamaños y color. 
Los objetos a detectar son esferas naranjas de aproximadamente 15 cm. de radio y cilindros 
violetas de 1 m de alto aproximadamente, ambos objetos tienen como fondo un campo de cesped. 
La idea general de los algoritmos es encontrar el valor de threshold en cada plano color, para ello 
se hace uso de la IDformación de color de las marcas, permitiendo de esta manera discriminar el 
valor de threshold para cada tipo de objeto. A continuación se bosqueja uno de los algoritmos de 
threshold implementado, el cual consiste básicamente de los siguientes pasos: 
1. Cargar una imagen color. 
2. Descomponer la imagen en sus planos RGB. 
3. Aplicar unfiltro de smooth (suavizado) a cada plano 
4. Calcular diferencia entre planos Green y plano Red para detectar marcas de esferas. 
5. Calcular diferencia entre el plano Green y el plano Blue para detectar marcas de cilindros. 
6. Calcular Histogramas para cada plano. 
7. Realizar threshold en los valles obtenidos a partir del histograma 
Figura 1: Los pasos 2, 3, 4, Y 5 corresponden a cambios propios realizados a la variantes de las 
propuestas de [Frey]. Es de esperar que las esferas aparezcan con mayor intensidad en el plano 
Red del formato RGB, de la misma manera que los cilindros se localicen mejor en el plano Blue. 
Descripción del paso 3: La aplicación del filtro para lograr el suavizado, es del tipo pseudo 
gaussiano y tiene por objetivo la eliminación de las altas frecuencias incorporadas por la 
reflección de la luz del campo. Para el filtrado del plano Blue se empleo la siguiente máscara: 
1/16 1/8 1/16 
1/8 1/4 1/8 
1/16 1/8 1/16 
y para el filtrado del plano Red se empleó un filtro pseudo gaussiano que difiere del anterior 
(sólo considera cuatro vecinos) dado que los objetos que se esperan detectar en este plano son de 
menor tamaño, por lo tanto dejarían la información en pocos pixels y un smooth muy 
pronunciado podría anularlas: 
O 
1/8 
O 
1/8 
1/2 
1/8 
o 
1/8 
O 
Los efectos de la aplicación de este paso se pueden apreciar en la figura 2. 
Descripción de pasos 4 y 5: se realizó una diferenciación sin máscaras en el orden mencionado. 
La idea es resaltar los objetos, se hace uso también de la información de color predominante del 
background. Las figura 3 muestra el valor de threshold encontrado luego de la aplicación de este 
paso a la componente Red de la imagen 1. 
Figura 2: Histograma de la componente Red de la imagen 1 (azul) y la componente suavizada 
(ciruela) 
Figura 3: Histograma correspondiente a la sustracción Red - Green. 
En la imagen 1 (imagen original) se observan la existencia de dos esferas naranjas, una ubicada 
sobre el cesped con uliminación directa y la otra ubicada encima del cilindro en una zona de 
sombra. Notar que a la derecha de dicha imagen aparece un círculo que corresponde a una 
mancha sobre el cesped. La imagen 2 muestra el resultado luego de realizar el algoritmo de la 
figura 1 y aplicar el threshold en el nivel de gris 63. Se detectan 2/2 esferas; los puntos aislados 
que aparecen (falsos positivos) son descartados por tamaño. La imagen 3 muestra el resultado 
luego de realizar el algoritmo de la figura 1 y aplicar el threshold en el nivel de gris 96. Se 
detecta 1/1 cilindro. La otra región que aparece es descartada por tamaño y forma. 
Imagen 1 Imagen 2 Imagen 3 
Conclusiones 
Las rutinas de segmentación, cuyas entradas son las imágenes donde se realizó el threshold 
poseen, además de los pixels correspondientes a las marcas, otros pixels que no pertenecen. Los 
primeros son agrupados en regiones conectadas y los segundos descartados. Aquí es necesario 
usar la información correspondiente al tamaño de las distintos objetos, finalmente estas rutinas 
generan la posición y el tipo de objeto encontrado. 
Se examinaron diferentes grupos de imágenes con los distintos algoritmos implementados. En 
todos los casos se registró el número de veces que las marcas fueron identificadas correctamente. 
Cada uno de los algotimos immlementados poseen sus propias ventajas y desventajas. El éxito 
general de los mismos está basado en la segmentación por color de las imágenes. Imágenes con 
más tipos de objetos, especialmente de diferentes colores, podrían segmentarse con estos, 
algoritmos, no obstante se debería agregar información adicional para detectar los distintos tipos 
de objetos en cada componente. 
