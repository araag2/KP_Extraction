Herramienta de gestión de trazabilidad de requerimientos en proyectos de software
﻿ La trazabilidad en la Ingeniería de Software es una práctica de 
control que contribuye a la construcción de un producto en el dominio de la 
solución lo más fiable y ajustado a las necesidades expresadas por el cliente. Se 
presenta una herramienta que permite administrar proyectos de software y 
realizar el seguimiento de los requerimientos en cada una de las fases de 
desarrollo, destacando la jerarquía que presentan sus relaciones. Además 
permite obtener documentación del proyecto que cumple con el estándar IEEE 
830 e integra la metodología NDT. Como fortalezas de la herramienta se 
destacan la capacidad de seguir el ciclo de vida de un requerimiento, desde el 
origen de la especificación hasta la prueba del mismo, la capacidad de descubrir 
dependencias y conflictos entre requerimientos, y la capacidad de mejorar la 
comprensión del sistema en su totalidad, características que contribuyen a 
facilitar el desarrollo y mantenimiento del mismo. 
Keywords: Ingeniería de Requerimientos. Gestión de proyectos de software. 
Trazabilidad de requerimientos.  
1   Introducción 
La Ingeniería de Requerimientos cumple un papel primordial en el proceso de 
desarrollo de software, ya que se centra en la definición del comportamiento del 
sistema. Su objetivo es la definición clara, consistente y compacta de las 
especificaciones correctas que definen el comportamiento del sistema con el fin de 
minimizar los problemas que se presentan en el desarrollo de software y que afectan a 
la calidad del producto final. La captura correcta de los requerimientos contribuye a la 
calidad del software dado que permite definir con precisión las condiciones que éste 
debe cumplir.  
La trazabilidad en la Ingeniería de Software es una práctica de control que ayuda a 
obtener el producto en el dominio de la solución lo más exacto y fiable posible a las 
necesidades expresadas por el cliente en el dominio del problema. La trazabilidad está 
condicionada por los cambios y las validaciones que los participantes del proyecto 
hagan al sistema durante el proceso de desarrollo [1]. Según el estándar IEEE 8301998, la trazabilidad es la habilidad para seguir la vida de un requerimiento en ambos 
1298
sentidos, hacia sus orígenes o hacia su implementación a través de las 
especificaciones generadas durante el proceso de desarrollo. Es un factor de calidad. 
En el desarrollo de aplicaciones web, el requerimiento está inmerso en un proceso 
de ingeniería más amplio y detallado. La  existencia de una importante estructura de 
navegación obliga a un desarrollo preciso de este aspecto que garantice que el usuario 
no se “pierda en el espacio navegacional del sistema” [2]. Estas características 
particulares requieren atención en la fase de especificación de requerimientos [3]. 
NDT (Navigational Development Techniques) [4][5] es una técnica para 
especificar, analizar y diseñar el aspecto de la navegación en aplicaciones web. 
Comienza con la captura de requerimientos y estudio del entorno, luego se definen los 
objetivos del sistema y en base a ellos se definen los requerimientos que el sistema 
debe cumplir para cubrir los objetivos marcados. Finalmente se desarrolla una matriz 
de trazabilidad que permite evaluar si todos los objetivos han sido cubiertos en la 
especificación. 
Debido a la heterogeneidad de los usuarios de una aplicación web, es necesario 
considerar las necesidades de los diferentes actores implicados en la misma para 
determinar las características que la aplicación debe cumplir para satisfacerlas [6]. 
Aunque en la actualidad existen propuestas para la especificación de requerimientos 
web [7][8], la mayoría sólo proponen un conjunto de guías de diseño informales para 
la derivación manual de modelos conceptuales a partir de los requerimientos [9]. 
La trazabilidad es clave para conseguir una exitosa gestión de requerimientos, sin 
embargo no hay un consenso respecto de las prácticas con el que el proceso de 
trazabilidad debe llevarse a cabo [10].No existen estándares asociados al proceso de 
trazabilidad que ayuden a determinar qué tipos de artefactos y de enlaces considerar. 
Se considera como una medida de la calidad del software y es tenida en cuenta en 
modelos como CMMI (Capability Maturity Model Integration) [11]. 
De acuerdo al INTECO (Instituto Nacional de Tecnologías de la Comunicación) en 
su guía de Gestión de Requisitos, un requerimiento es trazable si se pueden identificar 
todas las partes del producto existente relacionadas con ese requisito [12].  
Todos los requisitos deberían ser trazables para mantener consistencia entre los 
distintos documentos de un proyecto.   
Es importante conocer aspectos de los requisitos tales como:  
 Su origen (Quién los propuso)  
 Necesidad (Por qué existe)  
 Relación con otros requisitos (Dependencias)  
 Relación con otros elementos (Dependencias)  
Para aportar a una mayor sistematización en el desarrollo web, este grupo de 
investigación elaboró una propuesta metodológica para la especificación de 
requerimientos de aplicaciones web, basada principalmente en una plantilla que 
considera lo estipulado por el estándar IEEE 830-1998 e incluye las características 
particulares de los requerimientos web basados en NDT, y elementos trazables para 
facilitar el rastreo de los requerimientos y el impacto de los cambios [13]. 
Como continuación del trabajo anterior, se propuso elaborar una aplicación que 
implemente la propuesta metodológica y permita  facilitar la evaluación del impacto 
de los cambios introducidos, minimizando las incoherencias producidas por el 
incorrecto control de cambios, y favorecer la comunicación entre los stakeholders en 
el desarrollo y mantenimiento del software. 
1299
2   Metodología 
En [13] se propuso una plantilla para especificación de requerimientos, cuyos 
componentes pueden observarse en la figura 1. Presenta características del estándar 
IEEE 830 combinadas con la metodología NDT, reforzando además la trazabilidad de 
los componentes críticos, a través del uso de matrices. Cuenta con información 
concreta y precisa para asegurar calidad desde la trazabilidad, sin perder de vista 
componentes hoy casi imprescindibles en el desarrollo web, como los provistos por 
NDT.   
 
Fig. 1: Plantilla reformulada del estándar IEEE 830 
Como soporte tecnológico de esta plantilla se diseñó una aplicación cuyo modelo se 
especifica en la  figura 2 mediante el diagrama de casos de uso de la aplicación. 
Se consideró la arquitectura cliente servidor, dado que las  tecnologías de hardware, 
software, base de datos y redes contribuyen a arquitecturas de computadoras 
distribuidas y cooperativas.   
La figura 3 muestra  el modelo de datos que presenta dos esquemas de información, lo 
que permite ampliar cada uno de ellos e incluso su reutilización en otros proyectos. 
Por un lado, se presenta el esquema correspondiente a Seguridad, para el tratamiento 
de perfiles, roles, usuarios, y administración de auditorías de información en general. 
Este esquema es el que permite poner disponible  la capa de aplicación al usuario. Por 
otro lado se presenta el modelo propio del dominio del problema. Entre algunas de las 
virtudes que presenta se encuentran, la reutilización de arquitectura en distintos 
proyectos, múltiples matrices por proyectos y la posibilidad de contar con diversos 
planes de pruebas ejecutados sobre un mismo requerimiento. 
 
1300
 
Fig. 2: Diagrama de Casos de uso de la aplicación 
  
Fig. 3: Modelo de datos 
System
Administrar Usuarios
Administrar Perfiles
Asociar modulo
Agregar Usuario
Editar Usuario
Eliminar Usuario
Asignar Perfil
Agregar Perfil
Editar Perfil
Eliminar Perfil
Controlar Acciones
Generar Backup
<<extend>>
<<extend>>
<<extend>>
<<extend>>
Administrar Modulos
Agregar Perfil
Editar Perfil
Eliminar Perfil
<<extend>>
<<extend>>
<<extend>>
<<extend>>
<<extend>>
<<extend>>
<<extend>>
Administrar E. Análisis
Administrar E. Implementación
Administrar E.Prueba
Admnistrar E. Diseño
Adminisrtrar req.
Administrar Proyectos/SRS
Administrar Casos Usos
<<extend>>
<<extend>>
administrar Arquitectura
<<extend>>
Admnistrar Codigo Fuente
<<extend>>
Administrar Caso de Prueba
<<extend>>
Ver Trazabilidad
Administrador
Analistas
Programador
Tester
Diseñador
Generar reporte
<<extend>>
1301
2.1   Descripción de la herramienta 
Pensada para gestionar trazabilidad, la herramienta permite incorporar información 
correspondiente a solicitudes de usuarios desde la primera etapa de un proyecto, como 
así también realizar la gestión de cambios y configuraciones de manera ordenada 
contribuyendo a la liberación de productos con un alto grado de control sobre las 
diferentes versiones de software, siguiendo las recomendación de buenas prácticas en 
Administración de Servicios de TI (ITIL Versión3).  
Contempla todas las etapas del ciclo de desarrollo y contribuye a la comunicación 
entre el equipo de desarrollo y clientes, desde la posibilidad de contar con una 
visualización explícita de las solicitudes realizadas y posteriormente materializadas 
como funcionalidad en un producto.  
Permite establecer las relaciones entre los componentes del software, como por 
ejemplo: cuál es el origen de una especificación de análisis, diagramas construidos en 
cualquier herramienta CASE o similar, casos de pruebas, objetos de código fuente  
(compilado construidos, etc.), de manera que se pueda seguir la vida de un 
requerimiento en ambas direcciones, hacia delante y hacia atrás, es decir, desde su 
origen y especificación hasta su implementación. 
La aplicación se desarrolló utilizando herramientas open source, tales como, 
JavaScript, jQuery,PHP,WAMP, CSS, Aptana Studio 3 (herramienta profesional para 
desarrollo de código abierto para la web), HTML 5, Canvas (nuevo componente de 
HTML 5, que permite dibujar por medio de un API), Firebug y MySQL Workbench. 
La figura 4 muestra la interfaz inicial de la aplicación y las distintas opciones del 
menú principal. 
 
Fig. 4: Interfaz inicial 
El menú de la figura 5 muestra las distintas opciones que ofrece la aplicación. 
1302
 Fig. 5: Opciones de la aplicación 
 
Dentro de la opción 3, SRS-Elementos IEEE 830-1998/NDT, al incorporar un 
proyecto, se ingresan todos los ítems establecidos en la plantilla IEEE reformulada 
para su adecuación a desarrollo de aplicaciones web. La figura 6 muestra la interfaz 
prevista para esta opción.  
 
 
Fig. 6: SRS-Elementos IEEE 830-1998/NDT 
 
Una vez seleccionado el proyecto, se completan los datos requeridos (ver figura 7).  
 
1. Configuración: Permite configurar los módulos 
que conforman las distintas opciones del menú. 
2. Soporte: Permite administrar usuarios, perfiles, 
carpetas de copias y recuperación de información. 
3. Proyectos - SRS-Elementos IEEE 8301998/NDT: Comprende las opciones que 
presentan diferentes aspectos de la información 
generada en el proyecto: 
3.1. SRS-Elementos IEEE 830-1998/NDT: Se 
completan los distintos ítems de la plantilla IEEE 
830-1998/NDT. 
3.2. Tabla de revisión histórica: Permite obtener 
información de auditoría sobre las interacciones 
que han realizado los distintos usuarios.  
3.3. Matriz Solicitud de usuario – Funciones del 
Producto: Permite conocer el origen de las 
funcionalidades del proyecto. 
1 
2 
3 
4 
5 
6 
7 
8 
1303
  
Fig. 7: SRS-Elementos IEEE 830-1998/NDT 
A continuación, se describen los otros componentes del menú principal: 
1304
 
        Fig. 8: Etapa de análisis 
La figura 9 muestra las solicitudes iniciadas y la opción de agregar una solicitud.  
 
Fig. 9: Administración de requerimientos en la etapa de análisis 
También es posible ver los distintos casos de uso, que incluyen una breve 
descripción, facilitando su comprensión (figura 10). 
 
Fig. 10: Casos de uso en la etapa de análisis 
 
4. Etapa de análisis: permite la incorporación 
de diagramas y descripciones sobre 
documentación de análisis, provenientes de 
distintas fuentes y formatos. Las opciones 
ofrecidas se observan en la figura 8, cada una 
genera datos necesarios para la trazabilidad. 
1305
 5. Etapa de diseño: permite la incorporación de 
documentación relacionada a la arquitectura del 
proyecto. 
 
6. Etapa de implementación: permite importar 
objetos construidos para soportar la funcionalidad, 
por ejemplo, asociar un componente compilado o 
incorporar el código. 
 
7. Etapa de testing: corresponde a la vinculación de 
todo elemento construido para la verificación y/o 
validación de un componente de software, en cada 
una de sus etapas. 
 
8. Ver trazas: presenta la información de las 
relaciones generadas en la vida de un 
requerimiento.  
Por ejemplo, para el requerimiento Agregar Alumno, los mecanismos de 
trazabilidad previstos permiten visualizar toda la información relacionada (figura 11). 
 
Fig. 11. Información relacionada al requerimiento Agregar Alumno 
1306
3   Conclusiones  
Se construyó una aplicación web que permite administrar proyectos de software  y 
realizar el seguimiento de los requerimientos en cada una de las fases del desarrollo, 
brindando información sobre el origen de cada cambio que ha sufrido una versión del 
software. 
Como  fortalezas de la herramienta se destacan la capacidad de seguir el ciclo de 
vida de un requerimiento, desde el origen de la especificación hasta la prueba del 
mismo, lo cual permite estimar el impacto de un cambio de requerimiento, la  
capacidad de descubrir dependencias y conflictos entre requerimientos, y la capacidad 
de mejorar la comprensión del sistema en su totalidad, características que contribuyen 
a facilitar el desarrollo y mantenimiento del mismo. 
Como trabajo futuro se plantea validar la herramienta en ambientes de producción 
reales, tales como áreas de Sistemas de las organizaciones o empresas de software, 
para obtener una retroalimentación que permita mejorar la solución que se propone. 
