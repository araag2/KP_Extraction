Una implementación de un sistema de control domótico basada en servicios web
﻿
 
The aim of this project is to show the development of a Domotic System to control differents electrical devices in 
a house either from inside the building or by remote control using the Internet. 
In order to have these two functions available, the system includes a Server that provides Web Services to the 
controlling applications in the house. This Server also offers an interface that uses AJAX to optimize device 
handling. Finally, considerations about how to generate executing turn on/off routines of electrical household 
appliances using machine learning tools are presented 
 
Key Words: Home Automation, domotic, Web Services , AJAX. 
 
 
 
Resumen 
 
El objetivo de este trabajo es presentar una implementación de un Sistema Domótico para controlar diferentes 
dispositivos eléctricos de una vivienda tanto en forma local como así también en forma remota, utilizando una 
conexión a Internet hogareña. Para permitir estos dos puntos de acceso, el sistema incluye un servidor que provee 
servicios  web a las aplicaciones controladoras instaladas en el hogar. Este servidor también ofrece una interfaz 
que utiliza AJAX para optimizar la manipulación de los dispositivos. Finalmente, se presentan consideraciones 
sobre la generación de rutinas ejecutables de encendido y apagado de los electrodomésticos utilizando 
herramientas de aprendizaje automatizado. 
 
Palabras  claves: Automatización del hogar, domótica, Servicios Web , AJAX. 
 
 
 
 
 
 
 
 
 
XIII Congreso Argentino de Ciencias de la Computación
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
 
IV Workshop de Ingeniería de Software y Bases de Datos
_________________________________________________________________________
 
 
608
 1.  INTRODUCCION 
 
 Los sistemas domóticos son sistemas inteligentes para casas y departamentos, que integran y 
controlan áreas tan diversas como las comunicaciones, la informática, la seguridad, la iluminación, 
ambientación climática, y los electrodomésticos,  generando considerables beneficios en lo que a 
confort, seguridad y ahorro de energía se refiere [3,4,5]. Actualmente existen varias empresas que 
se dedican a la implementación de estos sistemas. Dependiendo de cada solución o fabricante, hay 
productos que son controladores, sensores y actuadores al mismo tiempo, ya que en un único equipo 
se dispone de toda la inteligencia necesaria para medir una variable física, procesarla y actuar en 
consecuencia (por ejemplo, un termostato). Sin embargo, la mayoría de las soluciones del mercado, 
sean propietarias o no, se construyen diferenciando los sensores de los actuadores con el objeto de 
aportar mayor flexibilidad y menor precio,  de cara a la instalación e integración en una vivienda.   
 Los servicios Web o Web Services [1,6] son una metodología que permite intercomunicar 
dos sistemas remotos a través de la Web, manteniendo el estado de los objetos en la transferencia. 
En términos generales, un Web Service nos permite ejecutar un método remotamente y recibir su 
resultado como si se tratara de un método local a nuestro sistema. Ellos se basan en ciertos 
protocolos estándar, como SOAP y XML, procurando formalizar la intercomunicación entre 
sistemas. Gracias a esto, es posible comunicar, por ejemplo,  un sistema de ASP.NET ejecutando 
sobre  IIS con uno desarrollado en Java en un Servidor Solaris. 
 AJAX es un acrónimo de Asynchronous JavaScript And XML [9],  una técnica de desarrollo 
web para crear aplicaciones interactivas. Éstas se ejecutan del lado cliente, es decir, en el navegador 
del usuario, y mantiene una comunicación asincrónica con el servidor en segundo plano. De esta 
forma es posible, por ejemplo, realizar cambios visuales sobre la misma página sin necesidad de 
recargarla. Esto significa aumentar la interactividad, velocidad y la usabilidad de la interfaz web. 
 En este trabajo se presenta la implementación de un sistema domótico ControladorActuador, desarrollado utilizando un Servicio Web para lograr el acceso remoto del mismo y AJAX 
en la interfaz del mismo. Con el fin de lograr simplicidad en su instalación, el control de los 
dispositivos a manipular es llevado a cabo mediante comunicación inalámbrica por radiofrecuencia 
como así también comunicación cableada. 
 El trabajo se organiza de la siguiente manera. En la Sección 1 se presenta el escenario 
adoptado y las premisas para el desarrollo. En la Sección 2 se muestran los elementos principales de 
la arquitectura del sistema y la interacción entre ellos. En las secciones subsiguientes se revisan los 
trabajos relacionados y se presentan extensiones al sistema.  
 
2.  ESCENARIO DE DESARROLLO 
 
De acuerdo a las necesidades específicas, un sistema domótico puede ser implementado de 
diversas formas y, como es natural, en base a las funcionalidades y capacidades que el mismo 
brinde,  se determina su costo. En nuestro caso, se hizo mayor hincapié en este último factor y por 
ende el sistema implementado provee una funcionalidad puntual: permite controlar y programar 
remotamente los diferentes dispositivos electrónicos que puedan existir en una vivienda o comercio 
común. Varias premisas son importantes para la arquitectura propuesta:  
• El sistema debe permitir que los dispositivos, además de poder ser controlados localmente, 
puedan ser manipulados remotamente, contribuyendo a la automatización del hogar [7]. 
• El sistema debe permitir la administración centralizada de múltiples viviendas 
independientes entre sí, probablemente de usuarios diferentes. 
• El sistema debe utilizar tecnologías fácilmente asimilables por el público, sin requerir gran 
poder adquisitivo, para facilitar su acceso e implementación. 
En función de estas premisas iniciales, la arquitectura propuesta  requiere un servidor Web 
que centraliza las viviendas a controlar y provee la funcionalidad necesaria para administrar los 
XIII Congreso Argentino de Ciencias de la Computación
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
 
IV Workshop de Ingeniería de Software y Bases de Datos
_________________________________________________________________________
 
 
609
 dispositivos remotamente. Se requiere, además, una computadora en la vivienda que se conecta con 
los dispositivos controlables (lámparas, televisor, etc). Para simplificar la implementación de la 
aplicación hogareña, ésta no requiere un número de IP fijo, por lo que la aplicación hogareña 
actuará exclusivamente como cliente del servidor Web. De esta manera el usuario no requiere más 
que un común acceso a Internet.  En la Figura 1 se representa esquemáticamente  la arquitectura 
simplificada. 
Figura 1. Componentes principales de la arquitectura 
 
La computadora instalada en la vivienda (PC Hogar en la Figura 1) permite controlar, por 
medio de una interfaz adecuada, los dispositivos conectados a ella. Es el controlador in-situ de una 
vivienda individual. El servidor externo, a su vez, posee la misma funcionalidad con el fin de poder 
ser accedido remotamente. Es el controlador remoto de varias viviendas administradas por usuarios.  
Esta implementación obliga a disponer de dos bases de datos, una general con la 
información de todos los usuarios que utilicen este servicio, ubicada en el servidor Web, y otra base 
de datos local, almacenada en la pc local del usuario con la información referida a su casa 
solamente.  
Esta doble funcionalidad en la vivienda y en el servidor es deseable desde el punto de vista 
de la accesibilidad, pero requiere un esfuerzo adicional ante ciertos requerimientos básicos, como 
mantener la consistencia entre la base de datos ubicada en el servidor y la base de datos alojada 
localmente. Para ello es necesario desarrollar un protocolo de sincronización que permita mantener 
las dos bases de datos actualizadas antes los cambios que ocurran desde cualquiera de los dos lados.  
Para implementar ese protocolo se utiliza un web service, que permite que la casa pueda 
indagar la base de datos del servidor. Es importante destacar también un beneficio de esta 
duplicación: más allá del problema de mantener la consistencia de la base de datos, el sistema 
otorga la comodidad de manejar los dispositivos de la casa sin contar necesariamente con una 
conexión a Internet. En este caso, las modificaciones se hacen localmente y luego, cuando se 
disponga de la conexión, se actualizan las dos bases de datos acordemente. 
El hardware utilizado para comunicar la aplicación de la computadora in-situ con los 
dispositivos se conecta por el puerto paralelo.  Las órdenes del puerto hacia el destinatario final (los 
elementos eléctricos a controlar) pueden ser enviadas tanto en forma cableada como así también en 
forma inalámbrica por radiofrecuencia, facilitando así la tarea de instalación del sistema en una 
vivienda. Este aparato que interconecta la computadora del hogar con los dispositivos fué 
desarrollado y construido por los autores y su estructura es explicada más adelante. 
En la siguiente sección se describe más detalladamente las funcionalidades que disponen el 
software, el modo de operación  y el hardware implementado en esta ocasión. 
 
 
 
 
 
XIII Congreso Argentino de Ciencias de la Computación
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
 
IV Workshop de Ingeniería de Software y Bases de Datos
_________________________________________________________________________
 
 
610
 3. COMPONENTES DE LA APLICACION  
 
 El sistema desarrollado está constituido por diversos participantes. Entre ellos se encuentran 
el Software de Diseño de Interfaz de la Vivienda, el Software de Control de los Dispositivos 
(Aplicación Local) y la Aplicación Web para Control de los Dispositivos (Aplicación Remota) . 
3.1  Software de Diseño de Interfaz de la Vivienda 
 
Esta aplicación provee las herramientas necesarias para crear una interfaz gráfica adecuada 
para representar la vivienda de  manera personalizada. Aquí el usuario podrá seleccionar los 
ambientes que componen su casa. Cada uno de ellos va a estar representado por un nombre y una 
imagen significativa del mismo, y a su vez ir ubicando en ellos los dispositivos que componen un 
ambiente y se deseen manipular. En vistas de la extendibilidad, esta aplicación le da al cliente la 
posibilidad de ingresar posteriormente nuevos ambientes y dispositivos, como así también la 
capacidad de editarlos o eliminarlos. En esta etapa el dueño de la casa definirá un nombre de 
usuario y una contraseña los cuales serán empleados para iniciar sesiones futuras antes posibles 
cambios en el diseño de la casa o en sesiones de la aplicación local o remota. Una vez que el 
usuario termine de diseñar su vivienda, los cambios se verán reflejados tanto en la base de datos del 
servidor como en la base de datos local.  En la Figura 2 se muestra una captura de pantalla de una 
casa ya configurada. La disposición de las habitaciones y los elementos incluidos en ellas 
(lámparas, televisores, radios, etc) son completamente configurables. La aplicación también permite 
configurar dispositivos exteriores, como las luces de entrada o los regadores del jardín. El objetivo 
esencial de esta aplicación es la facilidad de uso en vistas a usuarios no experimentados. 
3.2 Software de Control de Dispositivos 
 
La función de ésta aplicación es proveer acceso a los diferentes componentes modelados 
visualmente en la fase de Diseño de Interfaz.  Aquí el usuario podrá alterar el estado real de los 
dispositivos, como apagar o prender una luz, el televisor, activar los sensores perimetrales o el 
alimentador de mascotas. Puede también ingresar rutinas pre-programadas especificando los 
dispositivos involucrados, el estado que van a tener al momento de ejecutarse la rutina y el periodo 
de ejecución de la misma (una vez al día, una vez a la semana, etc). Estas rutinas permiten simular 
movimiento si el usuario está fuera de la casa o planificar tareas como el riego del jardín. Una vez 
más, cualquier cambio reflejado aquí, (cambio de estado de un dispositivo o ingreso, modificación 
de alguna rutina), se verá reflejado tanto en la base de datos local como también en la base de datos 
remota, la que está ubicada en el servido Web.  
 
 
 
 
 
 
 
 
 
 
 
 
 
Figura 2. Interfaz para el control de los dispositivos 
XIII Congreso Argentino de Ciencias de la Computación
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
 
IV Workshop de Ingeniería de Software y Bases de Datos
_________________________________________________________________________
 
 
611
 3.3 Aplicación Web para Control de los Dispositivos 
 
Mediante la aplicación web los usuarios del sistema podrán iniciar una sesión y realizar las 
mismas tareas que puede ejecutar con la aplicación anterior. Esto es: encendido y apagado de los 
distintos dispositivos como así también ingreso, modificación y eliminación de las rutinas 
preprogramadas.  Cabe destacar que la sesión en la Web va a poder ser iniciada únicamente cuando 
el programa anterior (Control De Dispositivos) esté conectado al servidor, es decir que la 
computadora in-situ disponga conexión a Internet activa y la aplicación se esté ejecutando. Esta 
restricción es naturalmente necesaria para la interacción entre el hogar y el servidor. De lo 
contrario, podría ocurrir que remotamente se intente cambiar el estado de un dispositivo hogareño 
cuando es imposible que la orden llegue a los mismos. Un aspecto importante a remarcar es que las 
acciones indicadas remotamente por medio de esta aplicación web no son comunicadas a la 
computadora del hogar, sino que es ésta quien indaga al servidor sobre los cambios requeridos. Esta 
comunicación unidireccional es explicada en la siguiente sección 
 
4. FUNCIONAMIENTO DEL SISTEMA 
 
  El funcionamiento del sistema se basa en dos tipos de comunicaciones para lograr 
consistencia de las base de datos y así reflejar los eventos realizados en los distintos participantes 
del sistema (Aplicación local y Aplicación Web). Deben considerarse los dos extremos como 
iniciadores de eventos de modificación: una de estas comunicaciones se da cuando desde la 
aplicación local se altera el estado de los dispositivos y la otra cuando por medio del sitio web se 
demandan esos cambios. 
  En el caso de que los cambios se produzcan desde la aplicación local, ya sea sobre los 
dispositivos o sobre alguna rutina, se recolecta información de este suceso y se envía hacia el 
servidor en forma inmediata.  Para ello se utiliza un servicio web [6], el cual realiza la actualización 
sobre la base de datos del servidor. Posteriormente  el cambio se refleja en la base de datos local y a 
continuación el dispositivo o rutina especificada cambian su estado.  En la Figura 3 se muestran los 
pasos generales de este proceso. En los casos que el usuario no disponga de conexión a Internet o 
no le interese por el momento que las modificaciones también sean reflejadas en el servidor, los 
cambios son solo aplicados en la base de datos local y luego reflejados en los dispositivos reales 
(apagar una luz, encender el sistema de riego, etc). Esto genera una pequeña inconsistencia 
momentánea con la base de datos del servidor, pero la sincronización postergada se inicia 
inmediatamente cuando la aplicación vuelve a poseer conexión con el servidor de la aplicación web.  
  De esta manera el uso local del sistema  no se ve perjudicado ante cualquier problema que 
ocurra con el proveedor de Internet (a veces frecuentes) u algún otro motivo que inhabilite la 
comunicación entre las dos partes. 
 
Figura 3. Cambios desde la computadora del hogar. 
 
XIII Congreso Argentino de Ciencias de la Computación
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
 
IV Workshop de Ingeniería de Software y Bases de Datos
_________________________________________________________________________
 
 
612
   Para el caso de que los cambios se realicen desde la página web, hay leves diferencias, 
principalmente porque el sitio web no se comunica con la aplicación local que está corriendo en la 
computadora de la casa del usuario. De hecho, la aplicación local es la que se comunica con la 
aplicación web  y esta particularidad es la que permite que el usuario no necesariamente tenga un 
número de IP público para su salida a Internet, pudiendo el sistema ser utilizado desde una red 
privada. El acceso unidireccional es además seguro y simple para un hogar promedio. En la Figura 
4 se muestran los pasos generales de este proceso. Al momento en que el usuario decide modificar 
remotamente (vía la aplicación web) el estado de algún dispositivo o modificar la configuración de  
alguna rutina, éste cambio se registra únicamente en el servidor. La aplicación local realiza 
periódicamente una consulta al servidor, el cual implementa un servicio web indicando  si hubo 
cambios registrados en su propia base de datos.  
 
 
   
Figura 4. Cambios desde el servidor web 
 
  Esta consulta periódica por parte de la aplicación se resuelve por intermedio de dos hilos de 
ejecución, denominados HiloControlDispositivos e HiloControlRutinas, 
respectivamente. El primero controla si hubo cambios en los estados de los dispositivos, y el 
segundo controla acciones relacionadas a la manipulación de las rutinas. En el caso puntual del 
HiloControlDispositivos, éste solamente solicita un servicio web que devuelve un vector 
con los identificadores de los dispositivos que están activos en la base de datos del servidor. Luego 
se activan los dispositivos que están en este vector y se deshabilita el resto, se hacen las 
modificaciones correspondientes sobre la base de datos local y luego sobre los dispositivos reales a 
través del puerto paralelo. Para determinar si se realizaron cambios en las rutinas, el 
HiloControlRutinas solicita un servicio web que le retorna un vector con las rutinas activas 
(formado por los identificadores de rutinas activas), y un indicador para controlar si se han 
ingresado remotamente nuevas rutinas y/o si se modificaron parámetros de rutinas existentes. En 
este último caso, si se hubieren ingresado o modificado rutinas, el hilo ejecuta un nuevo servicio 
Web solicitando información correspondiente a las nuevas rutinas ingresadas o modificadas según 
corresponda. Estas modificaciones o rutinas nuevas son cargadas en la base de datos local y luego 
se procede a activar aquellas rutinas indicadas por el servicio web y desactivar aquellas que no están 
en el vector devuelto por éste.  En la Figura 5 se muestra esta interacción entre el cliente y el 
servidor. 
  Los procedimientos descriptos anteriormente se repiten periódicamente. El parámetro que 
indica el período de actualización  puede ser configurado por  el usuario. Básicamente, un valor 
bajo permite visualizar los cambios realizados desde la página en forma mas rápida pero con la 
desventaja de que la cantidad de requerimientos a los servicios web  se incrementa. Un valor alto, 
en cambio, disminuye la carga en las comunicaciones pero prolonga el período de potencial 
inconsistencia en las bases de datos. 
XIII Congreso Argentino de Ciencias de la Computación
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
 
IV Workshop de Ingeniería de Software y Bases de Datos
_________________________________________________________________________
 
 
613
  
 
Figura 5. Hilos de Control de Dispositivos y Rutinas 
 
4.1 Interfaz visual de comandos de dispositivos del hogar 
 
  La utilización del sistema desde la Web es intuitivo al hacer uso de la técnica AJAX [9],   
que permitió brindar una apariencia similar al uso de la aplicación ubicada en la casa. Teniendo en 
cuenta la interfaz utilizada donde varias imágenes muestran los ambientes y los dispositivos 
instalados en la casa (como indicado en la Figura 2), el refresco parcial de la página mejora 
notablemente la utilización del sistema. Debido a que un dispositivo encendido tiene una imagen 
diferente a un dispositivo apagado, al momento de realizar una acción sobre el dispositivo, la 
actualización de sólo la pequeña imagen asociada al dispositivo seleccionado (mostrar la imagen de 
encendido o apagado) brinda una mayor performance cuando usamos el sistema desde la web. El 
mismo efecto se pudo lograr para el caso de ingresar o editar rutinas preprogramadas, toda la carga 
de las opciones de selección, que se realizan obteniendo datos desde la base de datos, al utilizar 
AJAX se mejora la usabilidad, ya que a medida que se van seleccionando las opciones solo se van 
refrescando los controles correspondientes y no toda la página como ocurriría si se hubiese 
respetado una  implementación clásica. En la Figura 5 puede verse esquemáticamente la interacción 
principal en este escenario. Existen dos niveles de comunicación del cliente al servidor, marcados 
con flechas de diferente color. La flecha verde denota un envío de comandos de manipulación de 
dispositivos. Esto sucede cuando el usuario realiza algún click sobre las áreas de representación de 
dispositivos (marcadas con rectángulos rojos en la interfaz). Las flechas de color rojo indican una 
interacción AJAX periódica que examina el estado de la casa para reflejarlo visualmente en la 
interfaz. Esta interacción está actualmente en desarrollo y evita la necesidad de refrescar la página 
completa. Al momento de escribir este trabajo los cambios en la interfaz son realizados con 
anterioridad a la comunicación con el servidor. Es más adecuado, sin embargo, mantener un 
intercambio asincrónico de datos con el servidor para reflejar el estado de la vivienda y sus 
dispositivos.  
 
XIII Congreso Argentino de Ciencias de la Computación
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
 
IV Workshop de Ingeniería de Software y Bases de Datos
_________________________________________________________________________
 
 
614
  
Figura 5. Interfaz visual y AJAX 
 
  
4.2 Implementación y testeo de la aplicación 
 
  La implementación del sistema se realizó íntegramente en la tecnología .NET, en vistas de 
obtener un prototipo rápidamente. Tanto la Aplicación de Control de Dispositivos como la 
Aplicación de Diseño de Interfaz para construir la vivienda fueron realizadas con WinForms 
utilizando C#. Para la aplicación Web se utilizó ASP y el Code Behind en C#, lo mismo para los 
Web Services. En cuanto al servidor de base de datos se utilizó SQLServerExpress. Los requisitos 
para la ejecución de este sistema son sólo los requerimientos que tiene el Framework .NET 2.0 y 
SQLServerExpress.  En el aspecto de seguridad, la contraseña del usuario se mantiene encriptada 
tanto en la base de datos local como así también en la remota, mediante el algoritmo de encriptación 
provisto por el servidor de base de datos. 
  En cuanto a la implementación del Hardware se implementaron dos modalidades 
consideradas útiles y necesarias en un hogar promedio: una vía de comunicación cableada y otra 
inalámbrica. Esta última brinda una mayor facilidad de instalación para ciertos dispositivos que no 
son fácilmente trasladables en una habitación. Esta implementación utiliza el módulo transmisor 
TWS-434 y el módulo receptor RWS-434. Ambos son muy simples de utilizar, su tamaño es muy 
reducido y con ellos se pueden realizar controles remotos de Radio Frecuencia (RF) a 433.92 Mhz 
dentro del espectro electromagnético. La modulación en la que se basan es del tipo ASK y pueden 
ser usados también en otras aplicaciones.   
  El principio de funcionamiento del hardware desarrollado para la arquitectura propuesta es 
muy simple. Al intentar cambiar el estado de uno o más  dispositivos, se envía al puerto paralelo el 
código correspondiente a la combinación de dispositivos que se pretende mantener activados y 
desactivados. Por ejemplo,   
 
 00000001 significa “activado sólo el dispositivo vinculado a la salida 0 del puerto paralelo”. 
 00000101 significa “activado los dispositivos asociados a la salida 0 y 2 del puerto paralelo”.  
   
  Luego la salida del puerto alimentará la entrada de un codificador, el cual generará a su vez 
la entrada del emisor TWS-434 para su posterior transmisión. Una vez transmitida, la señal será 
captada por el receptor RWS-434, el cual enviará a un decodificador la señal captada para que este 
se encargue de convertirla en un código similar al emitido por el puerto paralelo. A ese codificador 
estarán conectados los relés que están asociados a los dispositivos, que actuarán como un 
XIII Congreso Argentino de Ciencias de la Computación
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
 
IV Workshop de Ingeniería de Software y Bases de Datos
_________________________________________________________________________
 
 
615
 interruptor permitiendo el paso de corriente eléctrica, activando o desactivando los dispositivos 
correspondientes. La opción cableada no pasa por el emisor. Simplemente, con los datos tomados 
desde el puerto paralelo, activa los relés correspondientes y estos dejan pasar o interrumpen la 
corriente para el dispositivo en cuestión, al cual se llega específicamente con un cable que va desde 
la computadora del hogar. 
  Se evaluó el correcto funcionamiento de la aplicación en su totalidad, esto es, aplicación  
Web y aplicación de control. Se puso especial énfasis en la conservación de la consistencia de la 
base de datos local con la ubicada en el servidor, como así también el hecho de que los métodos 
brindados por los Web Services tengan un tiempo de respuesta corto. Esta prueba se realizó en 
horas de mucha carga en la red y el resultado fue satisfactorio. Las base de datos se mantenían 
inconsistentes por muy poco tiempo (de acuerdo a la configuración de intervalos apropiados 
mencionados en la Sección 4) y el tráfico generado por los constantes pedidos por parte de la 
aplicación no influyó en la performance de la red.  Se testeó también que las rutinas 
preprogramadas se ejecuten adecuadamente y al finalizar su ejecución se actualicen para la próxima 
vez que deban actuar, tanto las realizadas en la propia casa como las creadas desde la página Web. 
  Otro punto interesante que se evaluó es la frecuencia con la que se solicitan los métodos 
brindados por el Web Service. Se dejó establecido un parámetro para regular dicha frecuencia. Estas 
solicitudes son las encargadas de indicarle a la aplicación de control que hay cambios en la casa 
desde el servidor; en caso de tener una conexión de baja velocidad es apropiado disminuir la 
frecuencia aplicándole un valor alto al tiempo entre cada solicitud de cambios. En pruebas donde 
quedaba poco ancho de banda disponible, un valor entre 25 y 30 segundos es admisible. En aquellos 
casos en los que se pueda hacer un mayor uso del ancho de banda es mejor establecer frecuencias de 
control altas, es decir, un bajo tiempo entre solicitudes. Esto da una mayor tasa de refresco en las 
bases de datos permitiendo actualizaciones mas rápidas. 
  Finalmente otro punto importante que se evaluó en el período de prueba es el alcance para el 
manejo de dispositivos en forma inalámbrica. Se llegó a alcanzar 70 metros en el interior de una 
casa  con varios obstáculos en el camino (paredes y puertas)  y varias pruebas realizadas en el 
interior de un edificio dieron un alcance de cuatro pisos con tiempos de respuestas aceptables. Esto 
demuestra que los componentes de hardware desarrollados no son muy relevantes en la 
performance global del sistema, dándole mayor protagonismo a la actividad general de la red. 
 
 
5 EXTENSIONES 
 
 Algunas extensiones planificadas, pero  no implementadas en esta instancia, son sumamente   
interesantes. La primera guarda relación con las rutinas y pretende dotar de cierta inteligencia al 
sistema. 
 
Generación automática de rutinas 
 
Nuestra aplicación permite la definición de rutinas de encendido y apagado de los 
dispositivos del hogar. La configuración de estas rutinas puede hacerse tanto localmente como en 
forma remota, como ha sido descripto anteriormente. Sin embargo, el sistema bien podría observar 
el ciclo de vida de varios dispositivos durante un período de tiempo razonable de actividad normal 
en el hogar y generar en forma automática rutinas que permiten simular estas actividades. Por 
ejemplo, la luz exterior de la puerta de entrada de una casa suele usarse únicamente a la noche y el 
uso del televisor es más común en los períodos denominados prime-time. En la habitación de un 
adolescente, el  reproductor de música puede que nunca se utilice a la mañana muy temprano pero sí 
en horarios nocturnos. Esto por supuesto depende de las rutinas diarias de la familia o del dueño de 
casa, y sin duda presentará pequeñas variaciones de un día a otro. Pero en términos generales la 
XIII Congreso Argentino de Ciencias de la Computación
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
 
IV Workshop de Ingeniería de Software y Bases de Datos
_________________________________________________________________________
 
 
616
 utilización de los electrodomésticos y otros aparatos eléctricos del hogar siguen cierto patrón con el 
correr de los meses.  Puede incluirse un módulo de Aprendizaje para la Generación de Rutinas.  
Existe un trabajo previo realizado, en el cual se desarrolló una aplicación que precisamente 
se basa en buscar distintos patrones en una base de datos e indicar posibles resultados ante 
determinados eventos.  Esto es lo que se denomina Data Mining o Minería de Datos.  
Esta aplicación se adapta a cualquier tipo de problema o inquietud que se quiera conocer por 
este proceso de patrones. Particularmente fue desarrollada en Java y se utilizaron las librerías de 
Weka [10], para resolver las búsquedas de distintos patrones en la Base de Datos. Weka es una 
colección de algoritmos de aprendizaje automatizado para tareas de Data Mining. Estos algoritmos 
pueden ser aplicados directamente al conjunto de datos o pueden ser llamados desde su propio 
código Java. Weka contiene herramientas para el pre-procesamiento de datos, clasificación, 
clusterizacion, reglas de asociación y visualización, y es además una buena herramienta para el 
desarrollo de nuevos esquemas de aprendizaje automatizado. 
La integración de esta aplicación se puede resolver fácilmente si cada acción sobre algún 
dispositivo es almacenada en una base de datos o archivo de log.  Se precisar conocer el dispositivo 
accionado y el día y hora del evento, tanto para las acciones realizadas manualmente como también 
para aquellas accionadas desde la computadora del usuario. Una vez que tenemos el log generado se 
puede invocar a esta aplicación basada en Weka para que determine, dado un dispositivo o una lista 
de éstos, en qué momentos fueron accionados generalmente.  Luego, en base a una búsqueda en el 
log descripto anteriormente, se determina en qué horarios se realiza comúnmente esta acción, 
sugiriendo de esta manera o proponiendo una rutina con esos dispositivos y en ese horario. El 
mismo caso puede ser pensado en el otro sentido, determinar por ejemplo qué dispositivos son 
accionados en determinada hora durante los días de semana.  
Se podría integrar esta funcionalidad por intermedio de un Web Service, que debería 
encargarse de la lógica para interpretar el resultado de la aplicación de Data Mining y lo traduzca al 
formato entendido por la aplicación que controla los dispositivos. Este Web Service podría ser 
consultado cada cierto periodo, como por ejemplo una vez a la semana o una vez al mes. Luego los 
resultados de este servicio se le muestran al usuario como sugerencias de posibles rutinas que 
podría agregar al sistema cuya acción corresponde con lo que el usuario realiza diariamente. 
Este módulo pertenece a la aplicación local y para su funcionamiento requiere 
indefectiblemente la capacidad de poder detectar y recolectar el estado real de los dispositivos. La 
implementación obtenida hasta el momento sólo envía instrucciones hacia los dispositivos, pero no 
detecta en forma autónoma y directa el estado actual de éstos. La idea es que el puerto paralelo se 
use en forma bidireccional y de esta forma se puede realizar un monitoreo de los dispositivos que se 
accionan manualmente. Las aplicaciones de software fueron diseñadas y organizadas pensando en 
estas expansiones. 
 
Manipulación telefónica de los dispositivos 
 
  Otra extensión considerada para una etapa posterior es la posibilidad de controlar la casa por 
intermedio del teléfono, ya sea la conexión fija de la casa o por intermedio de un teléfono celular 
que disponga de acceso a Internet.  Para la primera posibilidad, es posible añadir en paralelo a la 
línea telefónica un módulo DTMF, el cual permite la decodificación de los tonos que emite un 
teléfono, actúa de contestador cuando no hay nadie en la casa, y una vez que atiende la llamada, se 
queda escuchando instrucciones por un tiempo determinado. Las instrucciones le son enviadas 
presionando los distintos números del teléfono de quien realizó la llamada y de esta forma se puede 
dejar asociado cada número para realizar ciertas actividades preestablecidas. Esta implementación 
es muy práctica ya que con solo realizar una llamada al teléfono de la casa se puede tener control de 
sus dispositivos. La otra posibilidad que se está considerando actualmente es permitir el acceso al 
control de la casa por intermedio de un teléfono celular con acceso a Internet. El funcionamiento 
XIII Congreso Argentino de Ciencias de la Computación
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
 
IV Workshop de Ingeniería de Software y Bases de Datos
_________________________________________________________________________
 
 
617
 básicamente consiste en publicar una versión WAP del servidor que ofrezca los mismos servicios 
que dispone la aplicación que se maneja en la casa.  
 
6  TRABAJOS RELACIONADOS 
 
Varios autores proponen soluciones domóticas enfocadas en aspectos puntuales. En este 
trabajo el énfasis es puesto en la universalidad de las tecnologías elegidas en vistas a la facilidad de 
uso e implementación. Un trabajo interesante es realizado por Marco Aiello [1], donde detalla  
distintos escenarios en los que se han desarrollado sistemas domóticos. De acuerdo a la 
clasificación dada por Aiello,  nuestra implementación es una instancia del Escenario Domótico S3 
(open-server hierarchy) , brindando muy buena heterogeneidad  y una aceptable escalabilidad. El 
único riesgo de este escenario es que al ser centralizado puede volverse un cuello de botella la 
utilización de los servicios web.  Es importante destacar que nuestra implementación también 
admite un uso fuera de línea (offline) de los beneficios del control de dispositivos, por lo que 
también corresponde a un Escenario Domótico S1 según indicado en [1]. Otro trabajo relevante es 
el realizado por Araujo et al [5], en el cual se propone una implementación para el manejo de 
dispositivos de manera inalámbrica. El sistema realizado por nosotros presenta similitudes con el 
Radio–Hotel mencionado en [5]: el aire acondicionado de la habitación es encendido o apagado 
manualmente pero también se permite cambiar el estado desde la Recepción del Hotel. Nuestro 
sistema puede funcionar perfectamente en una Intranet, con o sin servidor central.  Una diferencia 
importante es que la propuesta de Araujo et al captura el estado de los dispositivos o sensores y 
actúa automáticamente de acuerdo al estado que se devuelva en la lectura, algo ausente en nuestra 
propuesta dado el costo de algunos sensores. También Vittorio Miori et al desarrollaron un trabajo 
[3], en el cual plantean la utilización de Web Services como forma de inter-relacionar diferentes 
protocolos de comunicación o diferentes tipos de redes. En ese trabajo se propone que un 
administrador interprete el resultado del servicio web y se lo transmita a la arquitectura subyacente.  
Nuestro trabajo, al utilizar servicios web, se adapta perfectamente a esta propuesta, ya que es 
posible manejar dispositivos que utilicen JINI o Komex, creando el controlador correspondiente sin 
ninguna otra modificación al sistema centralizado.   En [4] Bonino y Garbo presentan una 
interesante aplicación de control de dispositivos para ser utilizada por personas con discapacidades 
motrices. Puede manipularse por medio del movimiento de los ojos o la cabeza, siendo ésta su 
principal característica que rige el diseño general. Lo interesante en relación a nuestro trabajo es que  
contempla la interoperabilidad con diferentes redes domóticas existentes, como Bticino MyHome 
[8]. 
 
7  CONCLUSIONES 
Los sistemas domóticos son sistemas inteligentes para casas y departamentos, que integran y 
controlan las comunicaciones, la seguridad, ambientación climática, y los electrodomésticos. Esto 
genera beneficios en cuanto a  confort, seguridad y ahorro de energía. En este trabajo se presentó la 
implementación de un sistema de control de dispositivos hogareños utilizando servicios web y una 
conexión a Internet doméstica tradicional.  Los dispositivos puede conectarse a una computadora en 
la vivienda y ser manipulados y programados in situ, o remotamente accediendo a un servidor web.  
La interfaz visual de este acceso remoto está implementada utilizando AJAX para optimizar 
la operatoria general.  La arquitectura basada en servicios web permite la independencia entre la 
aplicación local que controla los dispositivos del hogar y el servidor que permite el acceso remoto.  
Para la conexión física de los dispositivos, se construyó un módulo de hardware al cual se le 
conecta la salida del puerto paralelo y en su interior posee relés para manejar aquellos dispositivos 
que se encuentren cerca de la computadora de forma cableada, y también contiene el emisor con el 
respectivo codificador para el encendido o apagado de los dispositivos inalámbricos. 
XIII Congreso Argentino de Ciencias de la Computación
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
 
IV Workshop de Ingeniería de Software y Bases de Datos
_________________________________________________________________________
 
 
618
  REFERENCIAS
