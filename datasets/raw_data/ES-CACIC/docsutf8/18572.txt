Algoritmos evolutivos aplicados al diseño inteligente de parques eólicos
﻿En este documento se muestran dos tipos de algoritmos metaheurísticos aplicados al diseño inteligente de un parque eólico, la idea básica es utilizar
CHC y algoritmos genéticos para obtener una buena configuración de molinos
dentro del parque de tal manera que maximicen la energía total producida y minimicen la cantidad de molinos utilizados. En este trabajo analizaremos dos casos
de estudios con una distribución real de vientos de la patagonia argentina, un
terreno irregular con restricciones y aplicaremos ambos algoritmos para finalmente mostrar las configuraciones obtenidas, la energía generada, la eficiencia
del parque en su conjunto y los tiempos de ejecución de cada algoritmo.
Palabras Claves: CHC, Algoritmos Genéticos, Optimización, Energía Eólica, Metaheurísticas.
1. Introducción
Hoy en día el uso de energías renovables está creciendo en todas partes del mundo,
ya que es una fuente de obtención de energía no contaminante e inagotable. El propósito
más interesante es tratar de obtener la mayor cantidad de energía a un costo razonable,
sabiendo que el parque eólico es un conjunto de molinos o aerogeneradores que se
disponen estrategicamente para aprovechar al máximo el viento disponible en la zona.
Uno de los objetivos perseguidos en este campo y el que se tratará de obtener en este
trabajo es la disposición óptima de los molinos en el parque eólico ya que un molino
recibe menos viento que otro, por lo tanto menor energía podrá capturar, si se encuentra
detrás de él y muy próximo. Este efecto es conocido como el efecto estela [1], dicho
efecto debe reducirse optimizando la geometría del parque y respetando los criterios de
distancia de los molinos con respecto a sus adyacentes horizontales o verticales.
Diferentes algoritmos como Simulated Annealing o Algoritmos Geneticos Distribuidos se han utilizado en trabajos anteriores para resolver estos tipos de problemas
CACIC 2011 - XVII CONGRESO  ARGENTINO DE CIENCIAS DE LA COMPUTACIÓN 11
[2][3]. También hemos utilizado Simulated Annealing y CHC con terrenos irregulares
y distribución real de vientos[4][5] En este caso aplicaremos otras técnicas que han dado buenos resultados en problemas de RND (Radio Network Design) como CHC [6]
y Algoritmos Genéticos[7]. Para estos dos algoritmos resolveremos los casos de estudios que se plantean y realizaremos una comparación entre ambos para obtener dstintas
conclusiones.
El resto del artículo se divide de la siguiente manera: en la sección 2 se explicará el
modelo de estela utilizado, así como los modelos de potencia, modelo de costo y función objetivo del problema,en la sección 3 se comentará la distribución real de vientos
utilizada para el modelo, en la sección 4 se explicarán los algoritmos CHC y algoritmo
genético y como fueron adaptados al problema de optimización en el parque eólico,
en la sección 5 se mostrarán los experimentos realizados para los casos de estudios
propuestos y en la sección 6 las conclusiones y trabajos futuros.
2. Modelado del Parque Eólico
En esta sección se explicarán el modelos de estela utilizado, el modelos de potencia,
y el modelo de costo. También se mostrarán las representaciones usadas para modelar
el problema y la función objetivo asociada.
2.1. Modelo de Estela
El modelo de estela utilizado fue propuesto por Katic [6], este modelo calcula el
viento perdido para un molino que se encuentra detrás de otro y en sus proximidades.
La velocidad de viento perdida por este efecto se calcula como en la ecuación 1, donde
U0 es la velocidad real en el parque, Ux es la velocidad que existe a una distancia X, Ct
es el coeficiente de arrastre del molino, D es el diámetro del rotor del molino y k es una
constante propia del fenómeno de la estela.
dV = U0 − Ux = U0.
1−
√
1− Ct
( 1+2kXD )
2
(1)
2.2. Modelo de Potencia
El modelo de potencia describe como se comporta el molino en función del viento
incidente en él, de esta manera se calcula la potencia generada. En este trabajo se utiliza
el modelo Gamesa G47, donde Ux es el viento incidente en el molino.
CACIC 2011 - XVII CONGRESO  ARGENTINO DE CIENCIAS DE LA COMPUTACIÓN 12
Pi(kW ) =



0 para Ux < 4m/s,
0,3U3x para 4m/s ≤ Ux ≤ 16m/s,
700 para 16m/s ≤ Ux ≤ 25m/s,
0 para 25m/s < Ux
(2)
La potencia total generada en el parque eólico es la suma de las potencias individuales de cada molino como muestra la ecuación 3, donde N es el número de molinos
en el parque.
Ptot =
N∑
i=1
Pi (3)
2.3. Modelo de Costo
En nuestro trabajo solo el número de molinos influye en el costo asociado. El costo
total de la instalación del parque eólico se expresa mediante la ecuación 4, donde costgy
representa el costo del aerogenerador y su valor en este trabajo es de e 730,000. Se han
considerado tres tipos de costos, el costo de instalación e 800 por KhW instalado, e
80,000 por costo de instalación en la zona de alta capacidad portante (35 % menos en
la zona de baja capacidad portante) y e 90,000 el costo del molino.
costtot = costgy.N(2/3 + 1/3.e
−0,00174N2). (4)
2.4. Representación de los molinos en el Parque Eólico
El parque eólico lo dividimos en varias celdas y lo tratamos como una matriz. Cada
celda puede tener dos estados, un 1 si contiene un molino o un 0 si esta vacía. En este
caso de una matriz de 10×10 se utilizó un arreglo binario de 100 elementos de longitud
para modelar por completo el parque. Cada celda tiene como lados una distancia de 5D
equivalente a cinco diámetros del rotor del molino (47m para Gamesa G47), dando una
dimensión real de 50D×50D. Los 5D garantizan la regla del espacio mínimo que debe
existir entre los molinos en forma vertical y horizontal para que el efecto estela tenga la
mínima incidencia en el viento que le llega a cada molino.
2.5. Función Objetivo
La función objetivo que queremos maximizar es la producción anual de energía
producida por el parque eólico, la misma está definida en la ecuación 5[7], donde st es
el precio en e tomado del mercado por cada KWh de energía eléctrica producida, cuyo
CACIC 2011 - XVII CONGRESO  ARGENTINO DE CIENCIAS DE LA COMPUTACIÓN 13
valor en este trabajo es de 0,1 e /KWh, Ptot es la potencia total producida por el parque
eólico en un año dado por la ecuacion 8 y costtot es el costo de instalación del parque
eólico dado por la ecuación 4.
Ea =
[
st− (
costtot
Ptot
)
]
Ptot ±G(x) (5)
La función penalidad G(x)depende del número de turbinas que se encuentren en
la zona de penalización, en este caso penalizamos al fitness con la expresión 6, donde
k es la cantidad de turbinas dentro de la zona prohibida y q es la cantidad de lugares
prohibidos dentro del campo eólico.
G(x) = (
k
q
) ∗ profit (6)
3. Distribución de Vientos de Comodoro Rivadavia
En esta sección introducimos la distribución de datos reales de la ciudad de Comodoro Rivadavia del año 2010. La distribución de Weibull es la distribución más utilizada
en la caracterización del viento; para ello se necesita de un conjunto de velocidades de
viento cada 15 minutos durante un año para obtener los histogramas correspondientes, y
poder calcular los parámetros c y k de la distribución mediante un proceso de regresión
simple. La probabilidad de ocurrencia de un viento v se calcula mediante la fórmula 7:
p(v) = (k/c)(v/c)k−1 × e(v/c)
k
, (7)
En este proceso hemos obtenido k = 1,44 y c = 7,4, y un 98% del coeficiente
de correlación necesarios para calcular las diferentes probabilidades de los vientos mediante la fórmula 7. La energía anual producida por cada turbina se calcula mediante
la expresión 8, donde a y b son las velocidades de inicio y corte del molino, T es el
número de horas del año (8760), p(v) es la probabilidad de ocurrencia del viento v y
Pj es la potencia obtenida por el molino j con el viento v. Solo se considerará viento
proveniente del oeste debido a que en la zona predomina esa dirección.
Ptot = T ×
N∑
j=1
∫ b
a
Pj(v)× pj(v)dx, (8)
4. Algoritmos Utilizados
En esta sección se explicarán los algoritmos que se han utilizado para resolver el
problema de optimización de energía en el parque eólico, se detallarán las estructuras
de los algoritmos y los parámetros utilizados.
CACIC 2011 - XVII CONGRESO  ARGENTINO DE CIENCIAS DE LA COMPUTACIÓN 14
4.1. CHC
El algoritmo CHC se diseño para trabajar con poblaciones codificadas como cadenas binarias. CHC es un tipo de algoritmo que no emplea mutación para producir nuevas
soluciones sino un mecanismo de cruce llamado HUX. La selección de los individuos
para completar la siguiente generación se realiza bajo un criterio elitista entre padres e
hijos, es decir que se conservan las mejores soluciones que formarán parte de la nueva
población, y en el momento que se genere un estancamiento en la población se produce
un reinicio de la misma. La población tiende a homogeneizarse debido a la ausencia
de mutación y el criterio elitista ya que no hay diversidad, para resolver este problema
CHC implementa un mecanismo de prevención de incesto, es decir que se seleccionan
los padres al azar pero el cruce se efectua si los individuos no son demasiados parecidos o sea que la distancia de Hamming entre ellos es superior a un determinado umbral
llamado umbral de incesto. A medida que avanza la evolución de la población, cada vez
menos individuos cumplen la condición de no incesto por lo que es necesario reducir el
umbral. Cada vez que no haya cambios en la población pasada una iteración, el umbral
se reduce en uno. El pseudocódigo de nuestro algoritmo es el siguiente:
Algoritmo 1 CHC
1: t← 0; /* contador de evaluaciones */
2: inicializar(Pa,Distancia) /*Inicializa la población y las distancias
3: mientras no hay criterio de parada(t, Pa) hacer
4: Padres← seleccion(Pa); /* Seleccionar padres */
5: Hijos← HUX(Padres) /* Cruce HUX */
6: evaluar(Pa,Hijos) /*evaluar los hijos*/
7: Pa← elitismo(hijos, Pa)
8: si Pa no Cambio entonces
9: distancia← distancia− 1;
10: si distancia == 0 entonces
11: resetear(Pa)
12: inicializar(distancia)
13: fin si
14: fin si
15: t← t + 1 /* Una evaluación más */
16: fin mientras
17: Retornar: mejor solucion encontrada.
El cruce utilizado en este algoritmo es el HUX (Heterogeneous Uniform Crossover),
que trata de copiar a los hijos los bits comunes de los padres y la mitad de los bits
no comunes asignárselo a cada hijo de manera tal que la distancia de Hamming sea
máxima, se genera una máscara con los bits comunes a partir de los dos padres y los
bits no comunes se asignan aleatoriamente a cada hijo teniendo en cuenta que cada uno
de ellos debe tomar la mitad de los bits no comunes, generando dos nuevos hijos.
CACIC 2011 - XVII CONGRESO  ARGENTINO DE CIENCIAS DE LA COMPUTACIÓN 15
4.2. Algorítmos Genéticos
Los Algorítmos genéticos son técnicas estocasticas utilizadas en la optimización
combinatoria, búsqueda y aprendizaje automático [9]. Están inspiradas en la teoría de
evolución de Charles Darwin, en donde se expone que los individuos tienen una determinada adaptación en el medio donde viven, y los mejores adaptados tienen mayor
probabilidad de transmitir sus genes a las generaciones siguientes. Ésta misma teoría
es aplicada para los algorítmos genéticos que parten de poblaciones de individuos, generalmente aleatorias, y las hace evolucionar sometiendolas a acciones probabilísticas
similares a la de la evolución biológica (mutaciones y recombinaciones genéticas), asi
como un mecanismo de selección para elegir que individuos podrán participar en dichas
variaciones para generar nuevos individuos, que conformarán las siguientes generaciones. El Pseudocódigo de un AG se muestra en el algoritmo 2.
Algoritmo 2 Algoritmo Genético
1: t← 0; /* contador de iteraciones */
2: inicializar(Pa) /*Inicializa la población
3: mientras no hay criterio de parada(t, Pa) hacer
4: Padres← seleccion(Pa); /* Seleccionar padres */
5: Hijos← reproduccion(Padres) /* Cruce HUX */
6: mutacion(Hijos) /*mutar los hijos*/
7: evaluar(Hijos) /*evaluar los hijos*/
8: nuevaGeneracio = reemplazo(Pa,Hijos)/*reemplazo la población por la actual */
9: t← t + 1 /* Una iteración más */
10: fin mientras
11: Retornar: mejor solucion encontrada.
Los parámetros utilizados para el algoritmo genético y para CHC se muestran en la
tabla 1:
Tabla 1. Parámetros utilizados en ambos algoritmos
Descripción AG CHC
Tamaño de la población 128 128
Tipo de cruce 2 puntos HUX
probabilidad de cruce 0.8 %
probabilidad de mutación 0.01 %
Selección de padres Torneo 3 individuos Aleatoria con umbral de incesto
Selección de nueva generación Elitista Elitista
Población preservada 5 % 5 %
Umbral de incesto inicial 25 % del tamaño de la instancia
Valor de convergencia K 1
CACIC 2011 - XVII CONGRESO  ARGENTINO DE CIENCIAS DE LA COMPUTACIÓN 16
5. Experimentos Realizados
Para este trabajo plantearemos dos casos de estudios, en todos ellos consideraremos
el viento con una dirección constante(proveniente del oeste) con la distribución real de
vientos. El primero caso se considerará el terreno irregular con igual valor de costos de
cimentación para todos los puntos factibles y el segundo escenario se disminuirán en
un 35 % los costos de cimentación de algunos lugares, ambos escenarios se muestran
en la fig. 1. Para ambos se obtendrán las configuraciones de parque para cada caso con
el valor de fitness asociado, desviación estandar del fitness, potencia generada, cantidad
de molinos a utilizar, eficiencia del parque y el tiempo del algoritmo y el número de
evaluaciones necesarias para encontrar la mejor solución. El algoritmo se ejecuta treinta
veces de manera independiente con un criterio de parada de 5,000,000 de evaluaciones,
todos los casos han sido ejecutado en un Intel Pentium 2xQuadCore de 2 GHZ cada
uno y para la implementación se ha utilizado la librería de optimización Mallba [10].
Figura 1. Escenario a y b para el problema
5.1. Caso (a):Terreno Irregular con alta capacidad portante
Para este caso se han ejecutado los dos algoritmos CHC y AG con los parámetros
mostrados en la tabla 1 y obtuvimos la siguiente configuración del parque así como los
siguientes valores que se muestran en la tabla 2
La configuración del parque encontrada por ambos algoritmos es la que muestra la
Fig. 2, como se puede ver todos los molinos se alinean en filas respetando las distancias
entre ellos y en el mismo sentido que la dirección del viento. En este caso CHC en
promedio obtuvo mejor fitness, potencia y eficiencia del parque, pero a costa de mayor
número de evaluaciones y mayor tiempo que en este caso éste último no es significativo.
GA obtuvo valores muy similares en esos casos, pero en mayor evaluaciones y con más
tiempo.
CACIC 2011 - XVII CONGRESO  ARGENTINO DE CIENCIAS DE LA COMPUTACIÓN 17
Tabla 2. Resultados del case (a)
Descripción CHC GA
Fitness Promedio (e ) 2125660(± 152584,8) 2100800 (± 239926,4)
Potencia Promedio (KWH) 9205, 13 9132,89
Eficiencia Promedio ( %) 52, 6 52,1
Numero de Molinos (N) 25 25
Tiempo de Ejecución Promedio (s) 62,54 97, 15
Evaluación Promedio de la Mejor Solución 260711 856147
Figura 2. Configuración del parque para ambos algoritmos
Se han realizado estudios estadisticos de los tiempos y el fitness, para el tiempo
promedio se calculo el p-value con el test Kruskal-Wallis y es existe diferencia significativa de CHC con respecto a GA, por lo tanto se concluye que CHC es más rápido para
encontrar la solución. Para el caso del fitness no se encuentran diferencias significativas
por lo tanto se concluye que las medias son iguales.
5.2. Caso (b):Terreno Irregular con baja capacidad portante
Para este caso se han ejecutado los dos algoritmos CHC y GA con los parámetros
mostrados en la tabla 1 y obtuvimos la siguiente configuración del parque así como los
siguientes valores que se muestran en la tabla 3
La configuración del parque encontrada por ambos algoritmos es la que muestra la
Fig. 3, como se puede ver los molinos más cercanos a la zona de capacidad portante
se han desplazado hacia ella siempre que se respete la distancia entre ellos, es por
ello ambos obtuvieron mayor fitness que el caso anterior debido al menor costo de
cimentación, la potencia y eficiencia promedio del parque es equivalente dado a que el
costo de instalación no afecta a la potencia generada, pero CHC lo hizo nuevamente
en menor número de evaluaciones y menor tiempo. GA a diferencia del caso anterior
necesitó más evaluaciones y por ende mayor tiempo.
Se han realizado estudios estadisticos de los tiempos y el fitness, para el tiempo
promedio se calculo el p-value con el test Kruskal-Wallis y es existe diferencia signifiCACIC 2011 - XVII CONGRESO  ARGENTINO DE CIENCIAS DE LA COMPUTACIÓN 18
Tabla 3. Resultados del case (b)
Descripción CHC GA
Fitness Promedio (e ) 2517660(± 141583,7) 2436800 (± 221258,7)
Potencia Promedio (KWH) 9205,13 9132,89
Eficiencia Promedio ( %) 52,6 52,1
Numero de Molinos (N) 25 25
Tiempo de Ejecución Promedio (s) 66,23 95,11
Evaluación Promedio de la Mejor Solución 275141 862598
Figura 3. Configuración del parque para ambos algoritmos
cativa de CHC con respecto a GA, por lo tanto se concluye que CHC es más rápido para
encontrar la solución. Para el caso del fitness no se encuentran diferencias significativas
por lo tanto se concluye que las medias son iguales.
6. Conclusiones y Trabajos Futuros
Hemos resuelto los casos propuestos con dos algoritmos muy competitivos como
lo son CHC y GA. En todos los casos se han conseguido buenas soluciones difiriendo
básicamente en el número de evaluaciones y el tiempo empleado para encontrar dicha
solución. En el primero caso se obtuvieron las mismas configuraciones en ambos casos
pero CHC lo hizo en menos tiempo y en menos número de evaluaciones. En el segundo caso vemos como las soluciones buscan la zona de menor costo para aumentar el
fitness, siempre respetando las distancia entre ellos. CHC mostro ventajas con respecto
al tiempo y número de evaluaciones necesarias, coincidiendo en los demás parámetros
con GA. Como trabajo futuro proponemos escalar el problema a instancias más grandes, mejorando el modelo matemático incorporando más la influencia del terreno como
así distintas características de los molinos. Tambíen en un futuro se podrá plantear el
problema como multiobjetivo ya que tenemos dos variables como la potencia y el costo
que son contrapuestos.
CACIC 2011 - XVII CONGRESO  ARGENTINO DE CIENCIAS DE LA COMPUTACIÓN 19
7. Agradecimientos
Proyecto UNPA-29/B105, Universidad Nacional de la Patagonia Austral, Argentina.
Proyecto DIRICOM No P07-TIC-03044 y Proyecto M* No TIN2008-06491-C04-01,
Universidad de Málaga, España. M. Bilbao agradece la cooperación de la Universidad
de Málaga por proveer ideas y críticas constructivas a nuestros trabajos, así como a la
Universidad Nacional de la Patagonia Austral y a la Agencia Nacional de Promoción
Científica y Tecnológica (ANPCYT) por la beca doctoral recibida.
