Usando NDT como soporte a la enseñanza de programación web
﻿ Se presentan los resultados de la implementación de una metodología 
de enseñanza de programación para la plataforma web que utiliza la 
metodología NDT, llevada a cabo en una asignatura de tercer año de la carrera 
Licenciatura en Sistemas de Información de la Universidad Nacional del 
Nordeste (UNNE). Esta estrategia surge con el objetivo de afianzar en los 
alumnos el valor de las buenas prácticas que exige la Ingeniería del Software 
para lograr desarrollos y soluciones cada vez más completas y robustas.  El 
proceso de aseguramiento de calidad tiene como misión principal garantizar 
todos los requisitos de calidad establecidos. Para ello, los controles de calidad 
no deben aplicarse únicamente al código generado, sino que además deben 
recorrer elementos como los requerimientos, tanto funcionales como no 
funcionales, que contribuyen a generar conciencia de la importancia que tiene la 
documentación en el desarrollo de software.   
Keywords: Enseñanza universitaria, programación web, NDT, documentación. 
1 Introducción 
A pesar de los esfuerzos orientados a la creación de metodologías de desarrollo para 
la web, el uso sistemático de estas técnicas para la especificación y el diseño de estas 
aplicaciones no ha resuelto el problema de la producción. Por este motivo, los 
expertos en tecnologías web han realizado diferentes propuestas para mejorar la 
calidad de los sitios y aplicaciones web, en forma de metodologías, marcos de 
calidad, modelos de estimación, guías de estilos y métricas [1]. 
Las metodologías de desarrollo de software son un conjunto de procedimientos, 
técnicas, herramientas y un soporte documental que ayuda a los desarrolladores a 
realizar un producto software. Un caso particular, lo constituyen las metodologías 
orientadas al desarrollo web. Por sus características, estas requieren una mayor 
atención en la definición de los requerimientos funcionales y no funcionales, y dentro 
de estos últimos, a los requerimientos de almacenamiento y  de navegabilidad.  
En un estudio previo [2], se realizó una comparación de metodologías web, 
analizando en particular el grado de cobertura de las distintas etapas de desarrollo. De 
las metodologías estudiadas, únicamente NDT cuenta con soporte para todas las 
etapas del ciclo de vida.  
Por este motivo, se eligió esta metodología de desarrollo de aplicaciones web, para 
ser utilizada en la enseñanza de la programación de aplicaciones web, con el objetivo 
de afianzar en los alumnos el valor de las buenas prácticas que exige la Ingeniería del 
Software para lograr desarrollos y soluciones cada vez más completas y robustas. 
1631
2 NDT  
NDT (Navigational Development Techniques) es una metodología para especificar, 
analizar y diseñar el aspecto de la navegación en aplicaciones web  [3][4]. El flujo de 
especificación de requerimientos de NDT comienza con la fase de captura de 
requerimientos y estudio del entorno, y luego se definen los objetivos del sistema. En 
base a estos objetivos, el proceso continúa definiendo los requerimientos que el 
sistema debe cumplir para cubrir los objetivos marcados. Finalmente, se realiza la 
revisión del catálogo de requerimientos y el desarrollo de una matriz de trazabilidad 
que permite evaluar si todos los objetivos han sido cubiertos en la especificación. En 
la Fig. 1 se muestra una descripción general de las actividades de NDT.  
 
Figura 1. Descripción general de las actividades de NDT 
2.1 Modelo de Requisitos 
NDT es un enfoque específicamente creado para el manejo de requisitos de 
aplicaciones web [6]. Propone el uso de diagramas de casos de usos y varios tipos de 
plantillas de formato (patrones). Clasifica los requisitos en los siguientes tipos: de 
información de almacenamiento, de actores, funcionales, de interacción y requisitos 
no funcionales. Para cada tipo,  se define una plantilla especial, consistente en una 
tabla con campos de texto específicos que son completados por el equipo de 
desarrollo en la fase de elicitación de requisitos. 
2.2 Descripción de la herramienta: NDT-SUITE 
NDT-Tools, el soporte de herramientas de la metodología NDT, ha tenido que 
evolucionar para ser una propuesta útil en proyectos reales, dado que sólo cubría las 
fases de ingeniería de requisitos y análisis [7] [8]. Estas razones impulsaron al Grupo 
de Investigación Ingeniería Web y Testing Temprano [5] a elaborar NDT-Suite. Esta nueva 
herramienta soporta las fases de requisitos, análisis, diseño, construcción e 
1632
implantación, pruebas y mantenimiento. NDT-Suite está integrada por los diversos 
componentes, entre ellos, NDT-Profile, NDT-Quality y NDT-Driver. 
NDT-Profile es una herramienta diseñada sobre un perfil definido, en base a los 
metamodelos de NDT, sobre la herramienta Enterprise Architect. El profile (perfil) 
sobre Enterprise ofrece una serie de herramientas y definición de artefactos propios 
para trabajar con la metodología NDT permitiendo una sencilla gestión de 
documentación.  
Las fases de desarrollo incluidas en el proyecto se identifican por las siguientes 
siglas: 
- EVS: documento del estudio de viabilidad del sistema.  
- DRS: documento de requisitos del sistema.  
- DAS: documento de análisis de sistema.  
- DDS: documento de diseño del sistema.  
- DPS: documento de plan de pruebas del sistema.  
- DMS: documento de mantenimiento del sistema.  
Además, se introduce una serie información adicional sobre el proyecto: 
Participantes: se describen las empresas y personas que participarán en el proyecto, 
Control de Versiones: se describen las diferentes líneas bases, y Objetivos del 
Proyecto: se describen los objetivos a cumplir en el proyecto.  
3 Metodología  
3.1 Descripción 
La asignatura Taller de Programación I, de la carrera Licenciatura en Sistemas de 
Información, tiene como objetivo profundizar el estudio de herramientas de desarrollo 
de software orientadas a la plataforma web mediante la programación de aplicaciones.  
Busca ofrecer al alumno una visión amplia de las tecnologías utilizadas en el 
desarrollo de aplicaciones web, partiendo desde el diseño de páginas estáticas y de las 
tecnologías orientadas a la presentación (CSS, JavaScript), repasando tecnologías de 
cliente para mostrar luego tecnologías de programación para servidores, completando 
el recorrido con una visión general de acceso a base de datos. 
En este proceso se pretende consolidar en el alumno las competencias requeridas 
para un analista programador, tales como el modelado y los métodos y herramientas 
para la especificación, diseño, implementación y evaluación de aplicaciones 
informáticas. 
Esta asignatura contribuye específicamente a la formación del Analista 
Programador Universitario, título intermedio de la carrera, cuyo perfil comprende el 
desarrollo, modificación y mantenimiento de aplicaciones informáticas, mediante la 
utilización de herramientas de desarrollo de uso generalizado en el mercado laboral. 
Por tanto, se espera que el alumno adquiera destrezas en programación mediante 
una intensa tarea de desarrollo siguiendo todas las etapas conceptuales de un proyecto 
de software, desde su especificación hasta su verificación y validación, incorporando 
además las buenas prácticas que exige la Ingeniería del Software para lograr 
desarrollos y soluciones cada vez más completas y robustas, haciendo énfasis en la 
documentación. 
Para cumplir con este objetivo, se planteó la utilización de la metodología NDT 
enmarcada en el paradigma de Ingeniería Web guiada por modelos [7]. 
1633
El eje del trabajo de la asignatura lo constituye el desarrollo individual de una 
aplicación web sencilla pero completa, que incluya todos los componentes necesarios: 
modelado de la aplicación, diseño gráfico y de contenidos, gestor de base de datos, 
tecnologías de programación en cliente y en servidor. 
Cabe aclarar que, paralelamente al dictado de esta asignatura, los alumnos cursan 
la asignatura Ingeniería de Software I, con la cual se articulan conceptos, entre ellos, 
las técnicas de elicitación de requerimientos.  
Para lograr los objetivos propuestos se realizaron las siguientes actividades: 
1. Repaso de las técnicas de elicitación de requerimientos. Estas técnicas que se 
muestran en la Tabla 1, forman parte de los contenidos de la asignatura Ingeniería 
de Software I por tanto el repaso consistió en una breve reseña de las principales 
características de cada una de ellas para que los alumnos las tuvieran en cuenta 
para al especificar los requerimientos de su aplicación.  
 
Tabla 1. Detalle de técnicas de elicitación de requerimientos 
Fases Actividades Técnicas 
In
g
en
ie
rí
a
 d
e 
R
eq
u
is
it
o
s 
Obtener información sobre el 
entorno y definir objetivos 
Entrevistas 
JAD 
Brainstorming 
Revisiones y búsqueda de información  
Cuestionarios 
Concept mapping 
Patrón para la definición de objetivos 
Identificar y definir los requisitos de 
almacenamiento de información 
Patrón para la definición de requisitos de 
almacenamiento de información. 
Patrón para la definición de las nuevas 
naturalezas 
Identificar y definir los actores 
Patrón para la definición de actores básicos 
Diagramas de representación de actores 
generalizados 
Matriz para la definición de 
incompatibilidad de actores 
Matriz para la definición de actores 
generalizados 
Identificar y definir los requisitos 
funcionales 
Diagramas de casos de uso 
Patrón para la definición de los requisitos 
funcionales 
Identificar y definir los requisitos 
de interacción 
Patrón para la definición de frases 
Patrón para la definición de prototipos de 
visualización 
Identificar y definir los requisitos no 
funcionales 
Patrón para la definición de requisitos no 
funcionales 
2. Capacitación en la metodología NDT. Se presentó a los alumnos la metodología 
de desarrollo NDT y se les instruyó en el uso de la herramienta NDT SUITE, que 
implementa dicha metodología. 
3. Consignas para el desarrollo de una aplicación web. Se propuso a los alumnos el 
desarrollo de una aplicación web con la mayor cantidad de funcionalidades 
posibles. En primer lugar debían realizar la especificación de requerimientos de su 
1634
aplicación web utilizando los patrones aportados por la metodología NDT o el 
estándar IEEE 830-1998. 
4. Definición de la primera instancia evaluativa: Esta consistió en la elaboración y 
entrega de la especificación de requerimientos de la aplicación a desarrollar. 
5. Definición de la segunda instancia evaluativa: Consistió en completar el desarrollo 
de la aplicación, incorporando el acceso a una base de datos, entregando el 
producto final junto con su documentación. La utilización de la herramienta NDT 
Suite, se propuso en forma optativa. 
6. Análisis de los trabajos presentados por los alumnos. Se analizaron 17 trabajos de 
los alumnos que utilizaron la metodología NDT, con el objetivo de evaluar el 
grado de aplicación de la metodología. 
7. Encuesta de satisfacción a los alumnos. Se realizó una encuesta on line con la 
herramienta GoogleDocs, destinado a recabar la percepción de los alumnos 
respecto a la metodología de desarrollo propuesta. 
8. Elaboración de Conclusiones 
3.2 Análisis de los trabajos 
De la primera instancia evaluativa se analizó el uso de las técnicas de elicitación 
utilizadas, cuya frecuencia de uso se muestra en la Tabla 2. 
 
Tabla 2. Frecuencia de uso de técnicas de elicitación de requerimientos 
Fases Actividades Técnicas 
Nº de 
casos 
% 
In
g
en
ie
rí
a
 d
e 
R
eq
u
is
it
o
s 
Obtener información 
sobre el entorno y definir 
objetivos 
 
Revisiones y búsqueda de información 
anterior 
2 11,76% 
Patrón para la definición de objetivos 15 88,23% 
Identificar y definir los 
requisitos de 
almacenamiento de 
información 
Patrón para la definición de requisitos 
de almacenamiento de 
información 
12 70,58% 
Patrón para la definición de las nuevas 
naturalezas 
4 23,5% 
Identificar y definir los 
actores 
Patrón para la definición de actores 
básicos 
 
4 
23,5% 
Diagramas de representación de actores 
generalizados 
13 76,47% 
Identificar y definir los 
requisitos funcionales 
Diagramas de casos de uso 
 
13 
 
76,47% 
Patrón para la definición de los 
requisitos funcionales 
7 41,17% 
Identificar y definir los 
requisitos 
de interacción 
Patrón para la definición de frases 3 17,64% 
Identificar y definir los 
requisitos no 
funcionales 
Patrón para la definición de requisitos 
no funcionales 
2 11,76% 
Se observó la utilización de: 
- Patrones de definición de objetivos: la mayoría (88%) de los alumnos utilizó 
esta técnica, la cual resulta especialmente útil para la comunicación con el 
usuario. 
1635
- Patrón para la definición de requisitos de almacenamiento de información: el 
70,58 % de los alumnos lo utilizó, permitiendo la correcta definición de la 
estructura de la base de datos, que facilita la implementación. 
- Diagramas de casos de uso y diagramas de representación de actores: 76,47 % 
Las demás características proporcionadas por la herramienta no fueron 
aprovechadas. 
En esta primera instancia de evaluación se pudo observar que la mayoría de los 
alumnos utilizó las características básicas de la herramienta. 
Desde la percepción de los docentes de la asignatura el cumplimiento de la 
consigna no implicó mayor dificultad para los alumnos. 
En la segunda etapa evaluativa, de acuerdo a los productos entregados y sus 
respectivas documentaciones generadas por la herramienta NDT-SUITE, se 
analizaron diferentes aspectos de la metodología: 
a) Tipos de requerimientos: la Tabla 3 muestra los tipos de requerimientos 
especificados en cada uno de los trabajos. 
Tabla 3. Tipos de requerimientos especificados 
Tipos de 
Requerimientos 
Trabajos de los alumnos 
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 
Almacenamiento 
de datos 
D D I I D D D D D ND D D D D D ND D 
De actores D D I D ND D D D D D D D D D D D D 
Funcionales D D I I D D D D D ND D D D D D D D 
De interacción ND I ND ND ND ND ND ND ND ND D ND D ND ND ND ND 
No funcionales ND ND ND ND ND ND ND ND ND D ND ND ND ND D ND D 
 D Definidos 
 ND No Definidos 
 I Incompletos 
Se observa que la mayoría pudo definir los requerimientos de almacenamiento, de 
actores y los funcionales.  
Muy pocos definieron los requerimientos de interacción, como así también, muy 
pocos especificaron los requerimientos no funcionales. 
b) Información adicional sobre el proyecto. En la Tabla 4 se muestran los distintos 
ítems de información adicional que fueron utilizados por los alumnos. 
 
Tabla 4. Información adicional del proyecto. 
Información 
adicional 
1 2 3 4 5 6 7 8 9 
1
0 
1
1 
1
2 
1
3 
1
4 
1
5 
1
6 
1
7 
Participantes D D D D D D D D D 
N
D 
D D D D D D D 
Control de 
 Versiones 
- - - - - - - - D - - - - - - D - 
Objetivos del 
proyecto 
D 
N
D 
D D D D 
N
D 
D 
N
D 
N
D 
N
D 
D D D D D D 
 
De este punto de análisis se desprende que la mayoría de los alumnos pudieron 
definir los participantes involucrados en el desarrollo del proyecto, pero la mayoría no 
1636
registró los cambios en el Control de Versiones, aun cuando presentaron más de una 
versión del producto. 
En cuanto a los Objetivos del proyecto, se observa que algunos alumnos tuvieron 
dificultades para definir los objetivos del proyecto. 
c) Análisis de la especificación de los requerimientos en NDT. En la Tabla 5 se 
observan los distintos ítems analizados en las especificaciones  
De los valores mostrados en la tabla 5, se desprende que no hubo dificultad en los 
alumnos en definir con claridad los objetivos de la aplicación web.  
  
Tabla 5.Análisis de especificación de requerimientos en NDT 
Casos 
Claridad 
en la 
definición 
de los 
objetivos 
Coherencia en 
la definición de 
los datos de 
almacenamiento 
Completitud 
en los casos 
de uso 
Consistencia 
entre los 
términos 
utilizados en 
las diferentes 
descripciones 
Consistencia 
con 
el problema (se 
documenta 
correctamente 
con el Caso de 
Uso) 
1 B MB B B MB 
2 MB B B B B 
3 MB MB MB MB MB 
4 MB R R R R 
5 MB MB MB MB MB 
6 B MB B B B 
7 B B MB MB MB 
8 MB B MB MB MB 
9 MB MB MB MB MB 
10 MB B R B B 
11 B MB MB MB B 
12 MB MB MB MB MB 
13 B MB B B B 
14 MB MB MB MB MB 
15 B B MB MB B 
16 MB R MB MB MB 
17 MB MB MB MB MB 
 
Completar los casos de uso no representó dificultades en las especificaciones, 
como tampoco se observó inconsistencias en documentarlos correctamente y en el uso 
de términos distintos a lo largo del trabajo. Los alumnos tienen muy presentes esos 
conceptos porque se encuentran cursando la asignatura Ingeniería de Software I. 
En el análisis de los productos finales se pudo comprobar que, si bien algunos 
alumnos describieron requerimientos de datos que luego no utilizaron, o viceversa, la  
herramienta les sirvió para detectar esta situación.  
 
3.3 Análisis de satisfacción de los alumnos 
Para evaluar el grado de satisfacción de los alumnos respecto a la metodología de 
enseñanza, se diseñó un cuestionario on-line que se envió a los alumnos. Dado que el 
cursado ya había finalizado, solamente 7 alumnos aportaron sus opiniones, que se 
consideran ilustrativas de la situación.  
Las cuestiones abordadas fueron las siguientes: 
1. Simplicidad de la herramienta 
2. Claridad de los distintos módulos de la herramienta 
1637
3. Utilidad del manual de usuario 
4. ¿La herramienta facilitó el desarrollo de la aplicación? 
5. Importancia de la documentación en el desarrollo de software 
6. ¿La herramienta contribuyó a la documentación de la aplicación 
desarrollada? 
7. ¿Volvería a utilizar la herramienta en el desarrollo de una nueva aplicación? 
Los resultados se presentan gráficamente en las figuras 2 a 7. 
  
Figura 2. Simplicidad de la herramienta Figura 3. Claridad de los módulos 
  
Figura 4. Utilidad del manual de usuario Figura 5. Desarrollo de la aplicación 
 
 
Figura 6. Importancia de la documentación Figura 7. Contribución a la herramienta a la 
documentación 
 
En cuanto a la consulta de si volverían a utilizar la herramienta en el desarrollo de una 
nueva aplicación, la totalidad de los alumnos contestó en forma positiva. 
1638
Analizados los resultados obtenidos, se observa que en cuanto a la facilidad de uso de 
la herramienta y de la comprensión de los distintos módulos (Fig. 2 y 3), la valoración 
fue mayoritariamente entre 3 y 4 para una escala de 1 a 5, donde 1 es más difícil y 5 
más fácil, lo que significa que la comprensión fue de una dificultad media, 
En cuanto a la utilidad del manual de la herramienta (Fig. 4), el 43% dice que lo 
utilizó permanentemente, un 28% lo leyó pero no lo necesitó y un 29% opinó que el 
manual no era muy claro. Vinculado con la herramienta, se les consultó también si su 
utilización facilitó el desarrollo de la aplicación (Fig. 5), la mayoría (72%) contestó 
que sí, pero que no fue imprescindible su uso.  
Respecto de la importancia de la documentación en el desarrollo y de si la 
herramienta NDT contribuyó a la documentación de la aplicación desarrollada (Fig. 6 
y 7), mayoritariamente (57% en ambos casos), opinaron favorablemente. 
De las respuestas de los alumnos se puede inferir que apreciaron la herramienta por su 
aporte a la documentación pero, en esta etapa formativa, no les resultó imprescindible. 
Esta devolución servirá para revisar las consignas dadas en esta estrategia de 
enseñanza, buscando una mayor integración del modelado de la aplicación, utilizando 
la herramienta NDT-Suite, y el desarrollo de la misma. 
4   Conclusiones 
Este trabajo presenta los resultados de una estrategia de enseñanza que incorpora la 
herramienta NDT-Suite para el desarrollo de aplicaciones web.  
La aplicación de NDT a proyectos reales resultó enriquecedora. En este caso, ha 
sido especialmente interesante porque los alumnos comprobaron que siguiendo las 
buenas prácticas en el desarrollo de software proporcionadas por la herramienta NDT 
Suite se obtiene un producto de calidad.  
Tanto de los trabajos realizados por los alumnos como de las opiniones de los 
mismos se desprende que son conscientes de la importancia de seguir una 
metodología de desarrollo de software para obtener un producto de calidad. La 
herramienta contribuyó a la valoración de la documentación en los proyectos de 
software. 
Al ser una herramienta muy completa, los alumnos podrán seguir avanzando en la 
utilización de los demás componentes, como por ejemplo el NDT Quality, que 
comprueba criterios de calidad.  
Como trabajos futuros, además de resaltar las futuras aplicaciones pero ya en otros 
perfiles del NDT-Suite, se pretende ampliar la estrategia incorporando la utilización 
de la herramienta en otras asignaturas vinculadas con la Ingeniería del Software. 
 
