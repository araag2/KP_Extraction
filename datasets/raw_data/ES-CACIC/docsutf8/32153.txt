Diseño de una aplicación de aprendizaje matemático basada en tecnología Android
﻿ En los últimos años, se ha ido observando una subida exponencial 
del uso de los llamados smartphones (teléfonos inteligentes), así como de los 
hábitos de sus consumidores.  
Es un hecho ya, que desde que aparecieron las potentes conexiones de datos, 
prácticamente todas las tareas que antes requerían del uso de una PC, se pueden 
ahora llevar a cabo en los smartphones. Actualmente, existen cuatro sistemas 
operativos sobre los cuales se basa el desarrollo de las principales aplicaciones 
móviles: Android de Google,  iOS de Apple,  Windows Phone de Microsoft y  
BlackBerryOS de RIM.  
A pesar de tener menos aplicaciones, Google puede presumir de ser el sistema 
operativo más usado en dispositivos móviles.  
Este proyecto se centra en el desarrollo de un pack de aplicaciones nativas para 
dispositivos móviles con sistema operativo Android como recurso de  
enseñanza – aprendizaje de matemática básica en Educación Superior.  El 
objetivo de estas aplicaciones se enfocan en permitir la integración de la 
resolución analítica manual, de distintos problemas matemáticos, con la 
tecnología m-learning, desde procesos de formación, autocontrol y evaluación  
informal, en el contexto del ingreso universitario.  
Palabras Clave: Apps, Matemática, Enseñanza-Aprendizaje, m-Learning, 
Android.   
1   Introducción 
El dominio de las tecnologías móviles por parte de las nuevas generaciones de 
estudiantes ha permitido identificar paradigmas didácticos basados en contextos de 
ubicuidad [1]. Se hace necesario, por ello, reconocer los cambios que inciden en estas 
didácticas actuales para facilitar el papel propiciador del docente en un escenario 
tecnológico, y,  transitar hacia una concepción educativa contemporánea mediada por 
la comunicación informática.  
 Paralelamente, la Matemática se presenta como uno de los  conocimientos  
imprescindibles  en  las  sociedades con desarrollo tecnológico avanzado y sin 
embargo, la realidad pone de manifiesto que se trata de una de las áreas con mayores 
dificultades de rendimiento para gran parte del estudiantado universitario, 
observándose como una de las causas de  los  reiterados  fracasos y deserciones 
556
durante el ingreso educativo. [2]. La utilización de estrategias cognitivas y meta 
cognitivas matemáticas pareciera ser inconsistente con las  heurísticas empleadas  
para analizar o resolver conflictos, razonamiento  inductivo  e  intuitivo,  y  la  
comprobación  de  hipótesis  
En este sentido, se considera que el cimiento –contenido- matemático debe 
fortalecerse a nivel inicial, no en el contexto axiomático de la matemática, sino en su 
esencia intuitiva pero formal, de forma tal que permita a los alumnos ingresantes 
experimentar de una manera grata y creativa “aprender - hacer matemática”.   
Las aplicaciones para dispositivos móviles o Apps, han sido programas pensadas y 
creadas para  para proporcionar multitud de servicios a los usuarios de móviles. Las 
aplicaciones más famosas son las orientadas a redes sociales (Facebook, Twitter,…) o 
a servicios de mensajería (Whatsapp), pero  también se destacan aplicaciones de 
banca online, aplicaciones de localización, aplicaciones orientadas a uso empresarial, 
entre otras. 
En este proyecto se hizo hincapié en aplicaciones educativas, concluyendo en el 
desarrollo de un Pack de Apps móviles, como herramienta informal de apoyo 
didáctico, a estudiantes – profesores, en la autogestión y autoevaluación de  
soluciones a problemas matemáticos, empleando Android,  plataforma de Google para 
sistemas móviles.  
2   Contexto Universitario  
La Universidad Nacional del Chaco Austral (UNCAus) presenta en su oferta 
académica 14 carreras de grado, para las cuales es necesario, al ingreso de cada una 
de ellas, completar un Curso de Ingreso en Matemática obligatorio pero  no 
eliminatorio. En 2012 la UNCAus recibió aproximadamente 1000 alumnos 
ingresantes (según datos arrojados por el SIU UNCAus 2012). La situación cultural y 
educativa  inicial de  los estudiantes evidencia una heterogeneidad considerable. En 
consecuencia es necesario propiciar una base de partida común que garantice a los 
alumnos la igualdad de oportunidades, frente a la diversidad de preparación con la 
que egresan del Nivel Medio. 
En el contexto de la  UNCAus, una de las iniciativas es  el Plan de Articulación 
entre el Nivel Medio – Polimodal  y Superior, a través de cursos de nivelaciones 
presenciales y virtuales. 
A través de diferentes estrategias inclusivas ha reconocido los cambios de 
paradigmas de comunicación que inciden sobre las didácticas mediadas por 
tecnologías, para transformar el esfuerzo educativo, centrado en la reproducción de 
textos, en el descubrimiento y la exploración de los contendidos para la 
autoconstrucción y autorregulación del conocimiento. 
3   La trilogía ágil: Apps -  Android  - Matemática 
Las Apps móviles son programas desarrollados para que funcionen en dispositivos 
móviles, y atiendan una tarea específica [3]. Una aplicación informática matemática 
móvil es un programa educativo destinado a resolver una o diferentes situaciones 
557
problemáticas específicas del ambiente matemático, empleando como plataforma de 
base, la tecnología del celular.  
El aprendizaje móvil (m-learning) es la adquisición de conocimiento por medio de 
alguna tecnología de cómputo móvil [4]. Por computadoras móviles  se  entiende 
smartphones,   agendas personales digitales (PDAs), netbooks, tablet PCs y tal vez, 
dependiendo del tamaño, laptops. 
A medida que el negocio de las aplicaciones móviles se va expandiendo y 
haciéndose rentable, se tienen que investigar las metodologías óptimas de desarrollo 
software para tales aplicaciones y entornos que lleven dicho desarrollo a éxito de una 
forma atractiva y eficiente. El desarrollador de aplicaciones móviles se enfrenta, 
además, con un escenario muy fragmentado, formado por multitud de plataforma 
incompatibles, como Symbian, Windows Mobile, Brew, iPhone SDK, Android, Linux 
o Java. Todo esto hace que el proceso de desarrollo para plataformas móviles sea más 
complejo. 
La idea de una metodología ágil tiene dos motivaciones claras: un alto número de 
proyectos que se retrasan o fracasan; y la baja calidad del software que se desarrolla. 
La búsqueda de la solución pasa por una serie de factores: la mayor parte del esfuerzo 
es un proceso creativo y requiere de personas con talento, estos procesos son 
difícilmente planificables, modificar software es barato, las pruebas y revisión de 
código son la mejor forma de conseguir calidad y los fallos de comunicación son la 
principal fuente de fracaso. 
Como se señala en [5], existen cinco factores principales que afectan a la agilidad 
de un proceso de desarrollo software: cultura de operación (operating culture, normas 
de comportamiento y expectativas que gobiernan la conducta de las personas, tanto en 
su trabajo como en las interacciones con los demás), tamaño del equipo de desarrollo, 
criticidad del software (tanto en el tiempo de desarrollo como en características 
específicas que tenga que cumplir el software o que vengan impuestos por los 
elementos donde vaya a ejecutarse), competencia técnica de los desarrolladores y, por 
último, la estabilidad de los requerimientos. 
También argumentan que un método de desarrollo de software funciona mejor cuando 
se aplica a situaciones con características muy específicas, a esta clase de situaciones 
las llama "home ground" (bases) del método de desarrollo de software. En la Tabla I 
se puede observar la comparación entre las bases de los métodos ágiles y las de los 
procesos de desarrollo por planes o "planeados" (plan-driven). 
 
Área Metodología Ágil Métodos Clásicos 
Desarrolladores Colaborativos, unidos, 
ágiles y entendidos. 
Orientados al plan con una 
mezcla de habilidades. 
Estudiantes – 
Profesores (Clientes) 
Son representativos y se 
les entrega poder. 
Mezcla de niveles de aptitud. 
Confianza Conocimiento tácito 
interpersonal. 
Conocimiento explícito 
documentado. 
Requerimientos En gran parte emergentes y 
con rápidos cambios. 
Conocibles tempranamente y 
bastante estables. 
 
Arquitectura 
Diseñada para los 
requerimientos actuales. 
Diseñada para los 
requerimientos actuales y del 
futuro próximo. 
558
Refactorización Económica. Costosa 
Tamaño Productos y Equipos 
pequeños. 
Productos y Equipos más 
grandes. 
Valor Premiun Valor rápido. Alta Seguridad. 
Tabla 1. Bases para métodos ágiles y planeados (Tomado de [5]) 
 
En definitiva, el desarrollo ágil de software intenta evitar los tortuosos y 
burocráticos caminos de las metodologías tradicionales, enfocándose en las personas 
y los resultados. Promueve iteraciones en el desarrollo a lo largo de todo el ciclo de 
vida del proyecto. Desarrollando software en cortos lapsos de tiempo se minimizan 
los riesgos, cada una de esas unidades de tiempo se llama iteración, la cual debe durar 
entre una y cuatro semanas. Cada iteración del ciclo de vida incluye: planificación, 
análisis de requerimientos, diseño, codificación, revisión y documentación. Cada 
iteración no debe añadir demasiada funcionalidad, para justificar el lanzamiento del 
producto al mercado, sino que la meta debe ser conseguir una  versión funcional sin 
errores. Al final de cada iteración, el equipo volverá a evaluar las prioridades del 
proyecto. 
4   Metodologías Ágiles para el Desarrollo de  Apps Móviles  
Las metodologías ágiles poseen ciertas propiedades que las hacen totalmente 
aplicables al dominio del software en los móviles. La idoneidad de los métodos ágiles, 
como solución potencial a la elección de una metodología de desarrollo, se sintetiza 
en la Tabla 2. 
 
  
Características Agiles Desarrollo para Plataformas Móviles 
Alta volatilidad del entorno Alta incertidumbre, entonos dinámicos. 
Equipos de desarrollo pequeños Llevado a cabo por microempresas (Pymes). 
 
Cliente identificable 
Potencialmente, hay un número ilimitado de 
usuarios finales, pero los clientes son fáciles 
de determinar. 
Entornos de desarrollo  orientados 
a objetos 
Java y C++ 
 
Software a nivel de aplicación 
Mientras los sistemas móviles son complejos 
y altamente dependientes, las aplicaciones son 
muy autónomas. 
Ciclos de desarrollo cortos Períodos de desarrollo de 1 a 6 meses. 
 
Sistemas pequeños 
Las aplicaciones, aunque variables en su 
tamaño, no suelen superar las 10.000 líneas de 
código. 
Tabla 2: Características  ágiles y los rasgos y los rasgos observados en el desarrollo de 
software móvil 
 
559
Android es una solución completa de software de código libre para teléfonos y 
dispositivos móviles. Es un paquete que engloba un sistema operativo, un "runtime" 
de ejecución basado en Java, un conjunto de librerías de bajo y medio nivel y un 
conjunto inicial de aplicaciones destinadas al usuario final (todas ellas desarrolladas 
en Java). Android se distribuye bajo una licencia libre permisiva (Apache) que 
permite la integración con soluciones de código propietario. 
Las aplicaciones Android están programadas en Java, pero no corriendo sobre 
Java ME, sino sobre Dalvik, una máquina virtual Java desarrollada por Google y 
optimizada para dispositivos empotrados. La creación de una VM propia es un 
movimiento estratégico que permite a Google evitar conflictos con Sun por la licencia 
de la máquina virtual, así como asegurarse el poder innovar y modificar ésta sin tener 
que batallar dentro del JCP. Cada aplicación Android corre su propio proceso, con su 
propia instancia de la máquina virtual Dalvik. Dalkiv ha sido escrito de forma que un 
dispositivo puede correr múltiples máquinas virtuales de forma eficiente. 
Es precisamente este contexto que el que dio la motivación para este proyecto:  
• Desarrollar aplicaciones de software (Apps) para dispositivos móviles que 
permitan interactuar con los distintos conceptos en el campo disciplinar de la 
matemática universitaria, empleando desarrollo ágil 
• Establecer un equipo de desarrolladores emprendedores que puedan crear 
rápidamente Apps para las distintas necesidades de la institución 
• Explorar la creación de Apps en distintos ambientes de desarrollo, 
particularmente en el sistema operativo Android.  
4.1   Mobile-D, una aproximación ideal para el Desarrollo Ágil de Apps  
Mobile-D es un proyecto finlandés creado es 2005. Es una mezcla de técnicas 
agiles y tiene por objetivo principal conseguir ciclos de desarrollo muy rápidos en 
equipos muy pequeños. Se compone de distintas fases: 
- Exploración: planificación, definición del alcance y funcionalidades del proyecto. 
- Inicialización: identificación y preparación de todos los recursos necesarios  
- Productización: en esta fase, se repite iterativamente la programación hasta 
implementar todas las funcionalidades.  
- Estabilización: se hacen las últimas acciones de integración para asegurar que el 
proyecto funcione correctamente. 
- Prueba y reparación: fase de testeo, hasta llegar a una versión estable del proyecto, 
según lo establecido en las primeras fases por el cliente. Se reparan errores si es 
necesario, pero no se crea nada nuevo.   
 
4.2 El Entorno de Desarrollo 
 
Android ofrece un plugin para Eclipse que extiende la funcionalidad de éste y 
facilita el desarrollo de aplicaciones para Android. Además, ofrece las herramientas 
que utiliza este plugin como scripts de ant para que puedan ser utilizados también 
desde otros entornos como Netbeans o Intellij IDEA15. Entre las funcionalidades de 
este plugin se encuentra: 
560
• Emulador de Android. Permite elegir entre distintos terminales móviles y la versión 
del sistema operativo. 
• El acceso a herramientas de desarrollo de Android como tomar capturas de pantalla, 
la redirección de puertos, la posibilidad de depurar con puntos de parada o ver el 
estado de las hebras y los procesos corriendo en el sistema.) 
• Asistentes para la creación rápida de aplicaciones Android 
• Editores de código para los distintos archivos de configuración (XML) que facilitan 
su comprensión y desarrollo 
• Interfaces gráficas que permiten el desarrollo de componentes visualmente. 
5   Mo-Math  
Mo-Math (Matemáticas Móviles) es un proyecto piloto para ayudar al proceso 
enseñanza-aprendizaje, en el área matemática, empleando tecnología móvil. 
Para la concretización del proyecto se llevaron a cabo las etapas de Mobile-D, en el 
marco de aplicaciones nativas. 
5.1   Iniciación  
Se analizó la influencia de los dispositivos móviles y aplicaciones matemáticas en el 
proceso enseñanza-aprendizaje, como un nuevo paradigma didáctico, por medio de 
una serie de aplicaciones ejecutables desarrolladas con la Metodología de Desarrollo 
Ágil en la plataforma Visual C# 2008. Estas Apps fueron diseñadas para ejecutarse en 
sistemas operativos Linux, como punto de partida del análisis. Se tuvo en cuenta que 
en el contexto de la Universidad Nacional del Chaco Austral, existe un gran número 
de docentes y alumnos que poseen computadoras personales y netbooks con sistema 
operativo de este tipo.  
Las aplicaciones desarrolladas son sencillas de utilizar y de comprender, tanto para 
docentes como para alumnos.  
Este primer paso permitió planificar la modelización de un sistema, aún más ágil y 
práctico, a implementarse en las tecnologías de los celulares. 
En esta primera etapa se definió el alcance y las funcionalidades a mejorar de las 
aplicaciones puestas en modo de prueba. 
Otro aspecto a considerar lo constituyó la plataforma sobre la cual se desarrollaría 
el proyecto. Finalmente, teniendo en cuenta un análisis estadístico de sistemas 
operativos instalados en los celulares de los estudiantes de la UNCAus, se optó por 
Android. 
5.2   Productización     
El segundo paso lo constituyó la materialización del piloto sobre tecnología móvil. 
Existen variados y diversos lenguajes de programación que nos permitirían 
concretar el traslado de Mo-Math a dispositivos móviles. Uno de los objetivos del 
proyecto fue desarrollar las Apps como software libre. Java resulta lenguaje de 
561
programación apropiado para llevar a cabo dicho proceso de traslado, ya que este 
lenguaje permite desarrollar software libre.  
 
 
Figura 1: Pantalla Principal de Mo-Math. 
 
Figura 2: Entorno de Trabajo Java empleado para Mo-Math 
 
562
 
Figura 3: Menú de Mo-Math con las diferentes Apps Desarrolladas. 
 
En cuanto al diseño, se debió analizar si el código de adapta perfectamente o si 
requiere de cambios. 
5.3   Estabilización  
Una vez desarrollados los programas que forman parte de este proyecto, se tomó 
una muestra de control de 15 alumnos pertenecientes a las diferentes carreras de la 
UNCAus. 
El proceso de enseñanza y aprendizaje de contenidos consta de partes bien 
diferenciadas. Primeramente, luego de las correspondientes explicaciones y 
demostraciones, los alumnos resolvieron analíticamente por sus propias medios 
diferentes ejercicios matemáticos, y seguidamente analizaron y verificaron sus 
resultados con las Apps móviles. Cuando el resultado obtenido por los alumnos no 
coincidía con los obtenidos con los programas, se  planteaba  un análisis sobre los 
errores, hasta que lograban llegar al resultado correcto. Se pudo concluir, en una 
primer experiencia una situación positiva:  la motivación del alumno,  promoviendo  
un aprendizaje constructivo y el autocontrol de resultados.  
5.4   Prueba y Reparación  
Los resultados obtenidos  en la fase de prueba exigen revisar algunos aspectos como 
las interfaces y elementos respecto al agregado de funcionalidades. 
En esta fase, el equipo se encuentra trabajando con la finalidad de refinar el 
producto e implementar la aplicación, en otras áreas de la UNCAus. 
563
6   Características de Mo-Math 
Existen varios software matemáticos, algunos de los cuales son complejos en su 
interfaz, en su forma de presentar los datos, dan lugar a confusiones debido a la gran 
cantidad de datos presentes en las pantallas, entradas y salidas complejas. Mo-Math 
presenta una serie de ventajas como por ejemplo: 
1. Facilidad en la interacción con el usuario: la interacción de Mo-Math con los 
usuarios es  fluida, no se requiere del conocimiento de comandos de uso, además con 
que se explique su uso una vez basta para entender su funcionamiento sencillo,   solo 
con ingresar los datos y con un solo click se obtienen los resultados. 
2. Uso de pantallas sencillas. Esta es una de las ventajas más destacadas por los 
alumnos de control en la etapa de prueba del sistema. Mo-Math  por permitir a los 
alumnos una fácil interpretación de datos y resultados y también una sencilla y rápida  
introducción de valores que no requieren de un manual de uso ni de comandos 
específicos. 
3. La sencilla instalación del software. La instalación de Mo-Math es sumamente 
intuitiva, se realiza por medio de un archivo ejecutable y  lleva poco tiempo 
7   Conclusión y Líneas de Investigación 
 El software presentado tiene la finalidad de apoyar al docente y a optimizar el 
proceso enseñanza-aprendizaje. Se enfatiza que estas aplicaciones están dirigidas a los 
alumnos del último año de la escuela media e ingresantes universitarios que deben 
realizar el cursillo de nivelación del área Matemática. 
En cada fase del desarrollo de Mo-Math, se tuvo en cuenta el público destinatario. 
La sencillez de las pantallas permitió cumplir con el objetivo de ofrecer una fácil y 
rápida introducción de datos e interpretación de resultados. Los programas que 
incluye Mo-Math permiten la resolución de ejercicios y problemas matemáticos 
básicos del nivel medio y cubren los módulos fundamentales del área matemática: 
Conjuntos Numéricos, Trigonometría Plana, Expresiones Algebraicas, Relaciones y 
Funciones. 
Este software Mo-Math, ofrece una nueva perspectiva a la forma de enseñar 
matemática vinculada con el uso de TICs, por lo cual, este pack de programas debe 
ser tenido en cuenta y sumarlo al entorno educativo de la articulación del nivel mediouniversitario, para luego  explotar sus potencialidades al máximo. 
Se consta el hecho de que, considerando un entorno de trabajo de alta volatilidad y 
dinamismo, se logra establecer como elemento clave de desarrollo, el talento y la 
organización de pequeños equipos de desarrollo.  
Desde el punto de vista práctico y más allá lo obtenido como resultados de su 
implementación en alumnos y docentes,  resulta necesario realizar un análisis sobre 
desarrollo ágil para sistemas móviles que ayude a mejorar las etapas de ciclo ágil. 
Los resultados obtenidos en este trabajo fueron positivos en cuanto a sus 
objetivos, sin embargo, los desafíos a tratar sobre  temas de conectividad pueden ser 
más grandes y se propone trabajar algunas áreas como crear una la biblioteca de 
aplicaciones evaluando las próximas y actuales tecnologías o extensiones a utilizar, 
564
generar el soporte a otros sistemas operativos como  iOS (laptops, tables, smartphones 
y el PDA iPod touch) y sin duda alguna, generar una mayor y mejor difusión sobre 
esta tecnología.  
8
