On the road to a global wireless sensor network
﻿ This work has considered the development, testing, configuration 
and implementation of a wireless sensor network infrastructure. This 
infrastructure on a testbed scale has been used primarily for research, oriented 
to an interdisciplinary approach that encompasses the hardware, software, 
algorithms and data. It sought to demonstrate that the heterogeneity of devices 
and small existing structures may coalesce into well-organized, large-scale, 
different existing grids that will enable a quantitative and qualitative research to 
a much larger scale by addressing the dynamic changes of venues, 
infrastructure and composition of nodes. Considering that a real implementation 
is usually a complicated task, we have performed a network simulation and a 
real testbed. Also a contribution to the establishment of a global network of 
wireless sensors has been highlighted, distinguishing three sub domains in the 
global network considered: the existing top network, the sensing devices and 
the servers. 
Keywords: WSN, testbeds, infrastructure 
1 Introduction 
Mark Weiser envisioned that the development of ubiquitous computing is the future 
scenario, and that it will interact seamlessly with human users [1], [2]. Ubiquitous 
computing is synonymous with the evolution of electronic devices through the 
miniaturization and the increased socialization of online content. 
Today it is possible to use some tools to visualize, through numerical simulations, 
the phenomena that we cannot observe by empirical methods. This phenomenon 
could be understood as a result of the development of the properties and capabilities 
of the underlying semiconductor technology. Moore's Law establishes that the 
number of transistors on a circuit, and thus its storage and calculating capacity, 
doubles every year or two [3]. The lower costs in the market reached by the different 
parts of circuits, contributes to the low prices of almost all computing and 
communication devices. It is for this reason that IT is springing up and developing in 
CACIC 2011 - XVII CONGRESO  ARGENTINO DE CIENCIAS DE LA COMPUTACIÓN 1175
an increasing scope of network linked physical devices. Moreover, as component 
technologies are becoming smaller, faster and cheaper it will continue to do so. 
Miniaturization is a reality in most aspects of everyday life, as it also is the 
capacity of embedding computing and communications technology of spreading far 
and wide. 
While this is achieved with the proposed improvement in calculation and storage 
performance, research on the application of this technology is designed to reliably 
determine which will be the new role of computers in science during the XXI century. 
IT will eventually become an invisible component of almost everything in everyone’s 
surroundings. 
Ubiquitous computing fits a large number of technologies and applications, from 
mobile devices, "smart" artifacts for special purposes. 
A special analysis of radio frequency identification (RFID) becomes necessary. It 
consists of a system to storage and retrieve remote data, which is used by devices 
called tags, cards, transponders or RFID tags. The main purpose of this technology is 
to transmit the identity of an object, similarly to a code or serial number, using radio 
signals. The elements needed to enable the system are the RFID tags and RFID 
readers, elements that allow the physical object “be seen” and monitored by an 
existing computer network. 
Scientifics and researchers talk more and more about a "ubiquitous network 
society" [4], [5], a society where networks and networked devices are omnipresent. 
When talking about worldwide competition, efficient IT systems which can supply 
comprehensive and in time data, are essential, and this conveys the need of a 
continual stream of information from industry appliances to business applications, 
uniting thus many eclectic systems. 
There should have some devices that could be used as an interface for the physical 
world to become more “friendly” with computer networks, making the conditions of 
objects and their surroundings perfectly and indefectibly accessible to software 
systems. RFID and WSN offer a wide range of networked and interconnected devices 
which afford significant information no matter where the user is. Home appliances, 
automobiles or farm machines can be in a communication range, shifting from today’s 
Internet, the internet of data and people, to the Internet of tomorrow, the Internet of 
things, namely global communication network springing out of the dissemination of 
such devices and increasingly developing. 
Often, the ultimate goal of an action is to get valid information from the field 
where we are interacting with. In many situations, it would be difficult or extremely 
expensive, to carry on a surveillance project by using a system where the interacting 
elements with the event are connected by physical links such as copper wires. For 
such situations there is a new technology based on a new paradigm, Wireless Sensor 
Networks (WSN). These networks should not be considered as another step in the 
evolution of the personal computer or the Internet, it is rather thought as the beginning 
of the end of personal computers. 
A WSN has a number of exclusive characteristics when compared with 
conventional wireless networks, given that they are related to narrow bandwidth, low 
computation capability of the nodes, and limited lifetime. Self organization, dynamic 
network topology, and multi-hop routing are additional key possible features of a 
WSN, which make them important for many applications.  
CACIC 2011 - XVII CONGRESO  ARGENTINO DE CIENCIAS DE LA COMPUTACIÓN 1176
Of course it is advantageous to perform precise simulations or to develop models 
before deploying WSNs in the field. This is because WSNs may be deployed 
randomly in an ad-hoc manner with a large number of tiny nodes. Simulations help to 
evaluate the performance of sensor networks within certain application environments, 
something impossible to achieve not many years ago.  
We cannot feasibly model analytically a WSN and what is more, deploying 
testbeds means a great effort; consequently, if we are to study WSN we must resort to 
simulation. To do this we need a suitable model based on solid assumptions and a 
suitable framework to easily accomplish it [7]. Besides, the results of the simulation 
which are dependent on the environment, the hardware, and certain other 
assumptions, often not sufficiently precise to depict the actual behavior of a WSN, 
jeopardize much of the results. Usually most simulators bring forth issues related to 
scalability and performance; this is so because of the many devices depicted on the 
simulated applications. 
At present there is not such an active testbed in Argentina, and as result of this 
work, a fully operative WSN is ready to serve as scenario for any joint researchdevelopment project with national or foreign partners. Thus practical result will serve 
to support research and development devoted to the subject in the region. 
However, in most cases, when assessing the needs at normal scale, the 
implementation of a real pilot testbed is usually a complicated task, often for financial 
reasons. Whether possible, an integrated use of possibilities should be performed, this 
means to investigate the network simulator and the real testbed. The physical 
implementation of testbeds stands for accurate and replicable testing; nevertheless, 
this approach experiences two serious limitations, namely a) large scale, due to costs; 
and b) not replicable environment. The major challenges for the use of simulators and 
testbeds are: 1) Sensor node simulation. 2) Testbed visualization. 3) Interaction 
between simulated scenario and the practical deployment [8]. 
Whenever an experience can happen in the real world it is quite engaging since it is 
a confident way to demonstrate that the application can perform a precise assignment 
wherever the technology is at hand. Yet, unpredictable environment influences make 
it quite difficult and nearly impossible to present the results and to set apart sources of 
error, that influences the problem to be considered [9]. Therefore normally testbeds 
are often limited to a few dozen devices [10]. In future scenarios the building of 
networks will consider a very high number of nodes, reaching up to several thousand 
or even millions [11], [12]. 
Although there exist frameworks for general purpose, to develop a new application 
in a specific field will demand large experience and skill in a wide scope of 
technologies. Consequently, smart devices and WSNs are yet not fully exploited. 
Concerning the integration of application for business, there have been so far few 
projects which have empowered new architectures with more flexible software. Still, 
the use of hybrid web applications (mashups) has mainly been used on on-line service 
and not on physical world analysis, which is our main intention. 
The practical objective of this work intends to report the development, testing, 
configuration and implementation of a WSN infrastructure. This infrastructure on a 
testbed scale should be used primarily for research, pointing to an interdisciplinary 
approach that encompasses the hardware, software, algorithms and data. It seeks to 
demonstrate that the heterogeneity of devices and small existing testbeds structures 
CACIC 2011 - XVII CONGRESO  ARGENTINO DE CIENCIAS DE LA COMPUTACIÓN 1177
may coalesce to form well-organized large-scale, different existing grids that will 
enable a quantitative and qualitative research to a much larger scale by addressing the 
dynamic changes of venues, infrastructure and composition of nodes. 
2 Material and Methods 
When we talk about WSN to monitor micro environments, we note that because of its 
auspicious and encouraging capability it is becoming very popular. Even though, the 
majority of systems used for monitoring environment that appear in the literature are 
those applied only in specific applications and with no use of functions that may work 
on the user’s data processing methods. The hardware working style we have chosen is 
one of application-oriented, whereas the system platform to acquire information, 
validation, processing and visualization is orderly presented. The system capability to 
draw forth useful information can be guaranteed through several approaches. 
Sensors connect to Internet creates endless opportunities in terms of applications 
and services on emerging patterns of operation. Internet users will be able to obtain 
real time information from our physical scenario over any item, anywhere and 
anytime. These investigations have been carried out in parallel, and often in isolation, 
making it impossible to establish a unified global framework. 
The results of experiences can reveal the path reliability as well as real-time 
characteristics, and can also show the system viability and capability in practical use. 
Figure 1 shows the system architecture of the testbed installed, where the three levels 
involved can be observed. 
 
 
 
Fig. 1 System Architecture of the deployed testbed 
 
The infrastructure level is formed by the WNS nodes and the sinks. These devices 
self-organize themselves into a WSN, generating continuous information data 
packets. This information consists of temperature, humidity and light intensity near 
CACIC 2011 - XVII CONGRESO  ARGENTINO DE CIENCIAS DE LA COMPUTACIÓN 1178
the nodes. If we are to design this tier, the choice of the manner of sensing, of 
reporting and the packet routing protocol must be decisive. 
The server level: captures and processes any packet transferred by the sink, in this 
case through an USB cable; this information afterwards is forwarded to the upper 
processing program where they are processed. Besides; at this level it is possible to 
send the packets received over the Internet, where the information can be read by the 
user. 
The user level: Data can be accessed by remote users with web browsers in a way 
that they can assemble/collect and see the packets from the Server, thus being able to 
visualize a real-time monitoring of the system. Concerning the security of WSN, users 
can only survey data and they are not allowed to change parameters of the basic tier. 
Although some aspects in this WSN may be generic, the specific demands of the 
application are significant, especially in scenarios like environmental monitoring. 
When doing this, a number o sensors are deployed in an area for measuring 
meteorological parameters, namely temperature, speed and direction of winds, 
moisture and pressure; and as they tend to change quite slowly, sparse sampling is 
conceded. Usually, nodes use to measure their contiguous space and send data packets 
in any of the three following ways: timer-based, event-driven, and requirement-based. 
In our micro-environmental monitoring network, we did not have troubles with the 
energy demand of the nodes, because of the technology of the nodes applied. The 
only task for sensors is to measure and send the information in due packets according 
to approximately the internal timer frequency. The more the measuring instances are, 
the greater the energy used and consequently a shorter lifetime. On the other hand, 
lower frequencies of measurements leads to a lack of sensitivity of environment 
changes. 
It is widely known that applying multihop techniques in WSN renders a longer 
lifetime saving much energy from the batteries. So far, we have not experienced such 
a scarcity because of the solar energy harvesting system provided by our weather 
station nodes. Furthermore as the information is relayed to sinks, scalability is 
enhanced. 
In a typical WSN application, the observer is interested in tracking phenomena 
under certain restrictions of latency and accuracy. In a typical WSN, each individual 
sensor node performs the measurement of the values required, and disseminates this 
information to other members of the network, and eventually, to the observer. The 
different events of a given phenomena are measured as discrete samples, which will 
depend on the precision and accuracy of the sensors, and the location thereof. We 
have deployed hardware provided by iSense [13] as platform for this experimental 
work. 
Since our WSN uses the iSense operating system and firmware, the generation of 
small, but complete applications, are allowed. This provides a solid foundation for 
rapid application development. It furnishes a C++ API to the hardware of the node, 
functionalities of operating system and a wide variety of network protocols. 
Other personal computers were used as platforms for application development 
which would then be transferred to the sensing devices. In these PCs the needed 
packages have been installed that would allow to develop applications in C++ and 
compile them, so the final application could be distributed to the different nodes of 
the WSN. For these tasks, a Linux+PC platform under Ubuntu and Debian 
CACIC 2011 - XVII CONGRESO  ARGENTINO DE CIENCIAS DE LA COMPUTACIÓN 1179
distributions was adopted. The necessary applications have been installed such as: 
make, cmake and gcc++. The iSense platform is based on a Jennic processor, which 
depends on the ba-elf-g++ integration of libraries and compiler to assure well done 
applications. The figure 2 shows the comparative size of the device to a coin. 
 
 
 
Fig. 2 iSense core and attached modules compared with a coin 
 
During the running period we have used several modules attached to the main one, 
namely: gateway module, Security Sensor module (infrared PIR and 3-axis 
accelerometers), weather sensor module (temperature, relative humidity and 
barometric pressure), and environmental sensor module (thermometer and light 
intensity). In these experiences an energy harvesting system has been adopted, to 
generate energy and store it in a rechargeable battery, allowing the nodes to run alltime autonomously, using the power management module. 
The program language used for developing applications for the sensor nodes is 
C++. The compiler used on both Linux and Microsoft Windows environment was 
GNU Compiler Collection. “GCC, includes front ends for C, C Object-oriented, C++, 
Fortran, JAVA and ADA, as well as libraries for these languages (libstdc, libgcj, 
etc)” [16]. 
As a simulation environment Shawn was implemented[14]. For testing, 
configuration and deployment of applications developed in the nodes, the iShell tool 
[13] was adopted 
The iShell tool is the counterpart of the network firmware and it is used for testing 
and operation of the iSense nodes. The main benefit of using iShell is that it allows 
the simulation of Shawn applications without any extra effort, because applications 
are compiled according to different "targets". 
In order to keep all the needed tools in a rational context, which simplifies the task 
of programming, debugging and compilation of programs; Shawn and iShell have 
been integrated to Eclipse [15]. 
Shawn has been selected as a simulator for this work because of four parameters: 
scalability, completeness, fidelity and bridging. To be scalable, a simulator should 
manage such networks conformed up to thousands of nodes in a set according to 
diverse configurations. The simulations are intended to be as realistic as possible by 
CACIC 2011 - XVII CONGRESO  ARGENTINO DE CIENCIAS DE LA COMPUTACIÓN 1180
simulating the physical, data, encryption of messages, effects of wireless interference, 
limitations of the processor, etc. 
3 Results 
Several scenarios have been simulated in order to be set as a model in the sensors, 
having to do with communication and location, considering till 200 nodes deployed in 
a two square miles. Figure 3 shows the nodes with GPS (anchor nodes) as black. They 
"know" their location. The gray nodes are those that calculate its position by 
algorithms that relate to the position of the nodes anchor. 
 
 
Fig. 3 Location simulation with Shawn 
 
A great number of ready-to-run services and protocols are provided by iSense 
software which avoids the need of installing the applications node by node, etc. 
The fact that iSense WSN software allows to build applications to be run directly 
in the Shawn simulator, is considerably advantageous. With this tool, applications 
related to solar-powered sensors have been developed as well as applications for 
passive infrared sensors, accelerometers, temperature, light intensity and movement 
detection. In addition, all codes generated are ready to be implemented in a Shawn 
simulator. 
The iSense firmware has been imported into Eclipse, along with Shawn. In such an 
environment it is simple to select the coded file in C++ (.cpi) and to choose the type 
of processor used by the nodes. Thus, it generates the executable file compiled and 
linked with the corresponding libraries, either to nodes with JN5139R1 processor 
(like ours) or for Shawn simulator, see Figure 4. 
CACIC 2011 - XVII CONGRESO  ARGENTINO DE CIENCIAS DE LA COMPUTACIÓN 1181
 
 
 
 
  
Fig. 3 iSense firmware in the Eclipse C/C++ Development Environment 
4 Discussion 
Despite the fact that WSN have been largely studied in recent years, many of its 
issues are theoretical and they were not acquired in a practical field. Hence, when it 
comes for real applications on environmental surveillance, certain inconveniences are 
found as a rule. These inconveniences may occur affecting the network performance, 
when a trustworthy delivery and quality service are demanded. 
In this work, a WSN testbed has been thoroughly tested in normal weather 
conditions, behaving as a very robust and suitable tool for these tasks. During the 
elapsed time of the project, we have faced many challenges. So far, we have learnt 
that remote management of a WSN is indeed significant. 
The presence of multi-hop topologies in wireless communications scenarios is 
imposing its presence every day in our existence. The fundamental characteristic of 
these networks, unlike those we have studied many times till now, are its limitations 
both in terms of lifetime and the computing power of the nodes. Another important 
consideration is that the development of WSN applications is still complex, being a 
challenge for distributed applications, and integrated programming.  
There exist some elements that further complicate the situation, such as resource 
limitations of the nodes, the unpredictable influence of the environment, and the size 
of the networks. Given that the project specifications are normally subject to 
modifications and applications that evolve over time, we find that changes are 
inherent to the development of the technology considered. This should be taken into 
account considering that changes in projects are usually long, expensive and 
inaccurate. 
CACIC 2011 - XVII CONGRESO  ARGENTINO DE CIENCIAS DE LA COMPUTACIÓN 1182
It can assuredly be foreseen that in the near future the WSN will be equipped with 
more powerful nodes enabling longer monitoring time, and allowing interdisciplinary 
work that should involve groups from data networks, as well as from distributed 
processing. 
References 
1. Weiser, Mark: The computer for the 21st century. : Scientific American (International 
Edition), Vol. 265, pp. 66--75, (1991) 
2. Mahadev, Satyanarayanan: Pervasive computing: Vision and challenges.. IEEE Personal 
Communications, Vol. 8. (2001) 
3. D. Culler, D. Estrin, and M. Srivastava: Overview of sensor networks. IEEE Computer, pp. 
37(8):41–49 (2004),  
4. Telecommunication Standardization Sector: Technology Watch Briefing Report Series #4., 
p. 10 (2008) 
5. US-National Research Council. Embedded, Everywhere: A Research Agenda for Networked 
Systems of Embedded Computers. Washington, D.C. : NATIONAL ACADEMY PRESS,. 
0-309-07568-8. (2001) 
6. Guinard, D., et al.: Towards physical mashups in the Web of Things. Sixth International 
Conference on Networked Sensing Systems (INSS). pp. 1--4. (2009) 
7. E. Egea-López, J. Vales-Alonso, A. S. Martínez-Sala, P. Pavón-Mariño, J. García-Haro: 
Simulation Tools for Wireless Sensor NetworksSummer Simulation Multiconference. pp. 
1--9. (2005). 
8. Lei Shu, Chun Wu, Yan Zhang, Jiming Chen, Lei Wang, and Manfred Hauswirth.: NetTopo: 
Beyond Simulator and Visualizer for Wireless Sensor Networks. Second International 
Conference on Future Generation Communication and Networking, vol.1, pp.17-20. 
(2008). 
9. H. Hellbrück, M. Lipphardt, D. Pfisterer, S. Ransom and S. Fischer: Praxiserfahrungen mit 
MarathonNet - Ein mobiles Sensornets im Sport. PIK - Praxis der Informationsverarbeitung 
und Kommunikation, Vol. 4, pp 195-202 (2006) 
10. Szewczyk, R., Mainwaring, A., Polastre, J., Anderson, J., and Culler, D. :An analysis of a 
large scale habitat monitoring application. 2004. Proceedings of the 2nd international 
conference on Embedded networked sensor system, SenSys 2004. 
11. Vijay, Kumar: Sensor: the atomic computing particle. : SIGMOD Rec., 2003, Vol. 32, pp. 
16-–21. 
12. Khan, S.U. and Hamid, M.S. [ed.]: On the optimal number of smart dust particles INMIC 
2003. 7th International Multi Topic Conference. pp. 472 – 475 (2003). 
13. Coalesenses GMbH, http://www.coalesenses.com 
14. Shawn, http://shawnwiki.coalesenses.com 
15. Eclipse, http://www.eclipse.org 
16. C++ Library Database http://c-plusplus.org 
 
CACIC 2011 - XVII CONGRESO  ARGENTINO DE CIENCIAS DE LA COMPUTACIÓN 1183
