Ordenaci√≥n de tuplas para la selecci√≥n de m√∫ltiples e cursos similares
Ôªø
La b√∫squeda de cursos a distancia (√≥ e-cursos) es un recurso cada vez m√°s utilizado por los 
estudiantes. En este trabajo, se propone una manera de ordenar los resultados de una b√∫squeda 
almacenados en una base de datos relacional. La propuesta considera las preferencias y los aspectos 
culturales del usuario para el ordenado de los resultados. Este ordenamiento consiste en: la 
conversi√≥n de los valores de todos los atributos de los cursos a valores num√©ricos entre 0 y 1; la 
generaci√≥n de una tupla que represente el curso m√°s adecuado para el usuario; y el c√°lculo de la 
distancia eucl√≠dea entre esta tupla ideal y las tuplas representativas de la caracter√≠sticas de cada 
curso. Finalmente, los resultados se ordenan en forma ascendente seg√∫n esta distancia.  
 
Palabras clave: B√∫squeda de cursos,  e-cursos  
 
1045
 1 Introducci√≥n  
 
Los estudiantes poseen distintas preferencias y est√°n inmersos en un entorno cultural. Cuando un 
usuario obtiene, como resultado de una b√∫squeda, un conjunto respuesta, algunos de los resultados 
ser√°n m√°s cercanos a sus preferencias y caracter√≠sticas culturales que otros. En este trabajo se 
propone una forma de ordenar estas respuestas en forma descendente en funci√≥n de la mayor 
cercan√≠a a estas preferencias. Este trabajo se realiza dentro del marco del Proyecto EduCa [1], cuyo 
objetivo es el desarrollo de un sistema para la b√∫squeda de cursos ofrecidos por una federaci√≥n de 
universidades, en modalidad a distancia. Esta b√∫squeda est√° basada en el uso de ontolog√≠as para la 
recuperaci√≥n de los cursos de acuerdo a los aspectos culturales y preferencias de los usuarios.  
Los aspectos culturales de un usuario son sus preferencias y modos de comportamiento 
determinados por la cultura del usuario y/o su pa√≠s de origen. En este proyecto, los aspectos 
culturales son caracter√≠sticas que distinguen las preferencias de estudiantes y profesores de distintas 
regiones. Algunos de los aspectos culturales son: Grado de impaciencia, Actitud, Idioma, Forma de 
comunicaci√≥n, Estilos de aprendizaje, Actividades. Todos estos aspectos culturales se especifican 
en la Ontolog√≠a de Aspectos Multiculturales [2], que sigue el est√°ndar de metadata de objetos de 
aprendizaje (LOM: Learning Object Metadata) y usa OWL [3]. La federaci√≥n de universidades 
provee un repositorio de cursos enriquecido con metadata. Tanto las preferencias y caracter√≠sticas 
culturales de los usuarios, como los metadata de los cursos se almacenan en una base de datos 
relacional.  
Un problema muy importante en la b√∫squeda de informaci√≥n es el ordenamiento de los resultados 
obtenidos. En una b√∫squeda t√≠pica, se puede obtener un conjunto grande de documentos resultantes, 
lo que hace dif√≠cil encontrar el que mejor se adecua a las necesidades del usuario. Este problema se 
hace a√∫n m√°s evidente cuando el objetivo es encontrar un curso espec√≠fico que satisfaga, adem√°s del 
tema de inter√©s, los conocimientos y caracter√≠sticas personales y culturales del usuario. Por ejemplo, 
que el curso est√© en un idioma que conozca (y preferentemente maneje fluidamente), que cubra sus 
condiciones personales y profesionales (hol√≠stico visual, grado de impaciencia, actitud), etc. Ya 
sean caracter√≠sticas propias de su cultura, de su conocimiento general o preferencias personales, 
estas condiciones afectan en mayor o menor grado, la importancia y el grado de conformidad que 
un usuario tendr√° con un curso. Estas caracter√≠sticas son diferentes en cada usuario, y mientras uno 
puede preferir un cierto curso, otro preferir√≠a uno diferente. Por esto, es importante devolverle a 
cada usuario los cursos del tema buscado, ordenados de acuerdo a sus preferencias. Si los resultados 
de una b√∫squeda no estuvieran ordenados, seguramente el usuario podr√≠a elegir alguno de los 
primeros que mire, y ser√≠a muy dif√≠cil que encuentre r√°pidamente el m√°s adecuado de esta forma. 
Dado un conjunto de cursos y una consulta de un usuario, el objetivo es encontrar todos los cursos 
correspondientes al tema de inter√©s del usuario y que se aproximen a su perfil definido por sus 
preferencias y caracter√≠sticas culturales. Luego de realizada la b√∫squeda tem√°tica [4] [5], se ordenan 
las tuplas resultantes de la consulta, para mostrarle al usuario los cursos solicitados en orden 
descendente, de acuerdo a las preferencias y los aspectos culturales del mismo. 
El resto del trabajo se organiza de la siguiente forma, en la Secci√≥n 2 se presentan algunos 
conceptos b√°sicos; en la Secci√≥n 3 se muestran trabajos relacionados, en la Secci√≥n 4  se describe la 
metodolog√≠a propuesta y en la Secci√≥n 5 se presenta un caso de uso. Finalmente, en la Secci√≥n 6 
est√°n las conclusiones.  
 
 
1046
 2 Conceptos B√°sicos   
 
En el proceso de ordenamiento tratado en este trabajo, se utilizan la l√≥gica difusa (fuzzy logic) y la 
distancia. 
La l√≥gica difusa es una rama de la l√≥gica que usa grados de pertenencia a conjuntos en lugar de 
solo dos valores de pertenencia verdadero √≥ falso. Est√° fundamentada en la teor√≠a de los Conjuntos 
Difusos, seg√∫n la cual el grado de pertenencia de un elemento a un conjunto est√° determinado por 
una funci√≥n de pertenencia, que puede tomar todos los valores reales comprendidos en el intervalo 
[0,1]. Los esquemas de razonamiento utilizados son esquemas de razonamiento aproximados, que 
intentan reproducir los esquemas del cerebro humano, donde un objeto puede ser un miembro 
parcial en un conjunto. Formalmente: 
Dado un conjunto X, un conjunto difuso A de X es caracterizado por una funci√≥n de pertenencia ¬µA 
(x), que asocia cada elemento x con un grado de pertenencia en A. 
¬µA (x) : X ‚Üí [0,1]      donde        0 ‚â§ ¬µA (x) ‚â§ 1                     ‚àÄ x ‚àà X 
Entonces, dado el universo X cuyos elementos son {x1, x2,‚Ä¶xn}, el conjunto difuso A define la 
funci√≥n de pertenencia ¬µA (x), que le asigna a cada elemento xi de X un grado de pertenencia a A 
entre [0,1].  
Una representaci√≥n gr√°fica es la siguiente:  
 
 
 
 
 
 
 
Figura 1: Funci√≥n de pertenencia al subconjunto difuso media 
 
Un curso que contiene entre 30% y 70% de im√°genes es un curso con pertenencia de grado 1 al 
conjunto difuso mediana cantidad de im√°genes. En cambio, un curso con un 27% de im√°genes, 
tiene un grado de pertenencia de 0,9 al conjunto mediana cantidad de im√°genes. Cualquier curso 
con menos de un 15% de im√°genes tiene un grado de pertenencia 0 a dicho conjunto.  
La l√≥gica difusa puede usarse para representar variables ling√º√≠sticas, es decir, variables cuyos 
valores son palabras o sentencias en lenguaje natural. Cada valor de una variable ling√º√≠stica se 
interpreta como un subconjunto difuso de un universo de discurso. La l√≥gica difusa permite 
representar el significado de modificadores ling√º√≠sticos (adverbios) como ‚Äúmuy‚Äù, ‚Äúmas o menos‚Äù, 
‚Äúun poco‚Äú, etc. Por ejemplo, dado el conjunto difuso A representado por ¬µA,  ‚Äúmuy A‚Äù se representa  
elevando al cuadrado la funci√≥n de pertenencia: (¬µA)2. 
Otro concepto utilizado es el de espacio m√©trico. Un espacio m√©trico es un conjunto de puntos M 
con una funci√≥n distancia, √≥ m√©trica,  asociada  d: M x M ‚Üí  (donde  es el conjunto de los 
n√∫meros reales).  
0 
0.5 
 1 
70 
Porcentaje de im√°genes del curso 
Grado de pertenencia 
15 35 30 80 
0.9 
1047
 Para todo x, y, z en M, esta funci√≥n debe satisfacer las siguientes condiciones: 
d(x, y) ¬ï 
d(x, x) = 0     (reflexividad)  
si   d(x, y) = 0   entonces   x = y     (identidad de los indiscernibles)  
d(x, y) = d(y, x)     (simetr√≠a)  
d(x, z) ¬îG[\G\]    (desigualdad triangular).  
Existen muchas funciones que cumplen con la definici√≥n de funci√≥n de distancia. La distancia m√°s 
usual en Rn  es la distancia eucl√≠dea, que es la que se utiliza en este trabajo:  
d((x1, x2,...,xn),((y1, y2,...,yn))=((x1-y1)2+(x2-y2)2+...+(xn-yn)2)1/2 
En particular, la distancia eucl√≠dea en R2 es: 
d((x1, x2),((y1,y2))=((x1-y1)2+(x2-y2)2)1/2 
Otras distancias conocidas en R2 son: 
d((x1, x2),((y1,y2))=|x1-y1|+|x2-y2| (City-block distance) 
d((x1, x2),((y1,y2))=max{|x1-y1|,|x2-y2|} (Chessboard distance) 
 
  
3 Trabajos relacionados  
 
Existen diversas propuestas para el ordenamiento de resultados de consultas en bases de datos 
relacionales, pero todav√≠a no hay ninguna que marque un est√°ndar.  
En [6] se hace una analog√≠a entre bases de datos relacionales y algoritmos de an√°lisis de links,  
utilizando grafos de bases de datos para ordenar las tuplas similares a los grafos que se utilizan para 
ordenar p√°ginas Web. [7] introduce el m√©todo SVR (Structured Value Ranking) para ordenar 
resultados de consultas en bases de datos relacionales muy actualizadas. En [8] se adaptan t√©cnicas 
de la recuperaci√≥n de informaci√≥n a bases de datos relacionales. En [9], se presenta un algoritmo de 
ordenamiento de respuestas a consultas con joins seg√∫n un puntaje total, el cual se computa 
combinando los puntajes individuales. 
A diferencia de estos trabajos, aqu√≠ se propone utilizar t√©cnicas de l√≥gica difusa y calcular las 
distancias entre tuplas de una tabla de una base de datos relacional. T√©cnicas como las de [6] no 
fueron tenidas en cuenta como soluci√≥n por ser demasiado complejas para lo que este trabajo 
requiere. La soluci√≥n de [9], tampoco es v√°lida pues las tuplas a ordenar est√°n todas en la misma 
relaci√≥n. Finalmente, se estima que la soluci√≥n presentada en este trabajo es m√°s adecuada para el 
tipo de problema presentado aqu√≠ que las presentadas en [8], dado que no se adaptar√°n t√©cnicas de 
recuperaci√≥n de informaci√≥n, y en [7], dado que la base de datos usada aqu√≠ no es de actualizaci√≥n 
intensiva. 
 
 
4 Metodolog√≠a propuesta   
 
1048
 El repositorio de cursos contiene, adem√°s de la informaci√≥n sobre su contenido tem√°tico, otros 
metadata tales como idioma, interactividad, y cantidad de im√°genes. Dada una consulta de un 
usuario, el conjunto de cursos resultante que satisface la b√∫squeda tem√°tica, puede √≥ no satisfacer 
las preferencias de este usuario.  
En este trabajo se propone generar una lista ordenada teniendo en cuenta cu√°nto se acercan las 
caracter√≠sticas de los cursos que cumplen las condiciones tem√°ticas de b√∫squeda, a las preferencias 
y caracter√≠sticas de los usuarios. As√≠, se tiene una relaci√≥n r con la informaci√≥n de las caracter√≠sticas 
descriptivas de todos los cursos que satisfacen la condici√≥n tem√°tica de b√∫squeda. Adem√°s, a partir 
de la consulta se genera una relaci√≥n user formada por una √∫nica tupla que llamaremos tupla ideal, 
que corresponden al curso ideal seg√∫n las preferencias y los aspectos culturales de este usuario. Es 
decir, se tienen las relaciones  
r = ( Identificaci√≥nCurso, Caracter√≠stica1, ... , Caracter√≠stican)  
user = ( Identificaci√≥nUser, Caracter√≠sticaUser1, ... , Caracter√≠sticaUsern) 
Se calcula la distancia de cada una de las tuplas de r con respecto a la tupla ideal, de user, que 
representa las preferencias del usuario, y luego se ordenan estas tuplas en orden ascendente seg√∫n 
esta distancia. Aquellos cursos con valores menores en esta distancia aparecen primero y son los 
que m√°s se acercan a las preferencias y caracter√≠sticas del usuario.  
Es decir, se obtiene una relaci√≥n s de la forma:  
s = ( Identificaci√≥nCurso, Distancia ) 
donde cada tupla v ‚àà s es de la forma  v = (t [Identificaci√≥nCurso], d (t, u) ) 
donde t ‚àà r , u es la √∫nica tupla de user, y d es la funci√≥n elegida para el c√°lculo de la distancia.  
Para el c√°lculo de estas distancias, se propone primero convertir los valores de los atributos a 
valores en el rango entre 0 y 1. Los datos a tener en cuenta para el ordenamiento provienen de los 
aspectos culturales y las preferencias del usuario, adem√°s de las propiedades de los cursos. Estos 
datos tienen atributos de diversos tipos: num√©rico, car√°cter, booleano, etc. Algunos de estos 
atributos pueden contener valores discretos √≥ rangos. Por ejemplo, no se dice que un determinado 
curso ‚Äútiene pr√°ctica‚Äù o ‚Äúno tiene pr√°ctica‚Äù, sino que un curso tiene un determinado porcentaje de 
pr√°ctica. Un porcentaje entre 0% y 30%  indica que el curso ‚Äútiene poca pr√°ctica‚Äù; entre 30% y 70% 
‚Äútiene bastante pr√°ctica‚Äù, y entre 70% y 100% ‚Äútiene mucha pr√°ctica‚Äù. Adem√°s, la pertenencia de un 
curso a uno de estos rangos puede ser analizada desde la l√≥gica difusa, es decir considerando grados 
de pertenencia. Por ejemplo, un curso que tiene 75% de pr√°ctica es un curso que ‚Äútiene mucha 
pr√°ctica‚Äù, pero un curso con 69% de pr√°ctica, que en la l√≥gica bivaluada no cumplir√≠a el requisito de 
tener mucha pr√°ctica, considerando la l√≥gica difusa se podr√≠a pensar que tiene un grado de 
pertenencia 0,9 a ‚Äútiene mucha pr√°ctica‚Äù y por lo tanto ser√≠a importante tambi√©n recuperarlo. 
Entonces, la primera decisi√≥n de dise√±o es convertir los valores de los atributos a valores num√©ricos 
en el intervalo [0,1]. Para realizar esta conversi√≥n se propone una transformaci√≥n directa para los 
tipos de datos num√©ricos, porcentual y booleano, como se muestra en la tabla de la Figura 2.   
En la consulta, algunas de las caracter√≠sticas pueden ser expresadas por el usuario en forma difusa. 
Por ejemplo, puede decir que le interesan cursos con mucha pr√°ctica. Entonces, se considera la 
utilizaci√≥n de l√≥gica difusa, para establecer si el valor de cierto atributo de un curso pertenece al 
rango pedido por el usuario, o si tiene un grado de pertenencia. 
Para el ejemplo de la cantidad de pr√°ctica de un curso, los posibles valores son poca - bastante - 
mucha. La funci√≥n de pertenencia para el rango mucha pr√°ctica es la que se presenta en la Figura 3.  
 
1049
 Tipo de datos F√≥rmula para normalizar valores Ejemplo 
Num√©rico v / n 
donde: v : es el valor del atributo 
            n : valor m√°ximo que puede tomar el atributo 
Edad 
Porcentual v / 100 
donde:  v : es el valor del atributo 
Porcentaje de pr√°ctica que 
tiene el curso  
Booleano los valores que puede tomar son : True = 1      
                                                       False = 0 
Nacido en Argentina 
 
Figura 2: Conversi√≥n de los valores de los atributos 
 
 
 
 
 
 
 
 
 
 
Figura 3: Funci√≥n de pertenencia al subconjunto difuso mucha 
 
Si un curso tiene 35% de pr√°ctica, tienen un grado de pertenencia de 0.25 al conjunto mucha. Si 
tiene 80% de pr√°ctica el grado de pertenencia es 1, y si tiene menos de 30%  es 0. 
La cantidad de pr√°ctica (poca, media, mucha) que se quiere que tenga el curso buscado, ser√° elegida 
por el usuario al hacer la b√∫squeda. Para ordenar los cursos  se utiliza la funci√≥n de pertenencia del 
conjunto elegido por el usuario para convertir el valor del atributo cantidad de pr√°ctica. Es decir, si 
el usuario quiere que el curso tenga mucha pr√°ctica, se usar√° la funci√≥n mucha para encontrar el 
grado de pertenencia del curso al conjunto mucha. Es decir, si un curso encontrado tiene 80% de 
pr√°ctica, el grado de pertenencia para ese curso ser√° de 1. Realizada esta conversi√≥n de los 
atributos, se calculan las distancias de r respecto a user.  
Para el ordenamiento de las tuplas representativas de los cursos, se calcula el peso de cada una de 
ellas, con respecto a la tupla ideal que representa el perfil del usuario. Para este c√°lculo se trabaja 
con varias tuplas simult√°neamente. Estas tuplas tienen sus valores convertidos al intervalo [0,1].  
En el caso que el usuario no especifique un valor de inter√©s para un atributo, se asigna como valor 
de dicho atributo el valor de 0.5, que es el valor medio del intervalo [0, 1]. Esta decisi√≥n de dise√±o, 
fue hecha en base a la suposici√≥n de que si el usuario no especifica respuesta puede haber sido 
porque no entendi√≥ la pregunta o porque esa opci√≥n no fue de su inter√©s, entre otras posibilidades. 
No se eligi√≥ asignar el valor cero, porque en el procedimiento que aqu√≠ se propone se interpretar√≠a 
como un valor de atributo ‚Äúindeseable‚Äù y no como un valor de atributo ‚Äúindefinido‚Äù. 
Los atributos de la relaci√≥n user tienen valores que provienen de distintas fuentes: las preferencias 
indicadas por el usuario en su perfil, y un conjunto de pesos asociados a estos atributos. Adem√°s, 
los atributos de las tuplas correspondientes a los cursos tienen valores que provienen de las 
0.25 
80 0 
0.5 
 1 
70 Porcentaje de 
pr√°ctica del 
curso 
Grado de 
pertenencia 
15 35 30 
1050
 caracter√≠sticas propias del curso. Cada uno de estos elementos se puede considerar como un vector. 
El vector de pesos de los atributos, es el que indica qu√© atributo es m√°s importante que otro, 
suponiendo que no son de igual importancia todos los atributos. Por ejemplo, para el usuario puede 
ser m√°s importante que el idioma en que est√© el curso sea el de su pa√≠s de nacimiento, que el hecho 
que dicho curso tenga muchas figuras. Es decir, le otorga m√°s peso al atributo ‚Äúidioma materno‚Äù 
que al atributo ‚Äúhol√≠stico visual‚Äù.  
Obtenida la tupla representativa del curso ideal user buscado por el usuario, se calculan las 
distancias entre √©sta y cada una de las tuplas de los cursos de la relaci√≥n r, a fin de ordenar obtener 
la relaci√≥n s con los resultados ordenados en forma creciente de acuerdo a esta distancia.  
 
 
5 Caso de uso  
 
Supongamos que la informaci√≥n descriptiva de cada curso es la siguiente: idioma (que puede tomar 
el valor ingl√©s √≥ espa√±ol), cantidad de im√°genes, cantidad de pr√°ctica y cantidad de teor√≠a (todos en 
valor porcentual), y si el curso es interactivo √≥ no.  
Para una consulta del usuario, se tiene adem√°s informaci√≥n de las caracter√≠sticas del usuario y de 
sus caracter√≠sticas culturales: nivel de conocimiento del idioma ingl√©s y nivel de conocimiento del 
idioma espa√±ol (ambos en porcentaje), preferencia por cantidad de im√°genes, cantidad de pr√°ctica y 
cantidad de teor√≠a (las tres indicadas con mucha, media √≥ poca), y preferencia por que el curso sea 
interactivo √≥ no lo sea. Adem√°s, se tiene informaci√≥n de la importancia √≥ peso de cada atributo 
respecto a los otros atributos. 
Supongamos un usuario que busca cursos de dibujo, quiere que los cursos tengan gran cantidad de 
im√°genes, que sean interactivos y que tengan mucha pr√°ctica, y no especifica nada acerca de la 
teor√≠a. Dado que es un estudiante de arte sus caracter√≠sticas son: hol√≠stico visual, poco interesado en 
la teor√≠a y acostumbrado a los cursos interactivos. Este usuario es ingl√©s, y habla medianamente 
bien el espa√±ol. Entonces, las preferencias de este usuario son:  
 
Ingl√©s Espa√±ol Cant. im√°genes Cant. pr√°ctica Cant. Teor√≠a Interactivo 
si medio mucha mucha null si 
 
Realizada la conversi√≥n de los atributos, seg√∫n la propuesta presentada en el punto 3, se obtiene la 
siguiente tupla:  
 
1 0.6 1 1 0.5 1 
 
Y si el vector de importancia de los atributos es: 
 
1 0.6 0.54 0.66 0.44 0.46 
 
1051
 La tupla del curso ideal para el usuario, resulta de promediar los valores componente a componente: 
 
Ingl√©s Espa√±ol Cant. im√°genes Cant. pr√°ctica Cant. Teor√≠a Interactivo 
1 0.6 0.77 0.83 0.47 0.73 
 
La b√∫squeda tem√°tica se realiza y devuelve cuatro cursos.  
 
Curso Ingl√©s Espa√±ol Cant. im√°genes Cant. pr√°ctica Cant. Teor√≠a Interactivo 
Curso 1 1 0 0.1 0.4 1 0 
Curso 2 1 0 1 0.5 0.5 1 
Curso 3 0 1 0.5 0.5 1 0 
Curso 4 0 1 0.8 0.3 0.9 1 
 
El primer curso est√° en ingl√©s, es te√≥rico (tiene m√°s de 80% en teor√≠a), no es interactivo, tiene 40% 
de pr√°ctica, pero pocas im√°genes. El segundo curso est√° en ingl√©s, tiene muchas im√°genes, 50% de 
pr√°ctica, 50% de teor√≠a y es interactivo. Y el tercer curso est√° en castellano, tiene 50% de im√°genes, 
50% de pr√°ctica, es sumamente te√≥rico y no es interactivo. El cuarto curso est√° en castellano, tiene 
poca pr√°ctica, muchas im√°genes, mucha teor√≠a y es interactivo. 
Entonces, las distancias con el curso ideal seg√∫n el usuario son:   
 
Curso Distancia al curso ideal 
Curso 1 d1 = ((0)2 + (0.16)2 + (0.77-0.1)2 + (0.83-0.4)2 + (0.47-1)2 + (0.73)2)1/2    =   1.34 
Curso 2 d2 = ((1-1)2 + (0.6)2 + (0.77-1)2 + (0.83-0.5)2 + (0.47-0.5)2 + (0.73-1)2)1/2   =   0.77 
Curso 3 d3 = ((1-0)2 + (0.6-1)2 + (0.77-0.5)2 + (0.83-0.5)2 + (0.47-1)2 + (0.73-0)2)1/2    =   1.47 
Curso 4 d4 = ((1-0)2 + (0.6-1)2 + (0.77-0.8)2 + (0.83-0.3)2 + (0.47-0.9)2 + (0.73-1)2)1/2   =   1.30 
 
De esta forma, ordenados en forma ascendente en funci√≥n de esta distancia, el orden de los cursos 
presentados al usuario es: 
   Curso 2 
   Curso 4 
   Curso 1 
   Curso 3 
Se pueden hacer varias observaciones. En la tupla correspondiente al curso ideal, han quedado tanto 
el idioma ingl√©s como el idioma espa√±ol, y ambos con valores altos. Esto siempre quitar√° valor a los 
cursos: a los que est√°n en espa√±ol por tener bajo valor de ingl√©s, y a los que est√°n en ingl√©s por tener 
bajo valor de espa√±ol.  
Se puede notar adem√°s que el Curso 4 se muestra antes que el Curso 1, a pesar que el Curso 1 est√° 
1052
 en ingl√©s y el 4 en espa√±ol. Esto ocurre porque el usuario tambi√©n habla un poco de espa√±ol, y el 4 
cumple m√°s requisitos que el Curso 1. 
 
 
6 Conclusi√≥n y trabajo futuro 
 
El objetivo de este trabajo es el ordenado de documentos que son devueltos por una b√∫squeda 
teniendo en cuenta modificadores tales como las caracter√≠sticas personales de un usuario y sus 
aspectos culturales. Para esto, se realiza una conversi√≥n tanto de los datos descriptivos de los cursos 
como de las caracter√≠sticas personales, los aspectos culturales y las preferencias del usuario, al 
rango [0, 1]. Luego se generan dos relaciones user y r. La primera contiene las caracter√≠sticas que 
deber√≠a tener un curso ideal para un usuario dado. La segunda contiene las tuplas con las 
caracter√≠sticas descriptivas de los cursos que cumplen con la condici√≥n tem√°tica. A continuaci√≥n, se 
calculan la distancia eucl√≠dea de cada tupla de r respecto a la tupla ideal en user, obteniendo as√≠ una 
forma sencilla y r√°pida para ordenar los resultados. Las pruebas de laboratorio realizadas hasta el 
momento han sido exitosas. Actualmente se est√° desarrollando un prototipo a fin de realizar una 
experimentaci√≥n con un gran n√∫mero de estudiantes, planteando el uso de condiciones reales, a fin 
de evaluar esta propuesta.  
 
 
