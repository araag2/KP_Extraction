Sistema Colaborativo de Revisión para el soporte de información de contexto en el marco C INCAMI
﻿en el marco C-INCAMI 
 
María Belén Rivera; Hernán  Molina; Luis Olsina  
 
Grupo de I+D en Ingeniería de Software 
Departamento de Computación, Facultad de Ingeniería, UNLPam, 
 
Email:  belenrs@yahoo.com, [hmolina,  olsinal]@ing.unlpam.edu.ar 
      
Resumen 
Cualquier organización decidida a implantar programas de medición y evaluación, con el objetivo 
de mejorar sus procesos y productos, podría beneficiarse si contara con un marco que defina de 
manera precisa, cada uno de los conceptos involucrados en tales actividades. De esta manera, seria 
viable la realización de análisis y comparaciones entre los distintos proyectos llevados a cabo y, 
además, efectuar recomendaciones más consistentes a nivel de organización. Si además de la 
información necesaria para llevar a cabo dichos programas, se considera el contexto en el cual el 
proyecto está enmarcado, los resultados finales y recomendaciones obtenidos serán mucho más 
robustos. La información contextual que se utilice en dichas actividades debería ser acordada. Un 
sistema de revisión es la clave para que la información de contexto provenga del consenso 
generalizado entre expertos del área. Se presenta en este trabajo un sistema de revisión que 
permitirá la discusión y consenso de la información de contexto relevante referida a las actividades 
que involucra el marco de medición y evaluación C-INCAMI. 
 
Palabras claves: INCAMI, medición, evaluación, contexto, aseguramiento de calidad, revisión 
colaborativa.  
 
1 INTRODUCCION 
En la implementación de proyectos de desarrollo de software, los procesos de medición suponen, 
junto con los de evaluación, una de las actividades principales previstas en los estándares para el 
control y el aseguramiento de la calidad1. Las organizaciones debieran promover programas de 
medición y evaluación como parte de la tarea de gestionar la calidad dentro de su línea de 
producción. Los procesos de medición son fundamentales dado que permiten cuantificar un 
conjunto de características deseadas acerca de un aspecto específico de algún ente en particular, 
proveyendo una visión más o menos detallada de su estado o condición. Por su parte, la evaluación 
interpreta los valores obtenidos en la medición. Para dichos procesos de medición y evaluación es 
necesario obtener datos cuantitativos, a partir de métricas de atributos de entes y la posterior 
interpretación de la medida a partir de indicadores. Es numerosa la información existente referida a 
la definición de métricas e indicadores, sin un claro consenso en cuanto a la terminología. En este 
sentido consideramos que la Ontología de Métricas e Indicadores presentada en [4] constituye una 
importante propuesta en el área de gestión calidad y un aporte valioso para las actividades 
implicadas en dicha gestión.  
Las organizaciones decididas a encarar un proyecto de medición y evaluación podrían 
beneficiarse al contar con un marco que permita definir e instanciar cada una de las actividades y 
                                                 
1
 Algunos estándares ISO tratan sobre calidad, procesos y evaluación: ISO 9126-1:2001 relacionada a la calidad del 
producto software, ISO 15504:2003 : proceso de calidad, ISO 14598:1998 establece el proceso de evaluación,  ISO 
15939:2002 define el proceso de medición 
Calle 9 esq. 110, (6360) General Pico, La Pampa
XIII Congreso Argentino de Ciencias de la Computación
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
 
IV Workshop de Ingeniería de Software y Bases de Datos
_________________________________________________________________________
 
 
518
conceptos que ellas implican. Si bien hay estudios2 en el tema, en este trabajo nos enfocaremos en 
el marco de medición y evaluación orientado a propósitos y centrado en la organización, 
denominado INCAMI [5]. INCAMI se fundamenta en el método WebQEM (Web Quality 
Evaluation Method) [7], el cual se basa en modelos y métricas de calidad y se centra en la 
evaluación cuantitativa de características y atributos de entidades. De esta manera, INCAMI puede 
ser utilizado en el diseño de requerimientos no funcionales, en la selección de métricas para 
cuantificar los atributos de las entidades involucradas y en la interpretación de los valores 
correspondientes mediante indicadores, conforme a la necesidad de información de nivel 
organizacional y de proyecto enunciada. Como base conceptual tiene la Ontología de Métricas e 
Indicadores mencionada anteriormente. Adicionalmente, ha sido diseñada una herramienta, 
INCAMI Project Manager [5] (referirse a la Figura 1), que puede ser utilizada como soporte en el 
proceso de medición y evaluación de entidades, en proyectos de software y web de una 
organización. Hace uso del Catálogo Organizacional INCAMI [3] [6] que contiene las definiciones 
e instancias de los elementos de información, comunes a toda la organización, necesarios para llevar 
adelante dicho proceso. Esta herramienta a su vez permite, para un proyecto de medición y 
evaluación, no sólo guardar los valores finales de las mediciones y evaluaciones sino también los 
metadatos asociados. Sin este recaudo, el análisis y la comparación de datos podrían no realizarse 
consistentemente entre los diferentes proyectos de una organización.  
El repositorio de medición del catálogo organizacional (ver Figura 1), guarda instancias de 
métricas y otros conceptos relacionados que han sido concensuados a través de un proceso 
colaborativo de discusión. Dicho proceso se encuentra soportado por el prototipo del Sistema de 
Revisión de Métricas [1]. Con este sistema de revisión, se garantiza que todos los datos 
almacenados, relacionados a métricas y al resto de los conceptos, han sido acordados entre expertos 
y/o interesados de la organización, en el ámbito de calidad y son aquellos útiles a la organización, y 
se asegura que no habrá definiciones ambiguas o carentes de  sentido, en el momento de usarlos en 
la etapa de medición. 
 
Figura 1: Esquema de los subsistemas principales del sistema que soporta a la Medición y Evaluación  basado en 
contexto 
  
 
                                                 
2
 Particularmente GQM (“Goal Question Metrics”) enfoque para la medición orientada a lograr metas en una 
organización. Permite a los tomadores de decisión, elegir aquellas métricas que se relacionen a las metas más 
importantes de los problemas más urgentes. Su desventaja reside en que no parte de una base conceptual bien definida 
del dominio de métricas e indicadores y el proceso de interpretación de las medidas de las métricas no está claramente 
definido. 
XIII Congreso Argentino de Ciencias de la Computación
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
 
IV Workshop de Ingeniería de Software y Bases de Datos
_________________________________________________________________________
 
 
519
C-INCAMI (Contextual INCAMI) constituye una propuesta para anexar, al marco descrito 
anteriormente, información relativa al contexto de las entidades a medir y evaluar, dado que 
considera que dicha información es un factor clave en el uso e interpretación de la información a 
utilizar en los procesos de medición y evaluación. Así como fue necesario que la información 
referida a métricas, almacenada en su catálogo correspondiente, sea proveniente del consenso 
general de expertos en el área, será requisito, también en este caso, que la información de contexto 
en C-INCAMI sea almacenada en sus catálogos correspondientes, luego de pasar por un proceso de 
revisión similar al del caso del marco INCAMI. Se presenta en este trabajo una extensión del actual 
sistema de revisión de métricas para incluir los elementos de información relacionados a la 
información de contexto (los mismos serán analizados en la sección 2). El nuevo sistema, al igual 
que el de métricas, permitirá discutir, consensuar y finalmente agregar a un catálogo de contexto, la 
información de contexto relevante según las necesidades de la organización (ver Figura 1).  
El resto del artículo se organiza de la siguiente manera: la sección 2 presenta una 
introducción al marco INCAMI, así como al modelo conceptual de contexto propuesto para CINCAMI. La sección 3 analiza principios básicos de herramientas colaborativas, describe las piezas 
a discutir y el proceso de discusión llevado a cabo. Luego, en la sección 4, se ilustrará con un caso 
práctico el mecanismo de discusión planteado. Los comentarios finales referidos este trabajo serán 
presentados en la sección 5. 
 
2 INFORMACIÓN DE CONTEXTO EN EL MARCO C-INCAMI  
 
2.1 Introducción al marco  INCAMI 
El marco INCAMI define un conjunto de conceptos relacionados con la medición y evaluación de 
requerimientos no funcionales en proyectos de software y web, como parte de las actividades de 
aseguramiento de calidad de una organización. INCAMI está basado en una ontología [4] que 
define de forma explícita estos conceptos, así como sus atributos y relaciones, y, también en el 
método WebQEM [7]. Los conceptos principales del marco son Necesidad de Información, Modelo 
de Concepto, Atributo, Métrica e Indicador. INCAMI es soportado por un catálogo organizacional 
que contiene instancias de los conceptos definidos en el marco ofreciendo un mecanismo de reuso 
para permitir una mejor consistencia entre los resultados provenientes de diferentes proyectos en la 
organización. 
INCAMI está estructurado en base a las actividades o fases a realizar en el proceso de 
medición y evaluación según la metodología WebQEM. La primera fase corresponde a la definición 
y especificación de requerimientos. Este módulo trata con la definición de la necesidad de 
información (es decir, el foco de la evaluación) y el diseño de los requerimientos no funcionales, 
que servirán como guías para las actividades posteriores de medición y evaluación (ver Figura 2). 
Instancias de conceptos tales como necesidad de información, entidad, atributos, entre otros, son 
recuperadas del catálogo organizacional. 
La fase siguiente corresponde al diseño e implementación de la medición. Este módulo trata 
con la definición de las métricas que serán útiles para cuantificar los atributos, que en la etapa 
anterior se identificaron como parte de la especificación de requerimientos, y que son de especial 
interés en el proyecto, dado que constituyen las características que se medirán para el ente a evaluar, 
considerando la necesidad de información establecida (es decir, el objetivo final de la evaluación).  
XIII Congreso Argentino de Ciencias de la Computación
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
 
IV Workshop de Ingeniería de Software y Bases de Datos
_________________________________________________________________________
 
 
520
type = 
{own,standard,mixture}




Entity
name
description
EntityCategory
name
description
superCategory 1 1..*
belongs_to
Attribute
name
definition
objective
1..*
1..*
asociated_with
InformationNeed
purpose
viewpoint
contextDescription
11
-objectspecifies
ConceptModel
name
specification
references[]
type
constraints
CalculableConcept
name
definition
references[] 0..*
1..*
subconcept
1..*
1 combines
1..*
1
-focus
described_by
0..*
1
represented_by



 
Figura 2: Modelo Conceptual de Requerimientos 
 
Para cada métrica se debe seleccionar la escala y el método de medición o cálculo (según 
sea directa o indirecta la métrica), tal como se muestra en el modelo de la Figura 3. Estas métricas 
serán recuperadas del catálogo de métricas de la organización. Finalmente, en la etapa de 
evaluación, estas métricas deben ser interpretadas a través de indicadores con el objetivo de evaluar 
o estimar el grado de conformidad que los requerimientos propuestos alcanzaron. Es en este 
momento cuando deben seleccionarse, del catálogo de evaluación, los indicadores que interpretarán 
cada métrica que cuantifica a cada atributo correspondiente en el diseño de los requerimientos no 
funcionales. Los indicadores contienen también una escala y una función o algoritmo a través del 
cual será posible interpretar el valor de la métrica, con ayuda también de un criterio de decisión, que 
establecerá umbrales de aceptabilidad al valor obtenido. 
 
Metric
name
valueInterpretation
definition
references
accuracy
DirectMetric
MeasurementMethod
type = {Objetive, Subjetive}
includes
Measure
value
Attribute
name
definition
objetive
references
Scale
<<enum>> scaleType
valueType = {Symbol, Integer,Float}
Measurement
timePoint
1 1
produces
1
1..*quantifies 1
contains
1
0..*refers_to
CalculationMethod
IndirectMetric
2..*
related_metrics






Tool
name
description
version
provider
Method
name
specification
references 0..*
1..*
automated_by

CategoricalScale
allowedValues
NumericalScale
type = {continuous, discrete}
Unit
name
description
1
1..*
expressed_in

 
Figura 3: Modelo Conceptual de Medición 
 
2.2 Modelo C-INCAMI (Contextual INCAMI) 
La propuesta C-INCAMI pretende incorporar al marco INCAMI la información que describa el 
contexto en el cual se llevan a cabo las actividades de medición y evaluación con la intención de 
XIII Congreso Argentino de Ciencias de la Computación
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
 
IV Workshop de Ingeniería de Software y Bases de Datos
_________________________________________________________________________
 
 
521
mejorar la coherencia y consistencia en el uso e interpretación de la información manipulada en 
tales actividades. 
El modelo propuesto está compuesto por dos espacios de información diferentes: el espacio 
de elementos del dominio (el marco INCAMI existente) y el espacio de elementos de contexto. Los 
conceptos del dominio de INCAMI son contextualizados estableciendo relaciones con elementos 
del dominio de contexto. Tal como se expresa en la propuesta C-INCAMI [2], la necesidad de 
información (InformationNeed) incluye un objeto Context (ver Figura 4) que contendrá las 
instancias de las propiedades (INCAMIContextProperty) para describir el contexto relevante en el 
cual se lleva a cabo la medición y evaluación de las entidades especificadas. Por su parte, los 
elementos contextuales (ContextualElement), que identifican cualquier elemento de información del 
marco INCAMI cuya aplicación es sensible al contexto, estarán asociados a una instancia de un 
contexto al cual son aplicables, es decir, describen las propiedades de contexto relevantes para la 
aplicación del elemento contextual en cuestión. Los elementos del marco que llevan información 
contextual son: modelo de concepto (ConceptModel), métrica (Metric), indicador global 
(GlobalIndicador), indicador elemental (ElementaryIndicador). Es posible entonces, distinguir 
entre el contexto relevante de la entidad (que, como ya fue expuesto, se especifica en la necesidad 
de información) y el contexto relevante de un elemento del marco INCAMI (como por ejemplo, una 
métrica) respecto de su aplicación en un proyecto de medición y evaluación. El primero representa 
el estado actual del ambiente del proyecto, mientras que la descripción del contexto de los 
elementos contextuales representa el contexto al cual dicho elemento es aplicable. 
Para la modelización del contexto en C-INCAMI se ha utilizado [2], por un lado, un 
esquema de nombre-valor para representar las propiedades de contexto, mientras que el contexto es 
modelado como un conjunto o agrupación de estas propiedades. Por otro lado, ha sido diseñada una 
taxonomía de propiedades de contexto basada en ciertos conceptos claves de la ingeniería de 
software y web.  
Una propiedad de contexto (INCAMIContextProperty) (ver Figura 5), tiene como atributos 
un nombre, una descripción, el peso o importancia relativa de esa propiedad en un contexto dado y 
un identificador. Una propiedad de éste tipo es considerada como una especialización de un atributo 
del marco INCAMI. De esta manera, es posible utilizar los conceptos relacionados a medición para 
cuantificar las propiedades de contexto. 
 
Figura 4: Modelo de C-INCAMI relacionando la información de contexto con el marco INCAMI 
XIII Congreso Argentino de Ciencias de la Computación
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
 
IV Workshop de Ingeniería de Software y Bases de Datos
_________________________________________________________________________
 
 
522
 Figura 5: Diagrama UML que representa la relación entre el dominio de concepto y el dominio de INCAMI 
 
3 EL PROCESO DE REVISION 
A continuación se describirán las piezas de información a ser discutidas en el sistema de revisión de 
información de contexto así como el proceso mediante el cual se llevará a cabo la discusión. 
Previamente se mencionan brevemente los principios básicos a tener en cuenta en la construcción 
de herramientas colaborativas de discusión. 
 
3.1 Principios básicos para herramientas colaborativas de discusión 
Es importante, y son motivo de continuos estudios3, que los procesos colaborativos de discusión 
estén soportados por herramientas apropiadas de CSCA (Computer Supported Collaborative 
System), que permitan un fluido desarrollo de las actividades de argumentación en ambientes Web. 
Los principios que deben ser considerados al momento de la realización de herramientas, 
basadas en procesos de discusión, pueden resumirse de la siguiente manera [8]: 
• Es importante que los usuarios revisores dispongan de elementos gráficos (como los iconos 
de acuerdo  y desacuerdo ) para enmarcar el tenor de sus comentarios. 
• El ambiente de discusión debe contemplar la posibilidad de visualizar al mismo tiempo la 
información a discutir y los comentarios realizados. La navegación entre los ítems en 
discusión y sus respectivos comentarios no debe alejar al usuario a otra pantalla, mostrando 
ambos contenidos en forma separada. 
• Los revisores deben dedicar a la revisión el máximo de tiempo que les sea posible, sin que 
ello signifique exigencias extras a su labor. 
• Las herramientas que se provean deben ser fáciles de usar e intuitivas, para que usuarios no 
expertos se sientan familiarizados con las mismas. 
Para este tipo de herramientas de discusión, el soporte tecnológico es fundamental. Permite que 
se  automatice todo el proceso y de esta manera agiliza aún más las interacciones del mismo. En el 
desarrollo de la herramienta aquí presentada han sido considerados como pautas de diseño los 
principios antes mencionados. 
 
3.2  Definición de  las piezas a discutir 
Con respecto a la pieza de información a discutir y de acuerdo a las dos situaciones descriptas en la 
sección 2.2,  es posible identificar  dos tipos de piezas a discutir. 
                                                 
3
  En especial, hemos considerado el trabajo relacionado a procesos de revisión colaborativa  llevado a cabo por el 
grupo KMI (Knowledge Media Institute), pertenecientes a  The Open University,U.K. 
XIII Congreso Argentino de Ciencias de la Computación
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
 
IV Workshop de Ingeniería de Software y Bases de Datos
_________________________________________________________________________
 
 
523
 El primer caso corresponde a una propiedad de contexto utilizada para describir cualquier 
contexto. Para esta situación, la pieza a debatir será la definición de la propiedad de contexto 
(básicamente, su nombre, tipo y descripción), además de la métrica que la cuantifica y la escala y 
método de la misma. Esta propiedad de contexto será discutida, y si alcanza un consenso entre los 
distintos revisores, se almacenará en su catálogo correspondiente. Luego, será  utilizada cuando se 
tenga que importar,  de dicho catálogo (el de contexto) para describir el contexto de algún proyecto 
de medición y evaluación (como parte de la necesidad de información del mismo), o para describir 
el contexto de aplicabilidad de algún elemento contextual.  
La otra posible pieza de información a debatir es la información de contexto asociada a un 
elemento contextual (como por ejemplo una métrica), es decir, a qué contexto es aplicable. Esta 
pieza deberá contener las instancias de propiedades de contexto (que previamente fueron discutidas 
y almacenadas para el caso anterior) incluyendo además sus posibles valores, el peso o importancia 
de dicha propiedad en el contexto actual y el elemento contextual al cual se refiere.  
 Cualquiera sea el caso de la pieza de discusión, cuando alcancen el consenso deberán ser 
almacenadas en sus correspondientes catálogos. Las propiedades debatidas en el primer caso, serán 
almacenadas en el catálogo de contexto, mientras que la información de contexto debatida para los 
elementos contextuales, será almacenada en el catálogo respectivo del elemento (requerimientos, 
medición o evaluación). De esta manera, tanto las propiedades de contexto como los elementos 
contextuales estarán disponibles para ser utilizados durante el desarrollo del proceso de medición y 
evaluación llevado a cabo por la organización.  
 
3.3 Proceso de Discusión 
El sistema de revisión que será aplicado a la información de contexto hace uso de mecanismos 
colaborativos asincrónicos para llevar a cabo el proceso de discusión, por lo tanto, los usuarios 
pueden participar libremente en los momentos que deseen. 
Cabe destacar que el sistema será accedido por diferentes categorías de roles, a saber: el de 
administrador, el de autor, y el de revisor (ver Figura 6). 
• El administrador es el rol del usuario que debe controlar si ha recibido alguna pieza de 
información a discutir, que, como fue analizado en la sección anterior, pueden ser 
propiedades de contexto o bien elementos contextuales con características de contexto. 
Debe verificar la validez de la misma con las instancias de propiedades  existentes (para no 
discutir las ya incorporadas al repositorio). Es responsable de la administración, 
configuración y seguimiento del ambiente de discusión. Tiene a su cargo también 
conformar y coordinar el grupo de revisores y establecer el cronograma de trabajo. Debe 
también decidir, a partir de las votaciones efectuadas por los revisores (y del esquema de 
puntuación establecido), si la información debatida alcanzó un consenso o no y en caso 
afirmativo debe  consolidar el repositorio con la nueva pieza de información acordada en el 
proceso. 
• El revisor es el rol del usuario encargado de llevar a cabo el debate. Es su tarea opinar sobre 
la información que se ha puesto a discutir. Además tiene la responsabilidad de participar en 
la votación, lo que permitirá saber al administrador el grado de consenso alcanzado en el 
debate. 
• El autor es quien somete su propuesta (la pieza de información) al administrador. Si la 
misma es inicialmente aceptada como pieza a debatir, participa entonces activamente en el 
proceso de discusión a la par de los revisores. El autor no tiene posibilidad de votar, pero sí 
tiene privilegios de escritura para introducir algún cambio a la información sometida 
(ateniéndose a las restricciones de las interacciones del proceso). 
Es importante resaltar que no consideramos necesaria la participación de un usuario moderador, 
como suele suceder en otros sistemas de discusión (como por ejemplo los chats, foros en el que el 
XIII Congreso Argentino de Ciencias de la Computación
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
 
IV Workshop de Ingeniería de Software y Bases de Datos
_________________________________________________________________________
 
 
524
encargado de supervisar las discusiones es un moderador). Hemos limitado el alcance del sistema a 
nivel organizacional, por lo tanto, la figura del administrador y el moderador llevarían a cabo 
funciones muy similares, y  entonces se optó por la presencia de un solo rol de administrador que 
contemple funciones de administración y moderación. 
La Figura 6 muestra el proceso de revisión y  los roles de usuarios responsables de cada fase 
del proceso. 
 
 
Figura  6: Etapas del proceso de revisión y roles a cargo. 
 
Con respecto al proceso de revisión cabe aclarar que es el mismo utilizado para la revisión 
de información de métricas en [1], contemplando  diferencias provenientes del tipo de información 
que ahora se discute. El proceso comienza cuando una persona (de aquí en adelante autor), la cual 
se supone que es experta  el área de  calidad y que con el fin de lograr la revisión de su pieza de 
información, somete una propuesta (ver Figura 6). 
Será el administrador quien reciba la propuesta (la pieza de información) y en base a sus 
criterios y conocimientos analizará preliminarmente la instancia de información relacionada a 
contexto sometida con el fin de detectar si dicha pieza ya ha sido catalogada en el repositorio, o si 
no merece pasar el proceso de revisión. Si se aceptara provisoriamente, se continúa con la 
preparación del entorno necesario para la pieza de información. Para esto, el administrador deberá 
crear el ambiente de discusión para que la pieza de discusión pueda ser debatida. Deberá gestionar 
tareas tales como la fijación de la fecha de inicio y fin del debate, así como también deberá elegir y 
asignar a los posibles revisores, participantes activos en el proceso de discusión. Al ser notificados 
los revisores de su participación (vía e-mail), deberán responder si aceptan la revisión de la pieza de 
información. 
En el período que abarca el proceso de discusión los revisores podrán ingresar al sistema, el 
cual tendrá la particularidad de dividirse en dos áreas relacionadas (diseñado de esta manera 
siguiendo las pautas establecidas al inicio de la sección). Por un lado se verá la pieza a discutir, y 
por el otro, todas las opciones relacionadas con el proceso de discusión (emitir comentario, 
responder comentario, ver comentarios y votar), a las cuales tendrá acceso el revisor 
Cada revisor podrá comentar y responder a comentarios realizados por otros, durante el 
lapso de tiempo que dure el debate. Podrán utilizar  símbolos gestuales para dar más énfasis a la 
opinión, como los iconos de acuerdo y desacuerdo (  ). 
El resto de los participantes, administrador y autor, siguen desde sus respectivas áreas todo 
el proceso de discusión, controlando el estado del foro en cada momento. Esta particularidad 
permite que el administrador, a modo de supervisar el proceso, detecte posibles discrepancias o 
conflictos no relacionados a la discusión del tema que se está debatiendo. 
Dado que el autor es otro de los espectadores del proceso de discusión, podrá observar los 
comentarios que se fueron sucediendo desde el instante en que comenzó el debate. Además puede 
defender su pieza de información con el derecho de réplica que se le otorga a partir de la posibilidad 
que tiene de emitir o responder a un comentario. Podrá analizar el curso que está tomando la 
información que sometió al principio, es decir si ésta será posiblemente aceptada o rechazada por 
los revisores. Si el autor prevé que la mayoría de los comentarios generan un rechazo por parte de 
los revisores, o que no hay un consenso entre ellos, y si cree pertinente que parte de la información 
pueda ser modificada, entonces solicitará un permiso al administrador. Con este permiso el autor 
procederá a cambiar los ítems en discusión que crea conveniente y comunicará tal situación a los 
XIII Congreso Argentino de Ciencias de la Computación
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
 
IV Workshop de Ingeniería de Software y Bases de Datos
_________________________________________________________________________
 
 
525
revisores para que, en base a las modificaciones efectuadas, establezcan nuevamente sus 
comentarios y se reanude el debate correspondiente. 
Cuando la fecha de finalización ha arribado, la que inicialmente fuera establecida por el 
administrador, los revisores quedan imposibilitados de continuar debatiendo, pero ahora deberán 
puntuar la información discutida. Comienza entonces el proceso de votación, en el cual cada revisor 
deberá  analizar, según su criterio, la información debatida y asignarle uno de los tres posibles 
puntajes: aceptado, rechazado o rediscutir con mejoras. El primero significa que el revisor está de 
acuerdo totalmente en que la pieza debatida sea parte del catálogo organizacional de la empresa, 
pues ha advertido que es útil, concisa, coherente. La segunda y como es de suponer, implica una 
total negación por parte del revisor a consolidar dicha pieza. Las razones las puede exponer, para 
que el autor, y el resto de los revisores conozcan los motivos de tal elección. Por su parte, la tercera 
y última opción establece que el revisor considera que existen aspectos que pueden mejorarse, y 
volver a discutirse, para así, pueda lograrse ( o no) un posible acuerdo. Durante todo el tiempo que 
dure la votación,  el administrador  tendrá acceso a indicadores que le estarán informando sobre el 
estado de la votación, así también como estadísticas que le indican el grado de conformidad entre 
los revisores, el grado de desacuerdo y el grado de rediscusión. 
Cuando todos los revisores han finalizado con la votación, el administrador deberá  evaluar 
la discusión, teniendo en cuenta las puntuaciones establecidas por los distintos revisores. Así, el 
administrador, no solo podrá observar los valores dados por cada revisor, sino también que el 
sistema le advertirá los porcentajes resultantes: 
• Si más del 80% de los revisores acordaron aceptar la pieza de información, la misma 
pasa al repositorio. 
• Si más del 80% de los revisores acordaron rechazar la pieza de información, esta 
deberá ser descartada 
• Si el 50% aprobó y el 50% rechazó, la decisión final es la de rediscutir. 
• Si el 100% opta por rediscutir, se rediscute nuevamente, con los cambios sugeridos. 
• Se descarta también para otro caso que no se encuadre en lo detallados, y se 
evidencia que no se ha llegado a un consenso, por lo tanto, no debe guardarse la 
pieza debatida. 
Si el  resultado de la votación estableció una rediscusión del debate, el administrador deberá 
establecer tiempo adicional al foro recién finalizado, indicando la cantidad de días que, a partir de la 
fecha actual, se extenderá la de finalización del foro. Durante la rediscusión, aquellos ítems que 
fueron determinados como no acordados por los revisores, estarán visualizados con otro color para 
enfocar la atención del debate en ellos. 
Una vez establecida la rediscusión se comunica respectivamente de la situación a cada uno 
de los participantes y desde ese momento comienza nuevamente a rediseñarse el debate, 
repitiéndose el mismo procedimiento que se explicó anteriormente. Hay que tener en cuenta que la 
posibilidad de rediscusión puede darse una sola vez, pues de lo contrario todo el proceso de 
discusión se convertiría en un ciclo repetitivo, con final incierto.  
Para esta etapa, en la votación solo podrá optarse por aceptar o rechazar (por lo comentado 
recientemente). Nuevamente, en caso de que la pieza de información sea aceptada se habrá logrado 
un consenso. Cualquiera sea el caso se da aviso mediante notificación automática al autor y a los 
revisores de lo sucedido. 
Finalmente la responsabilidad pasa nuevamente a manos del administrador, quien en caso de 
que la información debatida fuese aceptada, deberá realizar la carga en el repositorio  
correspondiente de la misma. 
 
 
XIII Congreso Argentino de Ciencias de la Computación
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
 
IV Workshop de Ingeniería de Software y Bases de Datos
_________________________________________________________________________
 
 
526
4  UN CASO PRÁCTICO 
En esta sección se ilustra el proceso de discusión de una propiedad de contexto, tal como se 
describió en las secciones previas. Para tal fin, consideremos el siguiente escenario: una empresa 
dedicada al desarrollo de software puede considerar conveniente evaluar la productividad en el 
desarrollo llevado a cabo por algún proyecto de software. Para tal entidad y propósito uno de los  
posibles atributos a incluir como parte del diseño de los requerimientos no funcionales será tiempo 
de desarrollo de software. Mediante la posterior selección de las métricas, que permitan cuantificar 
los atributos elegidos y de indicadores que interpreten dichos valores, será posible obtener un 
resultado que satisfacerá la necesidad de información definida inicialmente para el proyecto de 
medición y evaluación. Además, permitirá la comparación con el resultado de otros proyectos para 
poder determinar cuál proyecto ha resultado más productivo. Sin embargo, una vez obtenidos los 
valores, la comparación puede no resultar del todo robusta dado que, por ejemplo, se pueden estar 
comparando resultados de proyectos de software cuyos ciclos de vida empleados son muy distintos 
(por ejemplo un proyecto desarrollado con una metodología tradicional en contraparte con una 
metodología ágil4). La falta de esta información puede influir en la interpretación de los resultados 
obtenidos, es decir, información referida al contexto del proyecto a evaluar. Por tal motivo, es 
importante para el caso planteado, considerar el ciclo de vida como información de contexto en el 
proyecto de medición y evaluación, tanto en la selección de métricas e indicadores así como en la 
interpretación de los resultados finales. 
A continuación se ilustrará con un caso práctico, para el escenario descrito anteriormente, el 
proceso de revisión de la definición de la propiedad de contexto ciclo de vida del desarrollo del 
software. La misma se especifica en la Tabla 1, y es la propiedad de contexto finalmente acordada 
durante el proceso de revisión. Esta propiedad formará parte del catálogo de contexto, la que podrá 
ser reusada cuando se tenga que importar de dicho catálogo información de contexto para un 
proyecto de medición y evaluación específico. 
 
Tabla 1. Ejemplo de definición de propiedad de contexto consolidada en el repositorio de contexto 
Nombre: Ciclo de vida de desarrollo de software 
Descripción: El ciclo de vida para el desarrollo del proyecto de software  
Tipo: SoftwareProjectProperty 
Métrica 
Objetivo: Determinar el tipo de ciclo de vida del desarrollo del proyecto de software 
Escala (Categórica) 
Tipo de Escala: Ordinal 
Valores Permitidos: 
Nombre: Ciclo de vida tradicional. Descripción: Ciclo de vida en el que se especifica de manera 
rigurosa  estrategias de planificación, recursos y procesos llevados a cabo durante el desarrollo. 
Nombre: Ciclo de vida Ágil. Descripción: Ciclo de vida con un desarrollo según los principios y 
prácticas ágiles. 
Nombre: Ciclo de vida ad-hoc. Descripción: Ciclo de vida sin un claro establecimiento de 
estrategias de planificación, procesos y recursos. 
Método (Medición) 
Nombre: Determinación del ciclo de vida del desarrollo del proyecto de software  
Especificación: El ciclo de vida utilizado es extraído de la planificación del proyecto u otras 
evidencias. 
Tipo: Sujetivo. 
         
                                                 
4
  Tal como es el caso de XP: Extremming Programming 
XIII Congreso Argentino de Ciencias de la Computación
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
 
IV Workshop de Ingeniería de Software y Bases de Datos
_________________________________________________________________________
 
 
527
Una persona ingresa al sistema de Revisión de Información de Contexto y en la opción 
someter propuesta5 adjuntará la información que quiere poner a discusión. El envío de la propuesta 
se hará a través de un formulario preestablecido que contiene los campos necesarios para el ingreso 
de la propuesta según sea de cualquiera de los dos tipos posibles de información a discutir (sección 
2). Tan pronto el administrador recibe en su área respectiva la información enviada por el autor, 
procede a cotejarla con las instancias ya existentes  en el repositorio correspondiente. Al comprobar 
que no hay ninguna instancia que se asemeje a lo que se propone, procede a notificarle al autor la 
validez de su propuesta. La acción a seguir es comenzar a configurar aspectos relativos del debate: 
fechas de inicio y fin, y además, elegir a los revisores. Tendrá en su interfaz de usuario opciones 
siempre disponibles para realizar tales acciones. 
Una vez que los revisores confirmen su participación, estarán habilitados a iniciar el debate el 
día establecido. Comenzarán a  opinar, por ejemplo, en base a si es correcto, para la propiedad Ciclo 
de vida del desarrollo del software, considerarla del tipo SoftwareProjectProperty. Hemos 
planteado para el ejemplo propuesto, que, inicialmente, el autor sólo consideró como posibles tipos 
de ciclo de vida, el tradicional, y el ágil.  Es bien sabido que las metodologías tradicionales se 
centran especialmente en la planificación y control del proceso, estableciendo minuciosamente las 
actividades involucradas, los artefactos que se deben producir, y las herramientas y notaciones que 
se usarán. Por su parte, las metodologías ágiles otorgan mayor valor a los recursos humanos, 
prácticas de desarrollo, colaboración con el cliente e iteraciones muy cortas. Sin embargo, un 
proyecto puede no tener un desarrollo planificado, que se ajuste a alguno de los ciclos propuestos a 
considerar. Por esta razón, es importante también incluir el ciclo de vida ad hoc, definido como 
aquel que no presenta una estructuración en sus procesos, ni siquiera una identificación de fases o 
pasos a seguir (siendo más bien una estrategia code and fix). Por tal motivo y ante la crítica de los 
revisores hacia el autor, por no haber considerado la inclusión de este tipo de ciclo de vida, el autor 
procede a incluirla, logrando de esta manera el consenso generalizado por parte de los revisores. El 
administrador, que sigue el proceso de discusión, observa que el mismo se desarrolla  
adecuadamente.  
Para cerrar el proceso en el día establecido como votación, los revisores deberán puntuar a la 
propuesta como aceptada, rechazada o bien rediscutirla con mejoras. Aquí, se supone que gran parte 
de los revisores acordaron y entonces calificaron como aceptada  a la pieza de información, con un 
total del 90% de aceptaciones. El administrador dispone de un área de seguimiento del proceso de 
votación y, en este caso, el sistema le notifica la aceptación de la propuesta de información de 
contexto debatida. Por lo que el administrador procederá a la carga de la instancia de la propiedad 
de contexto debatida (tal como se describe en la Tabla 1) en el repositorio de contexto. 
 
5 COMENTARIOS FINALES Y CONCLUSIONES 
En este trabajo se ha mencionado la importancia de contar con información de contexto en el marco 
de medición y evaluación INCAMI, y se ha resaltado la ventaja de lograr que esa información de 
contexto provenga del consenso alcanzado entre varios revisores expertos en el tema. De este modo, 
dicha información quedará disponible para todas las actividades de medición y evaluación que una 
organización implementa como parte del aseguramiento de calidad en sus proyectos de software y 
web. 
El sistema colaborativo de revisión propuesto para el soporte de información de contexto en 
el marco C-INCAMI contiene los módulos básicos para llevar a cabo el desarrollo de un proceso de 
discusión, contemplando sus instancias, iteraciones y roles que ejecutan las tareas del proceso. 
                                                 
5
 No se muestra la pantalla de la herramienta actualizada por razones de espacio, pero se puede observar el trabajo 
realizado en [1] 
XIII Congreso Argentino de Ciencias de la Computación
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
 
IV Workshop de Ingeniería de Software y Bases de Datos
_________________________________________________________________________
 
 
528
Desde el punto de vista tecnológico, para gestionar potencialmente grandes volúmenes de 
datos y metadatos referidos a contexto, se ha utilizado una estructuración semántica especificada en 
lenguaje RDF (Resource Description Framework) y RDF Schema, y se ha empleado el servidor 
SESAME, que es el que también almacena las instancias de métricas consensuadas en el Sistema de 
Revisión de Métricas [1]. Es importante destacar que especificar la información consensuada en 
RDF permitirá la posterior consulta de dichos datos y su recuperación en los procesos que así lo 
requieran, como así también lograr la vinculación con el resto de los datos que la organización 
utiliza. 
Por último, el contar con un sistema de revisión para procesos de medición y evaluación, no 
sólo a nivel de métricas de atributos sino también de propiedades de contexto, intenta robustecer al 
ambiente C-INCAMI con el fin de permitir que una organización disponga de un mejor soporte a la 
toma de  decisiones. 
 
