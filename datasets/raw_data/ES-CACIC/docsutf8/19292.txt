Metodologías Ágiles análisis de su implementación y nuevas propuestas
﻿ Este trabajo analiza el grado de implementación de las 
metodologías modernas de ingeniería de software en el ámbito 
profesional. A través de consultas y en base a la experiencia de los 
autores, se han obtenido varias conclusiones alentadoras acerca de las 
prácticas ágiles, que en muchos casos integran los nuevos conceptos en 
forma parcial o híbrida. En un mundo tan evolutivo donde las 
metodologías van a seguir cambiando, el principal objetivo de este 
trabajo es proponer nuevos lineamientos combinando las prácticas 
ágiles más utilizadas con las actividades y elementos de las 
metodologías tradicionales ya probadas con eficacia. Después de una 
breve revisión de los aspectos básicos de las metodologías ágiles, se 
exponen los resultados de las consultas en empresas nacionales y 
multinacionales, como también las experiencias personales, para tratar 
de delinear soluciones a los problemas de implementación relevados. 
Keywords: Metodologías ágiles – Ingeniería de Software – Scrum – XP. 
1. Introducción 
Las metodologías ágiles surgen como una alternativa a las metodologías 
tradicionales. Son una forma de reacción a ellas, principalmente debido al hecho de 
que las metodologías tradicionales no han sido capaces de resolver todos los 
problemas que persiguen al desarrollo de proyectos de software desde sus inicios.  
El uso de estas metodologías se ha ido difundiendo en el mercado y cada vez más 
se debate acerca de las mismas. ¿Cuál es el grado de implementación de las 
metodologías ágiles en Argentina? ¿Cuáles de todas ellas son las más utilizadas? ¿Se 
pueden adoptar en forma integral, es decir con todas las prácticas propuestas? ¿Se 
pueden certificar normas o modelos de calidad siendo ‘ágil’? ¿Son las metodologías 
ágiles la base de los procesos de desarrollo a futuro? 
CACIC 2010 - XVI CONGRESO ARGENTINO DE CIENCIAS DE LA COMPUTACIÓN                                                 597
G. Bioul, F. Escobar, M. Alvarez, A. Nardin, E. Ricci Aparicio 
El presente trabajo apunta a sensibilizar a los profesionales sobre estos temas. El 
mismo presenta un estudio realizado por los autores sobre el estado del arte en el uso 
de metodologías ágiles, a través de relevamientos en empresas, nacionales e 
internacionales, con diferentes características y tamaños. El objetivo de ese estudio es 
identificar los principales problemas de adaptación que las empresas encuentran al 
implementar total o parcialmente estas metodologías. A continuación del estudio, se 
presentan las conclusiones obtenidas y a partir de las mismas se formulan una serie de 
propuestas tendientes a mitigar los problemas evidenciados. 
El objetivo de la siguiente etapa del proyecto en el cual se enmarca el presente 
trabajo, es la definición de una propuesta metodológica que incluya prácticas ágiles 
minimizando estos problemas, y ampliando de ese modo su espectro de aplicación. 
2. Reseña de Métodos Ágiles 
2.1 Metodologías ágiles 
El diseño y desarrollo iterativo e incremental ha sido un método adoptado por 
ingenieros desde hace más de 75 años y puede ser considerado como la piedra angular 
de las metodologías ágiles. En la década de los ’90 se instalaron las bases de dichas 
metodologías en la industria del software. La apreciación como tales en la comunidad 
de la ingeniería de software tiene sus inicios en la creación de una de las metodologías 
utilizada como precursora: eXtreme Programming (XP),  instituida por Kent Beck 
[1], recuperando ideas recopiladas junto a Ward Cunningham y probadas 
exitosamente en un proyecto de Chrysler® en 1996 [2]. 
En una reunión celebrada en febrero de 2001 en Utah – USA, nace el término ágil 
aplicado al desarrollo de software. En esta reunión participa un grupo de expertos, 
incluyendo algunos de los creadores e impulsores de las metodologías de software. Su 
objetivo fue esbozar los valores y principios que deberían permitir a los equipos 
desarrollar rápidamente software de calidad capaz de responder, en forma ágil y 
eficaz, a las necesidades de cambios que puedan surgir a lo largo de los proyectos. Se 
pretendía ofrecer una alternativa a los procesos tradicionales de desarrollo, 
caracterizados por ser rígidos y cautivos de condiciones de uso severas plasmadas en 
una documentación extensa a generar en cada una de las etapas de desarrollo. Varias 
de las denominadas metodologías ágiles ya estaban siendo utilizadas con éxito en 
proyectos reales. 
Tras esta reunión se creó The Agile Alliance, una organización sin ánimo de lucro 
dedicada a promover los conceptos relacionados con el desarrollo ágil de software y a 
ayudar a las organizaciones para que adopten dichos conceptos. El punto de partida 
fue el Manifiesto Ágil [3], un documento que resume la filosofía ágil. 
Existen varias metodologías ágiles en la actualidad, entre las cuales es posible citar 
las siguientes: 
CACIC 2010 - XVI CONGRESO ARGENTINO DE CIENCIAS DE LA COMPUTACIÓN                                                 598
Metodologías Ágiles, análisis de su implementación y nuevas propuestas.  
− XP – Extreme Programming: Propone una técnica de desarrollo de software 
liviana, sustentada en la disciplina de los programadores. 
− Scrum: Se focaliza en prácticas de administración de proyectos por sobre 
prácticas de las áreas de ingeniería. Propone adaptación continua del plan de 
proyecto a las circunstancias del mismo dividiendo al proyecto en iteraciones 
o ‘sprints’ en cada una de las cuales se obtiene una nueva versión del producto 
con nuevas funcionalidades. 
− Crystal Methods: Propone distintos procesos a aplicar según tres variables 
básicas: el tamaño del proyecto, la criticidad y las prioridades del mismo. Los 
miembros del equipo en conjunto son los que definen el proceso a seguir en el 
proyecto. Enfatiza la comunicación del equipo. 
− DSDM – Dynamic Systems Developmemt Method: Está enfocada a proyectos 
con características RAD (Rapid Application Development), con una fase única 
de estudio de factibilidad y luego una serie de fases iterativas para el análisis, 
diseño y desarrollo. 
− FDD – Feature Driven Development: Propone definir una serie de ‘features’ 
o funcionalidades que debe contener el producto, organizadas en jerarquías, 
con un alcance lo suficientemente corto como para ser implementadas en un 
par de semanas. 
− ASD – Adaptive Software Development: Se focaliza en proyectos de 
requerimientos inestables con necesidad de desarrollo rápido. Propone las 
fases Especular – Colaborar – Aprender para llevar adelante proyectos con 
estas características. 
− Xbreed: Combina prácticas de gestión de proyectos de Scrum con XP. Es aún 
reciente y no hay demasiadas experiencias al respecto. 
3. Estudio de la implementación de las Metodologías Ágiles en 
Argentina 
La industria del software ha tenido un crecimiento significativo en los últimos años 
en el país; según datos obtenidos del Boletín Estadístico del Ministerio de Ciencia, 
Tecnología e Innovación Productiva de la República Argentina [19], existen 
aproximadamente 1.000 empresas formales de Software y Servicios Informáticos 
(SSI) y durante el año 2008 dicho sector empresarial, registró ventas cercanas a los $ 
7.100 millones, un 22,4% más que en 2007 y los puestos de trabajo llegaron a 51.000. 
A su vez dicha industria es reconocida en el mundo por su calidad teniendo en cuenta 
que en el ranking de certificaciones del SEI [5] Argentina se encuentra en el puesto 
número 12. 
Por otro lado, es importante mencionar que los organismos dedicados a fijar pautas 
de calidad que pueden ser aplicadas para el desarrollo de software están abiertos a la 
aceptación de las metodologías ágiles. La nueva versión de CMMI 1.3 propuesta por 
CACIC 2010 - XVI CONGRESO ARGENTINO DE CIENCIAS DE LA COMPUTACIÓN                                                 599
G. Bioul, F. Escobar, M. Alvarez, A. Nardin, E. Ricci Aparicio 
el Software Engineering Institute, que se espera para noviembre del 2010, 
contemplará mejoras para las organizaciones que trabajen bajo ambientes ágiles de 
modo de asegurar una correcta interpretación de sus prácticas [10]. El Project 
Management Institute incluye entre sus comunidades a la Comunidad de Prácticas 
Ágiles con el objetivo de difundir y compartir conocimiento entre seguidores del PMI 
y de las metodologías ágiles. 
Considerando que en Argentina existen empresas con importante trayectoria y 
profesionales con gran experiencia, estarían dadas las condiciones para el incremento 
de la utilización de metodologías ágiles, lo cual se evidencia en los resultados 
obtenidos del relevamiento realizado. Además, no se observa en ninguno de los 
consultados resistencia al uso de metodologías ágiles, aún en aquellos que no las han 
utilizado. 
A continuación se presenta el resultado del relevamiento realizado como parte de 
este trabajo de investigación. Cabe destacar que el mismo fue realizado con el 
objetivo de conocer más acerca del grado de implementación de las metodologías 
ágiles y su problemática en el mercado de desarrollo de software argentino, y no con 
fines estadísticos. Para la materialización de este relevamiento se elaboró una lista de 
cuestiones destinada a obtener datos sobre la implementación de métodos ágiles en la 
ingeniería del software. 
Considerando el objetivo principal mencionado anteriormente, se optó por realizar 
preguntas abiertas, ya que las mismas permiten a los consultados explayarse en las 
respuestas. 
Dicho relevamiento se enfocó desde tres perspectivas: a) empresas de desarrollo de 
software, b) especialistas en calidad de software, c) empresas que tercerizan el 
desarrollo de software.  
Teniendo en cuenta los criterios básicos propuestos por Alistair Cockburn en los 
Métodos Crystal [13] para la definición de la metodología a utilizar en un proyecto y 
los principios del Manifiesto Ágil [3], entre los temas incluidos en el relevamiento se 
destacan los siguientes: tiempo de experiencia en el uso de métodos ágiles, tiempo de 
duración promedio de los proyectos, prácticas utilizadas, compromiso de los clientes, 
certificaciones de calidad y casos de éxito. 
Las empresas consultadas para deliberar en estas cuestiones fueron seleccionadas 
entre contactos personales de los autores, armando un conjunto heterogéneo que 
abarca la diversidad del mercado de desarrollo de software. Este conjunto está 
formado por micro empresas y software factories nacionales y multinacionales con 
centros de desarrollo o filiales instaladas en Argentina, trabajando para mercados 
como América del Sur y del Norte, Comunidad Europea y China, con 3 a 30 años de 
presencia en el mercado internacional, y con rubros variados (empresas líderes en 
telefonía, proveedores de software para sistemas bancarios o comerciales tales como 
supermercados, empresas de servicios IT, entre otras). Además, se incluyeron dentro 
de los consultados profesionales que se dedican a brindar asesoramiento respecto de 
normas y/o modelos de calidad a empresas de desarrollo de software. 
CACIC 2010 - XVI CONGRESO ARGENTINO DE CIENCIAS DE LA COMPUTACIÓN                                                 600
Metodologías Ágiles, análisis de su implementación y nuevas propuestas.  
Uno de los primeros datos que surge de los resultados obtenidos es que la totalidad 
de los consultados conocen estas metodologías. Si bien no todos las aplican aún, 
ninguno de los consultados mostró oposición o resistencia en la utilización de 
métodos ágiles en sus procesos. Esta característica fue detectada tanto en empresas de 
desarrollo como en empresas que tercerizan el desarrollo de sus aplicaciones. 
De los consultados que utilizan estas metodologías, el 85% refiere haber usado 
Scrum, aunque no en forma completa sino adaptando las técnicas que consideran más 
apropiadas a las necesidades del proyecto de referencia, a la certificación de calidad 
de la empresa y a las idiosincrasias respectivas de los grupos involucrados. El 50% de 
los proyectos a los que hacen referencia han tenido una duración de entre 4 meses y 1 
año, y un 20% a proyectos que tienen una duración de entre 1 y 2 años. Algunas otras 
prácticas ágiles utilizadas son XP y Test Driven Development[15]. 
En cuanto al involucramiento del cliente en el proceso de desarrollo; todos los 
consultados que han utilizado Scrum, coinciden en que es la práctica más difícil de 
conseguir. El 16,5% de las empresas lo lograron, el 67% de los consultados responde 
haber logrado el compromiso en algunos casos o en forma parcial, mientras que el 
16,5% restante lo tienen entre sus objetivos pendientes. 
Otro dato de consideración se refiere a las certificaciones de calidad, encontrando 
que el 71% de los consultados refieren estar certificado en ISO 9001, mientras que el 
29% no cuentan con certificación alguna. Dentro de las empresas certificadas en ISO 
una también lo está en CMMI ML3 y otra en CMMI ML5. 
No hay demasiadas coincidencias en cuanto a los resultados obtenidos con la 
aplicación de métodos ágiles. Considerando el tiempo de desarrollo, algunos opinan 
que fue óptimo mientras que otros no encuentran mejoría en este aspecto respecto del 
uso de metodologías tradicionales. Muchos coinciden que las prácticas de gestión de 
proyectos de Scrum ayudan a que esta variable esté bajo control. 
Otra importante referencia que se evidenció entre los consultados es que se reduce 
significativamente el esfuerzo de mantenimiento, sobre todo en el tiempo más cercano 
a la implantación. Según el criterio y experiencia de los autores esto se debería al 
fuerte involucramiento del usuario de la aplicación en el proceso de construcción de la 
misma; lo cual conlleva a que la adaptación de la aplicación a las expectativas del 
usuario se realiza progresivamente a lo largo de todo el desarrollo y todos los cambios 
necesarios son realizados durante dicho período y no post-implantación. 
 En cuanto a la calidad del producto, el 50% de los consultados encuentran una 
mejoría en este aspecto atribuible a las iteraciones, mientras que el otro 50% 
considera como resultado productos de calidad aceptable pero sin percibir cambios 
significativos debidos a la adopción de metodologías ágiles. 
Como un segundo ciclo de relevamiento se indagó más en detalle acerca de 
algunos aspectos de implementación de las metodologías. De este segundo contacto 
surgieron los planteos que se describen a continuación. 
Si bien en particular Scrum establece que se debe considerar a todos como "un 
solo equipo" y que cualquier persona del equipo puede realizar cualquier tarea, según 
los datos relevados en la práctica esto puede ser difícil de implementar. Un aspecto 
CACIC 2010 - XVI CONGRESO ARGENTINO DE CIENCIAS DE LA COMPUTACIÓN                                                 601
G. Bioul, F. Escobar, M. Alvarez, A. Nardin, E. Ricci Aparicio 
clave para llevarlo a cabo es el tipo de proyecto y las características del mismo. Si el 
proyecto contara con una arquitectura compleja o técnicamente es muy complejo, 
resultaría difícil que un integrante del equipo que haya tenido su experiencia 
profesional en metodologías tradicionales, fundamentalmente como analista, 
modifique alguna línea de código. En estos casos, lo máximo que podría lograrse es 
que personas con experiencia en diseño y codificación puedan intercambiar algunas 
de sus tareas. 
Adicionalmente se observó que si bien las prácticas ágiles se realizan, el problema 
radica en cómo se las implementa. Como ejemplos de estas incorrectas 
implementaciones podemos citar: 
− las retrospectivas eran sólo usadas como espacio de formulación de quejas o 
para hablar únicamente del producto, y no para generar mayor integración con 
los miembros del equipo; 
− las reuniones diarias no eran utilizadas para saber en qué se estaba trabajando, 
sino para resolver problemas y por lo tanto se extendían por más de 45 
minutos; 
− el usuario generaba documentación que era entregada a los desarrolladores 
como definición de requerimientos, en vez de estar realizando dicha definición 
participando activamente junto al resto del equipo del proyecto.  
Otro punto muy importante es que las empresas que implementan las metodologías 
ágiles deben tener a su personal convencido y dispuesto a convivir con dichas 
metodologías. Se evidenció que en algunas empresas los responsables de implementar 
el modelo ágil estaban en contra de lo planteado por el mismo. A su vez, si dichas 
empresas tenían certificados de calidad como CMMI e ISO, al momento de definir 
como implementar el modelo ágil, simplemente le cambiaban el nombre a sus 
procesos para que ‘sonaran’ a ágil, implementando de este modo los procesos con la 
filosofía tradicional pero con otros nombres, y no aprovechando las ventajas que 
ofrecen Scrum, XP, etc, más allá de simples pasos para crear software. 
Estas últimas cuestiones que plantean dudas respecto de la implementación de un 
verdadero proceso ágil, corroboran lo expuesto por Pete Mc Breen [16] quien afirma 
que mucha gente proclama que sus procesos son ágiles, pero sucede que en el día a 
día de los proyectos realmente nada ha cambiado. Mc Breen expone una lista de diez 
síntomas que indicarían que un proceso que dice ser ágil en realidad no lo es. Varios 
de las consideraciones de esa lista se corresponden con los puntos planteados en los 
párrafos anteriores. 
Otro problema que se evidenció entre los consultados, es la dificultad para realizar 
la estimación de un proyecto en forma anticipada cuando se utiliza una metodología 
ágil, debido fundamentalmente a los posibles cambios en los requerimientos y sus 
prioridades a lo largo del proyecto. En algunos casos han optado por utilizar un 
presupuesto en horas basado en los requerimientos que son identificados en primera 
instancia, y luego llevar adelante el proyecto hasta que se consuma dicho presupuesto. 
Los resultados de esta investigación fueron cotejados con los datos obtenidos en un 
estudio realizado por un alumno de la Universidad [11] como trabajo final, el cual fue 
CACIC 2010 - XVI CONGRESO ARGENTINO DE CIENCIAS DE LA COMPUTACIÓN                                                 602
Metodologías Ágiles, análisis de su implementación y nuevas propuestas.  
dirigido por los autores. Dicho estudio abordó un conjunto de empresas y 
profesionales diferente al consultado para este trabajo, como también así, el método 
de selección y contacto. No obstante ello, los resultados obtenidos refuerzan las 
conclusiones expresadas en este trabajo. 
Se aclara además que no se revelan datos de las empresas relevadas por un acuerdo 
de confidencialidad con las personas consultadas. 
4. Conclusiones 
Las metodologías ágiles surgen como una necesidad a la hora de satisfacer los 
cambiantes requerimientos de desarrollo de los sistemas actuales, pero manteniendo la 
calidad del producto resultante. Por eso es que han sido adoptadas por variadas 
organizaciones de desarrollo de software como lo demuestra el estudio anteriormente 
analizado  
Sin embargo, existen algunos problemas que a criterio de los autores dificultan 
todavía su correcta implementación:  
− Lograr la participación activa y comprometida del usuario formando parte del 
equipo de desarrollo durante todo el proyecto.  
− La no fijación de pautas suficientes respecto de la ingeniería del producto. 
− La conformación del equipo del proyecto con recursos que puedan adaptarse a 
las metodologías ágiles. 
En cuanto a la participación de los usuarios, el Manifiesto Ágil [3] expresa en su 
principio IV “La gente del negocio y los desarrolladores deben trabajar juntos a lo 
largo del proyecto”. Esto implica que esta práctica es fundamental y no puede ser 
omitida. 
Cabe destacar que los autores creen que esta resistencia a la participación tendría 
que ver más con cuestiones organizativas y operativas de los clientes, que con una 
falta de reconocimiento de la importancia de las especificaciones de requerimientos 
de los usuarios para el producto resultante.  
Tampoco se cree que sea una causa para este problema la falta de capacidad para 
realizar una correcta especificación, ya que los usuarios son cada vez más expertos y 
formales al expresar sus necesidades. Actualmente, tienen una mayor experiencia en 
la utilización de herramientas informáticas, por lo cual la tarea de abstracción de sus 
necesidades en una especificación de requerimientos es realizada prácticamente sin 
mayores dificultades. 
Un ejemplo claro de esto, es que en los últimos 2 años los autores han participado 
en 34 proyectos de desarrollo de software utilizando metodologías tradicionales con 8 
clientes diferentes. En el 41% de esos proyectos se han recibido diferentes tipos de 
artefactos construidos directamente por los usuarios como parte de la definición de 
sus requerimientos, como pueden ser prototipos de pantallas, planillas de cálculos, 
CACIC 2010 - XVI CONGRESO ARGENTINO DE CIENCIAS DE LA COMPUTACIÓN                                                 603
G. Bioul, F. Escobar, M. Alvarez, A. Nardin, E. Ricci Aparicio 
diagramas de actividades y/o gráficos. Es importante destacar que en todos los casos 
fueron entregados por iniciativa propia del usuario al momento de iniciarse el 
relevamiento y no como una actividad requerida o guiada por el equipo del proyecto.  
Con respecto a la ausencia de pautas de ingeniería de producto, si bien uno de los 
principios del Manifiesto Ágil [3] expresa “Desarrollar software que funciona más 
que conseguir una buena documentación”, a entender de los autores, habría que 
diferenciar la construcción de modelos con el mero fin de documentar el producto 
generado, de la elaboración de modelos como proceso de diseño de soluciones. Es 
decir, que no documentar no significaría no modelar.  
En lo que se refiere a la conformación del equipo de trabajo, si bien se requiere que 
el mismo pueda intercambiar tareas, a entender de los autores podría existir un mix de 
perfiles entre las personas que lo conforman, de modo tal que la asignación de tareas 
en un sprint estaría dada por el conocimiento y experticia de cada uno. Si dicho 
equipo es capaz de asumir el compromiso de los requisitos que deben desarrollarse en 
cada iteración y trabaja en forma conjunta y cooperativa, es posible cumplir con el 
mismo. A tal efecto, Martín Alaimo, referente de la comunidad ágil en Argentina, 
explica en su artículo Roles Ágiles [17] cómo los roles existentes en metodologías 
tradicionales pueden realizar una transición hacia los métodos ágiles para formar parte 
de un equipo ágil, debiendo aprender y adaptarse a los cambios requeridos para ello. 
5. Propuestas 
A continuación se exponen propuestas basadas en las conclusiones obtenidas a 
partir del estudio anterior, del conocimiento adquirido durante el tiempo de dictado de 
materias afines a la Ingeniería de Software, y de la experiencia de los autores en 
desarrollo de proyectos en una software factory marplatense.  
Con respecto a la dificultad en lograr la participación de los usuarios, una posible 
solución sería transmitir al cliente beneficios tangibles relacionados con su 
participación en el proyecto. Un ejemplo de esto sería mostrar una reducción en el 
total del presupuesto de análisis (que habitualmente se estima entre 10% y 15% del 
total del presupuesto), debido a que su activa participación agilizaría dicha tarea. 
Otras acciones que podrían tomarse tendientes a facilitar la participación de los 
usuarios es la utilización de herramientas y mecanismos de comunicación para 
equipos virtuales, evitando tiempos de traslados y optimizando el tiempo efectivo 
asignado al proyecto. 
Con respecto a la ausencia de pautas de ingeniería de producto, como se comentó 
en las conclusiones, a entender de los autores habría que diferenciar la construcción 
de modelos para documentación de la construcción de modelos para el diseño de 
soluciones. Las metodologías tradicionales si bien proponen diferentes modelos para 
diferentes aspectos de la aplicación a construir, los autores consideran que los mismos 
no deben ser realizados para la aplicación completa, sino solamente cuando sean 
útiles y necesarios para hallar la solución adecuada previo a la construcción. 
CACIC 2010 - XVI CONGRESO ARGENTINO DE CIENCIAS DE LA COMPUTACIÓN                                                 604
Metodologías Ágiles, análisis de su implementación y nuevas propuestas.  
Tradicionalmente se propone como justificación a la documentación completa de la 
aplicación, el soporte a las actividades de mantenimiento reduciendo su costo. Sin 
embargo, la experiencia profesional de los autores evidencia que una vez concluido el 
producto, la documentación rara vez es actualizada y habitualmente las tareas de 
mantenimiento, sobre todo el correctivo, se realizan sin consultar la documentación 
pre-existente. Por lo tanto se considera que una buena auto-documentación del código 
resultaría más efectiva para este fin. Ciertos datos como: propósito, reglas de negocio 
implementadas y dependencias, deberían ser especificadas en los diferentes 
componentes codificados. 
Con respecto a la conformación del equipo, las empresas deberían tener actividades 
de formación para desarrollar en sus recursos humanos las habilidades necesarias para 
participar en proyectos con metodologías ágiles. 
Considerando los problemas identificados y las particularidades que tiene un 
proceso de desarrollo en una software factory, el cual está basado en metodologías 
tradicionales en forma similar a una línea de montaje de un proceso industrial con 
roles especializados, la propuesta metodológica en la que están trabajando los autores 
tiene hasta el momento las siguientes características: 
− Ciclo de vida ágil, combinando las prácticas más difundidas de las 
metodologías ágiles actuales y fijando pautas orientadas a proyectos de 
desarrollo en software factories. 
− Definición de canales de comunicación y recomendación de la utilización de 
herramientas para equipos virtuales, que permitan facilitar la comunicación en 
las diferentes etapas del proceso. 
− Herramientas que permitan evidenciar el beneficio de la participación activa 
del usuario a nivel costos de desarrollo, es decir ponderar la reducción 
presupuestaria debido a la delegación de ciertas actividades al usuario en lugar 
de ser realizadas por el equipo de desarrollo.  
− Lineamientos y actividades que faciliten la construcción del producto a partir 
de la elaboración de modelos, sin perder las características enunciadas en el 
Manifiesto Ágil [3] y manteniendo las ventajas de las metodologías 
tradicionales.  
− Requisitos explícitos de auto-documentación de código, para facilitar etapas 
de mantenimiento. 
− Actividades de gestión y desarrollo de recursos humanos por fuera del ciclo de 
vida del proyecto, orientadas a la efectividad de las comunicaciones, trabajo en 
equipo y formación de recursos humanos orientados a las metodologías ágiles. 
En términos generales, basándose en la experiencia personal de los autores y en los 
comentarios de los profesionales consultados, se considera que el éxito de un proyecto 
de desarrollo de software se sustenta sobre una buena gestión del mismo, un buen 
proceso de construcción, y un buen equipo de trabajo. Las metodologías tradicionales 
se enfocan principalmente en los procesos y las metodologías ágiles en la personas, el 
objetivo sería encontrar el equilibrio entre ambos enfoques; ideas que también 
CACIC 2010 - XVI CONGRESO ARGENTINO DE CIENCIAS DE LA COMPUTACIÓN                                                 605
G. Bioul, F. Escobar, M. Alvarez, A. Nardin, E. Ricci Aparicio 
difunden los pioneros de la Ingeniería del Software modificando su postura en cuanto 
al desarrollo tradicional, citando a Tom de Marco :”… voy por un enfoque de gestión, 
uno que podría llevar al equipo a adoptar prácticas ágiles, o al menos hacia los 
aspectos incrementales de la escuela ágil…”[12]. 
Las metodologías ágiles están más orientadas a definir pautas de gestión y trabajo 
en equipo, mientras que las tradicionales se enfocan en mejorar el proceso de 
desarrollo. 
La propuesta metodológica en la que están trabajando los autores abarcará las tres 
dimensiones, aplicando las lecciones aprendidas de ambos paradigmas. 
6.
