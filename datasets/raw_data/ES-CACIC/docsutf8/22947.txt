Aplicación del ómicron ACO al problema de compensación de potencia reactiva en un contexto multiobjetivo
﻿Multiobjetivo.
Pedro Gardel, Benjamin Barán, Hugo Estigarribia, Ubaldo Fernández.
Centro Nacional de Computación, Universidad Nacional de Asunción.
Asunción, Paraguay.
{pgardel, bbaran, hestigarribia}@cnc.una.py, ufernandez@fulbrigthtweb.org.
Resumen.
En este trabajo se presenta una variante del Ómicron ACO (Ant Colony Optimization), un algoritmo
de Optimización por Colonia de Hormiga. Esta variante fue desarrollada para resolver el problema
de Compensación de Potencia Reactiva en redes de transmisión eléctricas, considerando un
contexto multiobjetivo. Los objetivos seleccionados para este trabajo fueron la minimización de la
inversión en los dispositivos de compensación de reactivos y la minimización del promedio de la
desviación de tensión. Para verificar el comportamiento del Ómicron ACO se utilizó como caso de
estudio el sistema estandarizado IEEE 118. A fin de evaluar el desempeño del algoritmo propuesto
se lo comparó con el SPEA (Strength Pareto Evolutionary Algorithm), un reconocido algoritmo
evolutivo de segunda generación. Los resultados experimentales muestran un mejor desempeño del
Ómicron ACO para el caso de estudio considerado.
Palabras Claves: Optimización Multiobjetivo, Optimización por Colonias de Hormigas,
Compensación de Potencia Reactiva, Algoritmos Evolutivos.
VI Workshop de Agentes y Sistemas Inteligentes (WASI)
1  Introducción.
La Compensación de Potencia Reactiva en Sistemas de Potencia usualmente es estudiada como un
problema de optimización de un solo objetivo, con restricciones [3], [4], [8]. La función objetivo la
constituye una combinación lineal de los factores de interés como, por ejemplo, los gastos en
inversión y pérdidas de transmisión. El perfil de tensión es considerado como una restricción.
Solamente en años recientes se han hecho esfuerzos por resolver este problema en un contexto
multiobjetivo utilizando para ello un Algoritmo Evolutivo de Optimización Multiobjetivo - MOEA
(Multi-Objective Evolutionary Algorithm) [1], [2], [9]. En estos antecedentes, el MOEA más
utilizado fue el SPEA, un reconocido MOEA de segunda generación [11].
Los algoritmos tradicionales de optimización generalmente obtienen sólo una solución. Sin
embargo, los MOEAs optimizan simultánea e independientemente varios parámetros dando como
resultado un grupo de soluciones óptimas denominado conjunto Pareto óptimo. De esta forma, se le
presenta a la persona encargada de tomar la decisión final una amplia gama de alternativas para
decidir cual es, a su criterio, la mejor solución de compromiso. Esto obedece a que en problemas
prácticos, como el de la compensación de reactivos, generalmente no existe una única solución
óptima del problema.
El resto del presente trabajo está organizado de la siguiente manera: en el capítulo 2 se presentan los
problemas de optimización multiobjetivos. Seguidamente, se enuncia el problema y su
correspondiente  formulación matemática en el capítulo 3. En el capítulo 4 se describen el método
propuesto OE (Ómicron Eléctrico) y el SPEA. En el capítulo 5 se muestran los resultados
experimentales. Finalmente, se exponen las conclusiones y las referencias correspondientes.
2  Problemas de Optimización Multiobjetivos.
Un problema de optimización multiobjetivo – MOP (Multi-Objective Problem) [2], incluye a un
conjunto de n variables de decisión, un conjunto de k funciones objetivo y un conjunto de m
restricciones. Los objetivos y las restricciones son funciones de las variables de decisión [10]. Esto
puede ser expresado de la siguiente manera:
Optimizar la función y = F(x) = [F1(x), F2(x),.,Fk(x)]
sujeto a las restricciones        E(x) = [e1(x), e2(x),.,em(x)] >0
   donde el vector de decisión es             x = [x1, x2, ….. xn] ∈ Xf
    siendo el vector objetivo             y = [y1, y2, ….. yk] ∈ Yf
En estas expresiones, x es conocido como el vector de decisión y el espacio de decisión está
denotado por X; y es el vector objetivo perteneciente al  espacio objetivo Y. El conjunto de
restricciones E(x) > 0 determina el conjunto de soluciones factibles Xf ⊂ X, donde su
correspondiente conjunto de vectores objetivo factibles se denota por Yf.
Para comparar dos soluciones en un contexto multiobjetivo, se utiliza el concepto de dominancia
[10]. En un contexto de minimización, dados dos vectores de decisión u y v  Xf , se dice que u
domina a v , denotado por  u ≻ v si:
1- u es menor o igual a v en cada objetivo, o sea,  Fi(u) ≤  Fi(v), ∀i {1, 2, ... , k}
2- u es estrictamente menor que v en al menos un objetivo.
La dominancia en un contexto de maximización se define de forma análoga.
Se dice que u es no comparable con v si u no domina a v ni v domina a u, lo que habitualmente se
denota como u ∼ v.
El criterio de optimabilidad Pareto establece que una solución es Pareto óptima si no existe otra
solución que la domine. Matemáticamente, el concepto de optimabilidad Pareto puede ser definido
en los siguientes términos:
Dado un vector de decisión x ∈  Xf  y su correspondiente vector objetivo y = F(x) ∈  Yf, se dice que
x es no dominado respecto a un conjunto A ⊆  Xf  si y solo si
∀  a ∈  A : (x ≻ a ∨  x ∼ a)
donde ∨  denota al operador or lógico.
En caso que x sea no dominado respecto a todo el conjunto Xf, y sólo en ese caso, se dice que x es
una solución Pareto óptima (x ∈  P –el conjunto Pareto óptimo), mientras que la correspondiente
solución y es parte del frente Pareto óptimo real FP.
Matemáticamente el conjunto Pareto óptimo, P, se define de la siguiente forma: 
Dado el conjunto de vectores de decisión factibles Xf , se denomina P al conjunto de vectores de
decisión no dominados que pertenecen a Xf, es decir:
P = { x ∈  Xf | x es no dominado con respecto a Xf }
Basado en esto, el frente Pareto óptimo  esta dado por: FP = F(P)
3  Descripción del Problema.
Los sistemas de transmisión y distribución de energía eléctrica emplean dispositivos de
compensación de potencia reactiva, tanto capacitiva como inductiva, para regular el nivel de tensión
en las barras de subestaciones de los mismos. Por ejemplo, en condiciones de carga leve se insertan
reactores (compensación inductiva) de forma a evitar sobretensiones en el sistema. Análogamente,
los bancos de capacitores (compensación capacitiva) son empleados para elevar la tensión ante
subtensiones.
Adicionalmente, se comprueba [1],[2] el efecto que tiene una compensación reactiva adecuada en la
reducción de las pérdidas del sistema y en el aumento de la capacidad de transmisión del mismo.
Por ello se hace interesante contar con un algoritmo de optimización por el cual se determine la
cantidad, dimensión y ubicación de los elementos de compensación, tanto reactores como
capacitores, con la que se obtengan los mayores beneficios posibles a la vez que se minimice la
inversión requerida.
3.1 Formulación Matemática del Problema.
Para la formulación matemática del problema, se han hecho las siguientes consideraciones:
1. El costo unitario de los bancos de reactivos es el mismo para todas las barras del sistema, tanto
para los bancos de carácter capacitivo como inductivo.
2. Se considera solamente la red eléctrica cargada con la demanda de potencia en el horario de
mayor consumo, lo que se conoce como carga pico o carga en punta.
3. Se consideran solamente valores discretos para los bancos de reactivos.
Basados en estas consideraciones, se han identificado dos funciones objetivo, F1 y F2, a ser
minimizadas, tal como:
a) F1 : Inversión en dispositivos de compensación reactiva.
∑
=
= n
i
iBF
1
1
sujeto  a las siguientes restricciones:  F1 ≤ F1max 
 Bi ≤ Bimax 
donde F1  es la inversión total requerida; F1max  es la máxima inversión disponible para todo
el sistema; Bi es la compensación en la barra i medida en MVAr; Bimax es el máximo valor
absoluto de compensación reactiva posible dicha barra del sistema y n es el número de
barras en el sistema.
b) F2: Desviación promedio de voltaje.
n
VV
F
n
i
ii∑
=
−
= 1
*
2
donde F2  es el promedio de la desviación de voltaje, Vi el voltaje efectivo obtenido en la
barra i y Vi* el voltaje deseado en dicha barra.
3.2 Codificación de la solución y espacio de búsqueda.
Para la minimización de F1 y F2  el vector objetivo es codificado como una n-tupla. A cada barra del
sistema eléctrico se le asocia una entrada de esta n-tupla donde el valor de dicha entrada representa
el tamaño del banco reactivo, en MVAr, que está ubicado en la misma. Es decir, cada solución
generada, conocida también como individuo, corresponde a una forma de distribución de los bancos
de reactivos en la red. Como ejemplo, en un sistema eléctrico de 3 barras, B = [1,0,-2] sería una
solución. Estos valores indican que en la primera barra existe un banco capacitivo de 1 MVAr, que
la segunda barra no tiene ninguna compensación y que la tercera barra tiene un banco inductivo de
2 MVAr. Nótese que el signo positivo indica un banco de capacitores y el signo negativo un banco
de reactores.
El espacio de búsqueda para cada barra está restringido de acuerdo a Bi ∈  SPi = [bi1,……,bij…….,bic].
Cada bij representa un valor de compensación posible. A bi1 le corresponde la máxima
compensación inductiva, a bic la máxima compensación capacitiva y a un bij central la
compensación nula. La cantidad de valores que puede tomar bij queda determinado por los límites
de compensación, Bimax, y por el nivel de discretización adoptado. Esta cantidad de valores de
compensación posibles para cada barra se denota por c. En este trabajo se adoptó el mismo valor de
c para todas las barras, pero este podría variar de acuerdo a la tensión y a las características de cada
barra en particular. 
Los valores de Bm y del módulo incremental son elegidos de acuerdo a las características eléctricas
y topológicas de la red eléctrica. El conocimiento del sistema es importante para definir los valores
iniciales adecuados. Si los mismos no pueden ser definidos a priori, dichos valores son
determinados  por pruebas sucesivas.
4 Descripción de los algoritmos, OE y SPEA. 
4.1 Ómicron Eléctrico (OE) .
El algoritmo de Optimización por Colonia de Hormigas (Ant Colony Optimization - ACO) está
inspirado en el comportamiento de búsqueda de alimento de las hormigas naturales [5]. El ACO usa
una matriz de feromonas τ = {τij} para la construcción de soluciones potencialmente buenas [5].
Los valores iniciales de τ son fijados a un valor constante: τij = τ0 > 0 ∀ (i,j). El ACO también
aprovecha información heurística, dependiente de las características propias de cada problema,
utilizando el parámetro η conocido como visibilidad, que será explicado posteriormente.
El OE utiliza el concepto del ACO para generar soluciones o individuos [6] y [7]. 
El conjunto de soluciones no dominadas encontradas son agrupadas en la población Pob. Cada
nueva solución generada es comparada con Pob, conservándose solamente las no dominadas.
Este proceso de generación, evaluación y comparación es repetido iterativamente. 
Todas las soluciones de Pob se utilizan para actualizar la matriz de feromonas (τ). El parámetro O
(Ómicron) que es un parámetro constante determina la cantidad de feromona que cada solución
deposita al actualizar la matriz de feromonas.
Por otro lado, la probabilidad ijPr  de escoger el banco bij para ser ubicado en la barra i está definida
por la siguiente ecuación:



×
×
= ∑ ητ
ητ
βα
βα
ijij
ijij
ijPr (1)
donde los parámetros α y β definen la influencia relativa entre los niveles de feromonas y la
visibilidad.
Para generar un individuo, cada hormiga recorre secuencialmente las barras del sistema eléctrico.
Basados en la probabilidad Prij, un determinado valor bij es sorteado y asignado a Bi. Al final del
recorrido la hormiga genera la n-tupla B.
La matriz de feromonas τ  tiene un número de filas n, igual al número de barras del sistema y un
número de columnas c, igual a la cantidad de niveles de discretización de SPi. De esta manera cada
fila de τ  tiene asociada una barra del sistema y cada columna un valor de SPi. La primera columna
de τ representa el mayor valor del reactor bi1 permitido y la última columna corresponde al mayor
valor de capacitancia bic.
Una generación es definida como un número K de iteraciones, luego de las cuales se procede a la
actualización de la matriz de feromonas.
En la actualización de τ se utilizan todos los individuos de Pob. El número de individuos en Pob es
denotado por m. Para la actualización de la matriz de feromonas la hormiga realiza los siguientes
pasos:
1- Igualar τ a la matriz unitaria.
2- Selecciona un individuo de Pob.
3- Detectar el valor b1j de reactivo asignado a la primera barra del sistema.
4- Depositar un cantidad de O/m feromonas en la columna j de τ.
5- Repetir los pasos 3 y 4 para todas las barras del sistema.
6- Repetir los pasos del 2 al 5 para todos los individuos de Pob.
4.1.1 Visibilidad η.
La visibilidad η es una función que intenta guiar a las hormigas en la construcción de buenas
soluciones. De manera similar a la matriz de feromonas, la visibilidad asigna a cada barra i un
vector fila η[i] con c columnas. Cada columna de η[i] está asociada a un valor en MVAr de banco
de reactivo.
Debe tenerse en cuenta que una barra con desviación de tensión positiva, tensión mayor que la
deseada (Vi*), necesitaría una compensación inductiva y una barra con desviación negativa, tensión
menor que Vi*, requeriría compensación capacitiva [4],[8].
La visibilidad opera asignando una determinada probabilidad de ser elegido a cada valor de
compensación de reactivos representado en cada fila de η. Para poder explorar más eficientemente
el espacio de soluciones del problema la visibilidad no es estática durante una generación sino que
varía dinámicamente en una generación. Así, η esta compuesta por dos funciones η1 y η2, conforme
a la siguiente ecuación:[ ] [ ] [ ]jwijwij 2211 ** ηηη += (2)
donde w1 y w2 son valores de ponderación que varían al transcurrir la generación.
La función η1 otorga mayor probabilidad a las soluciones con gran compensación y η2 a las
soluciones con poca compensación.
Los pasos a seguir para calcular la visibilidad son presentados a continuación y con un ejemplo de
una red de 3 barras para su mejor comprensión:
(1) Calcular las tensiones en las barras sin ninguna compensación de reactivos en la red. En
nuestro ejemplo supongamos que las tensiones son: V = [1.1 0.82 0.98], es decir, la primera
barra tiene el 110% de la tensión ideal, la segunda el 82% y la tercera el 98%. 
(2) Calcular la desviación de tensión en las barras. En el ejemplo seria ∆V = [0.1 –0.18 –0.02].
Nótese que la primera barra necesita compensación inductiva y las otras dos capacitiva.
(3) Asignar probabilidades crecientes a los distintos valores de compensación de acuerdo a la
necesidad de cada barra con la función η1. Esta función favorece la elección de soluciones
con gran cantidad de reactivo, siendo el máximo valor asignado proporcional a la desviación de
tensión en cada barra, utilizándose un factor de proporcionalidad “a”, hallado empíricamente.
Los valores asignados por η1  siguen  una progresión aritmética creciente o decreciente de
acuerdo a si es necesaria una compensación capacitiva o inductiva. En el ejemplo, suponiendo
que elegimos valores de ± 2 MVAr como máximas compensaciones admisibles por barra y un
factor de proporcionalidad a = 10, se obtiene: 
Barra Nº -2MVAr -1MVAr 0 MVAr 1MVAr 2MVAr
1 101 76 51 26 1
2 1 46 91 136 181η1 =
3 1 6 11 16 21
Tabla 1: Ejemplo de asignación de probabilidades de visibilidad de la función η1
(4) Asignar probabilidades mayores a los bancos de reactivos de poco valor a través de la
función η2 .Esta que tiene como objetivo guiar a las hormigas a encontrar soluciones con poca
compensación. Los valores de probabilidad asignados por η2 siguen una progresión aritmética,
primero creciente y luego decreciente teniendo un pico en la probabilidad asociada a la
compensación nula. Para un valor de referencia se utiliza el promedio de la desviación de
tensión ( V∆ ) en todas las barras y un factor de proporcionalidad “b”. En el ejemplo V∆  = 10
% y para una constante de proporcionalidad b = 10 se obtiene:
-2MVAr -1MVAr 0 MVAr 1MVAr 2MVAr
η2 = 1 51 101 51 1
Tabla 2: Ejemplo de asignación de probabilidades de visibilidad de la función η2
(5) Los valores de η[ij] para cada iteración son calculados mediante la fórmula (2), donde los
valores de ponderación w1 y w2 varían de acuerdo al número de iteración de la generación. En
base al número identificador de hormiga de la generación, w1 varía gradualmente de 1 en la
primera iteración hasta 0 en la última iteración y w2 varía de 0 en la primera iteración hasta 1 en
la última. Estos valores son los utilizados en la ecuación 1 para hallar la probabilidad final que
guiará a las hormigas para la construcción de buenas soluciones.
Los valores de η[ij] para tres iteraciones del ejemplo considerado se presentan en la tabla 3,
donde en la primera iteración w1 = 1 y w2 = 0, en una iteración intermedia w1 = 0.5 y w2 = 0.5 y
en la última iteración de una generación w1 = 0 y w2 = 1:
MVAr -2 -1 0 1 2 -2 -1 0 1 2 -2 -1 0 1 2
101 76 51 26 1 51 63.5 76 40.5 1 1 51 101 51 1
η[ij] 1 46 91 136 181 1 48.5 96 93.5 91 1 51 101 51 1
1 6 11 16 21 1 28.5 56 33.5 11 1 51 101 51 1
a) b) c)
Tabla 3: Ejemplos de asignación de probabilidades de visibilidad de la función compuesta η para tres iteraciones
distintas: a)  la primera de la generación , b) una intermedia y c) la última iteración de la generación.
Así, con la utilización de la función compuesta η se busca construir buenos individuos con gran
cantidad de compensación al principio de una generación e ir disminuyendo la cantidad de
compensación al terminar la misma. Con esto se busca una mejor exploración del espacio de
búsqueda. A continuación se presenta el pseudocódigo del Ómicron ACO propuesto. 
Pseudocódigo del Ómicron Eléctrico:
Parámetros de entrada: O, Configuración de la red con sus cargas, K.
Parámetros de salida: Pob.
Calcular visibilidad.
Cargar población inicial.
Mientras no se cumpla con la condición de parada.
Actualizar τ.
Mientras no se llegue a la condición de término de la generación, K.
Crear nuevo individuo
Correr el flujo de potencia.
Si Pnew es no dominado con respecto a Pob.
Pob = Pob + Pnew. 
Fin mientras, de la generación. 
Fin mientras, del algoritmo.
Calcular visibilidad.
Correr el flujo de potencia con la red sin ninguna compensación de reactivos.
Calculo de η1:
Para i = 1 hasta n.
*ViViVi −=∆
Si 0>∆Vi
Para j =1 hasta c
[ ]
1
)1(1,1 −
∆−−+∆=
c
VajVaji iη
Obs: Los valores de [ ]ji,1η  disminuyen   conforme a una progresión aritmética 
Fin para
Fin si.
Si 0<∆Vi
Para j =1 hasta c
[ ]
1
)1(1,1 −
∆−+=
c
Vajji iη
Obs: Los valores de [ ]ji,1η  aumentan conforme a una progresión aritmética.
Fin para
Fin si.
Fin para.
Calculo de η2:
∑
=
∆=∆
n
i
iVbV
1
*
Para j = 1 hasta 1
2
1 +−c .
[ ] ( ) .
1
*2*112 −
∆−+=
c
Vjjη
Obs: Los valores de [ ]j2η  aumentan gradualmente desde [ ]12η  hasta la columna asociada a la compensación
nula
Fin para.
Para j =
2
1−c +1 hasta c
[ ] ( )
1
*2*1..212 −
∆−−∆+=
c
VjVjη
Obs: Los valores de [ ]j2η  disminuyen gradualmente desde la columna asociada a la compensación nula hasta[ ]n2η  
Fin para.
Actualizar τ.
Inicializar τ como matriz de unos de n * c.
Para cada individuo (Pobind) de Pob.
Para i = 1 hasta n
τ (i , Pobind(j))= τ (i , Pobind(j)) + O/m.  
Obs:  Se le suma O/m a la columna asociada al valor del banco ubicado en la barra i del individuo Pobind.
Fin para.
Fin para.
Crear nuevo individuo.
Para i = 1 hasta n.
Para j = 1 hasta c.[ ] [ ] [ ]jwijwij 2211 ** ηηη +=



×
×
= ∑ ητ
ητ
βα
βα
ijij
ijij
ijPr
Se escoge el banco de correspondiente a cada barra de Pnew(i) probabilísticamente de
acuerdo a iPr  y iη
Fin para.
Fin para.
4.2 SPEA.
El algoritmo implementado por Barán et al. está basado en el SPEA [11], con las siguientes
modificaciones:
(a) Inicialización Heurística. Un método heurístico especialmente concebido es utilizado para
generar la población inicial de modo tal a obtener individuos eléctricamente bien compensados.
La heurística propuesta se basa en fomentar la compensación en barras con mayor número de
líneas y mayor desviación de tensión. Esto se efectúa mediante un procedimiento resumido a
continuación:
a.1 Determine un valor de la compensación global Btot.
a.2 Para cada barra i en el sistema, calcular un factor Ki según:

 ≥
<−= *
**
0
)(
ii
iiiii
i VVsi
VVsilVVK (3)
donde il  es el número de líneas conectadas al nodo i. Ki = 0 indica que no se asigna ninguna
compensación reactiva inicial a la barra i.
a.3 Normalizar iK  usando:
∑
=
= n
i
i
i
i
K
K
K
1
'
(4)
a.4. Compensar cada barra i con iB   calculado según:
totii BKB
'= (5)
(b) Optimización local. Una técnica heurística es implementada de manera tal a mejorar individuos,
basada en determinar una dirección de búsqueda adecuada usando las ecuaciones de flujo de
potencia según:



∆
∆


=


∆
∆
VJJ
JJ
Q
P δ
.
43
21 (6)
De (6) y despreciando 3J  así también como los elementos no diagonales de { }ijJJ 44 = , se
deriva la siguiente expresión:
)( *44 iiijiij VVJVJQ −=∆≈∆ (7)
donde iQ∆ es la cantidad de compensación reactiva a ser adicionada a la barra i. 
(c) Criterio de parada. Los cálculos se detienen cuando ninguna nueva solución no dominada se
encuentre luego de un número dado Nstop de iteraciones sucesivas.
(d) Freezing. Inspirado en la técnica del Templado Simulado, las probabilidades (de mutación Pm,
cruzamiento Pc y de aplicación del optimizador local Pto) cambian con el número de
generaciones y valor de la adaptabilidad, quedando eventualmente invariables al final para
mejorar la convergencia.
El método propuesto por Barán et al. [1], [2] , [9], puede ser resumido según los siguientes pasos:
1- Generar una población inicial Pop usando el método heurístico expuesto en [1], [2] y [9],
creando, además, dos conjuntos externos no dominados Pknown y SPknown (población externa
almacenada). 
2- Copiar los miembros no dominados de Pop en Pknown y SPknown.
3- Remover los individuos en SPknown que sean dominados por algún miembro de SPknown. 
4- Remover los individuos en Pknown que sean dominados por algún miembro de SPknown.
5- Si el número de soluciones externas en Pknown excede a un máximo dado, se aplica el
agrupamiento para reducir la población a ese máximo.
6- Calcular la función adaptabilidad de cada individuo en Pop así también como de los individuos
de Pknown usando procedimientos de evaluación de adaptabilidad del SPEA.
7- Seleccionar individuos de Pop + Pknown (unión multigrupo) hasta que el conjunto de
cruzamiento esté completo. Se utiliza la ruleta como método de selección.
8- Aplicar las probabilidades de mutación Pm, cruzamiento Pc y de aplicación del optimizador
local Pto para determinar si un individuo es optimizado localmente o seleccionado para
cruzamiento y mutación; en este último caso se aplican operadores genéticos standard.
9- Ir al paso 2 si el criterio de parada no es verificado.
5 Resultados experimentales.
Para comparar el desempeño de los dos algoritmos (OE y SPEA) se hicieron 5 corridas de ambos
algoritmos. La población inicial fue hallada de la misma manera que lo hicieron Barán et al. [1], [2],
[9]. Se creó una única población inicial para todas las corridas tanto del OE como del SPEA.
- Para el SPEA se determinó un número de generaciones máxima de 120 con una cantidad de
individuos de 100. Como el concepto de generación no es el mismo para ambos algoritmos se
decidió utilizar una condición de término de 10.000 individuos construidos por Ómicron ACO,
ya que esto toma aproximadamente el mismo tiempo que las realizadas con el SPEA. Para el
Ómicron ACO se utilizó K = 1000 y O = 1500, determinados experimentalmente por medio de
pruebas sucesivas. 
- Los resultados de las corridas del Ómicron ACO fueron denotados como H, numeradas del 1 al
5 y los del SPEA como S, también numeradas del 1 al 5.
- En la tabla 4 se muestran los resultados comparando ambos algoritmos. En la primera columna
se indica, entre paréntesis, la cantidad de soluciones halladas por cada corrida del Ómicron
ACO mientras que en la primera fila se hace lo propio con el SPEA. Así en la primera columna
se observa que la primera corrida del Ómicron ACO (H1) hallo 75 individuos y la última 71y en
la primera fila se observa que la primera corrida del SPEA (S1) hallo 95 soluciones.
En la parte media de la intersección de una fila con una columna encabezada por una corrida del
SPEA se halla la cantidad de individuos no dominados de la unión de ambas corridas. Así, en la
unión de las corridas H1 y S1 (denotado genéricamente por S1 ∪ H) hay 76 individuos no
dominados para H1, pero solo 74 para H5. Estos resultados están en negrita para su mejor
visualización. A la izquierda de este valor se muestra la cantidad de estos individuos que fueron
hallados por el Ómicron ACO y a la derecha los hallados por el SPEA, o sea, que H1 encontró
75 y el S1 solo 1 individuo del conjunto de no dominados de la unión de ambos conjuntos,
mientras que al considerar el conjunto S1∪ H5, se tiene 74 soluciones, de las cuales, 71 fueron
encontradas por H5 y solo 3 por S1.
S1(95) S2(110) S3(129) S4(100) S5(84)
H* S1UH S* H* S2UH S* H* S3UH S* H* S4UH S* H* S5UH S*
H1(75) 75 76 1 75 82 7 75 77 2 75 83 8 75 76 1
H2(80) 80 87 7 79 97 18 78 89 11 79 89 10 80 83 3
H3(84) 84 85 1 84 90 6 84 85 1 84 85 1 84 85 1
H4(77) 77 77 0 77 77 0 77 77 0 77 78 1 77 77 0
H5(71) 71 74 3 71 84 13 71 75 4 69 75 6 71 74 3
Tabla 4 . Resumen de las corridas. Las columnas SUH indican la cantidad de individuos del conjunto Pareto de la unión
de dos corridas, una del Ómicron ACO(H) y otra del SPEA(S), las columnas H* indican cuantos individuos de dicho
conjunto Pareto fueron hallados por el Ómicron ACO y las columnas S* los hallados por el SPEA.
- En la tabla 5 se muestra la cantidad de individuos de las corridas del OE dominados por algún
miembro de las corridas del SPEA. Así, en la segunda fila, segunda columna se muestra que
ningún elemento de H1 es dominado por alguna solución generada por el SPEA y sólo algunos
pocos individuos de H2 y H5 son dominados por algún individuo hallados por el SPEA.
S1 S2 S3 S4 S5
H1 0 0 0 0 0
H2 0 1 2 1 0
H3 0 0 0 0 0
H4 0 0 0 0 0
H5 0 0 0 2 0
Tabla 5 Individuos hallados por el Ómicron ACO dominados por algún individuos hallado por el SPEA.
- La tabla 6 es análoga a la 5 sólo que muestra los individuos hallados por el SPEA dominados
por algún individuo hallado por el OE.
H1 H2 H3 H4 H5
S1 94 88 94 95 92
S2 103 92 104 110 97
S3 127 118 128 129 125
S4 92 90 99 99 94
S5 83 81 83 84 81
Tabla 6 Individuos hallados por el SPEA dominados por algún individuo hallado por el Ómicron ACO.
- Finalmente, en la tabla 7 se muestra la contribución de cada corrida para el Frente Pareto
obtenido de la unión de las 10 corridas, 5 de cada algoritmo. En la columna encabezada por FPh
se muestra la cantidad de individuos hallados por cada corrida del OE que pertenecen al Frente
Pareto, análogamente en la columna encabezada por FPs se muestra la cantidad de individuos
hallados por cada corrida del SPEA pertenecientes al Frente Pareto.
FPh FPs
1 14 0
2 10 0
3 30 0
4 32 0
5 19 0
Total: 104 0
Tabla 7. Contribución de cada corrida de ambos algoritmos al Frente Pareto.
A continuación se presenta la figura 1 donde están representados los conjuntos de soluciones no
dominadas de las corridas del OE y del SPEA por separado.
Figura 1. Gráfica de los conjuntos Pareto obtenidos de la unión de las 5 corridas de cada algoritmo.
6  Conclusiones y trabajos futuros.
Este trabajo propone el algoritmo Ómicron Eléctrico, una variante del Ómicron ACO para su
aplicación al problema de compensación de potencia reactiva en un contexto multiobjetivo. A
conocimiento de los autores, este algoritmo es el primer Algoritmo de Optimización por Colonia de
Hormigas aplicado al problema de compensación de potencia reactiva , en un contexto
multiobjetivo. Se creó, a tal efecto, un nuevo enfoque de la visibilidad especialmente pensado para
un algoritmo ACO multiobjetivo aplicado al problema en estudio.
De los resultados obtenidos se concluye que el Ómicron Eléctrico es una alternativa muy promisoria
para la solución de este problema, presentando un desempeño claramente superior al SPEA, uno de
los algoritmos más competitivos en este tipo de problemas, para un reconocido sistema eléctrico de
prueba (IEEE-118). De hecho, las soluciones halladas por el Ómicron Eléctrico llegan a dominar
totalmente a las encontradas por el SPEA dentro del rango de compensación en estudio. Esto es por
demás alentador considerando además, que el Ómicron ACO aplicado a resolver el problema de
compensación de reactivos aquí presentado (OE) no presenta grandes refinamientos ni utiliza
algoritmos de búsqueda local, como lo hace el SPEA utilizado con fines de comparación.
En trabajos futuros se probará al Ómicron ACO con más objetivos y se limitarán las soluciones a
bancos de tamaños que se hallen comercialmente. Además se harán pruebas en otros casos de
estudio. 
Otra modificación que se podría introducir al algoritmo es la utilización de más de una matriz de
feromonas, para guardar agrupar en cada matriz soluciones semejantes, y más de un frente para
guardar no solamente las soluciones no dominadas.
