CODILA A
﻿ En línea con las necesidades de la disciplina de Ingeniería de 
Software de adaptarse a los requerimientos del Desarrollo de Software Global; 
de capacitar y dar a los estudiantes la oportunidad de desarrollar habilidades 
sociales y pensamiento crítico para el trabajo en grupo; de ajustar, mejorar o 
generar procesos, técnicas y herramientas para entornos distribuidos, con 
resultados validados y fundamentados estadísticamente a través de estudios 
empíricos; y de incorporar a los programas de las carreras en sistemas y 
computación  estas temáticas que el mercado mundial demanda, es que se 
propone “Modelo de apoyo para la preparación de actividades experimentales 
destinadas a la enseñanza de Ingeniería de Software en ambientes colaborativos 
y distribuidos geográficamente”. Este modelo, denominado CODILA Ampliado 
o CODILA+A, (Collaborative and Distributed Learning Activity) es un modelo 
abstracto, generado a partir de experiencias previas, que guía las actividades de 
un proceso de enseñanza-aprendizaje de temáticas de Ingeniería de Software, en 
ambiente experimental, usando estrategias colaborativas entre grupos de 
personas geográficamente dispersas. 
Keywords: Ingeniería de software experimental; Ingeniería de software Global; 
CSCL; CSCW; modelo instruccional 
 1. Introducción 
1.1 Presentación del Tema 
El crecimiento vertiginoso de las Tecnologías de la Información y Comunicaciones 
(TICs) está generando nuevas formas de trabajo y modificando diversas prácticas en 
la vida cotidiana. En esta transformación tecnológica se observa una tendencia 
progresiva hacia la colaboración entre personas para alcanzar un objetivo común.  
La globalización en la Ingeniería de Software, al superar las barreras del tiempo y 
la distancia, permite reducir el tiempo de llegada al mercado, incrementar la 
productividad de los equipos, mejorar la calidad del producto y reducir los costos de 
desarrollo [1]. El trabajo distribuido es una consecuencia de la globalización y 
representa un importante y creciente escenario laboral. El desarrollo de software 
global está transformándose en norma dentro de la industria del software, agrega 
nuevas complejidades y desafíos. Pero la gestión de desarrollo de software global y 
distribuido aún está en evolución [1], restan métodos y técnicas a desarrollar y 
validar, para transformarla en una disciplina más madura. 
La complejidad de la construcción de software es bien conocida y documentada, 
incluye aspectos técnicos, cognitivos y sociales. Como resultado de esta actividad 
multifacética, los programas  de ciencias de la computación e ingeniería de software 
entregados por las universidades deben poner especial atención a las tareas realizadas 
por los estudiantes, con el fin de: (1) mejorar su capacidad de analizar y resolver 
problemas, (2) exponerlos a un verdadero escenario de desarrollo de software, y (3) 
enseñarles a trabajar en ambientes geográficamente distribuidos.  
A partir de esta perspectiva, cobra mayor importancia el área de investigación de 
Trabajo Cooperativo Asistido por Computador (CSCW-Computer Supported 
Collaborative Work), encaminado al estudio del ser humano dentro del contexto de 
trabajo, así como del diseño de herramientas (groupware) que den soporte al trabajo 
en grupo [2]. El objetivo es mejorar la comunicación y promover la generación de 
nuevos paradigmas de interacción, con estrategias que fomenten los componentes 
esenciales del trabajo colaborativo, en entornos donde impera la necesidad de la 
ejecución de tareas grupales. 
El aprendizaje colaborativo soportado por computador (CSCL-Computer 
Supported Collaborative Learning) permite integrar un proceso de aprendizaje en 
ambientes mediados por computadoras. Para un aprendizaje social, los alumnos deben 
interactuar unos con otros, compartir información y coordinar acciones. La mediación 
computacional crea potenciales obstáculos, y el desafío es cómo fomentar 
interacciones efectivas alumno-alumno en entornos colaborativos [3]. 
En general toda la comunidad educativa de ingeniería de software está 
gradualmente moviéndose de clases teóricas, donde el alumno es un receptor pasivo, a 
proyectos en equipo, para resolver problemas vinculados directamente al desarrollo 
real y otros formatos de aprendizaje que requieren que los estudiantes ejerciten las 
ideas que estudiaron teóricamente [4], [5]. 
Estos cambios de paradigma de trabajo, donde se deben incorporar nuevos 
procesos ó técnicas, ó adaptar los mismos, deberían ser empíricamente probados a 
través de los principios de la ingeniería de software experimental, que promueven la 
aceptación de conclusiones solo una vez que se verifiquen una serie de pruebas 
experimentales fiables que confirmen su veracidad [6], [7], [8] e inclusive tener 
información respecto del impacto de esos cambios [9].  
Este trabajo presenta un Modelo (Modelo CODILA Ampliado) que guía las 
actividades de un proceso de enseñanza-aprendizaje de temáticas de Ingeniería de 
Software, en un ambiente experimental, usando estrategias colaborativas entre grupos 
de personas geográficamente dispersas, y es el resultado de la tesis de Maestría en 
Informática de la UNLaM, del primer autor, asesorada por 2º y  3º autor. 
1.2 Justificación 
Las instituciones educativas deben contribuir al alumno a desarrollar las habilidades 
sociales requeridas para trabajar en un mercado de desarrollo de software global, en 
su futuro como ingenieros de software. Estas capacidades son tan importantes como 
las habilidades técnicas, por lo tanto los ingenieros de software deben estar entrenados 
no sólo en aspectos científicos y técnicos del software sino también en habilidades 
sociales que le permitan hacer un trabajo efectivo. Un enfoque orientado a la práctica 
de instrucción es un buen recurso para la enseñanza de ingeniería de software [10]. 
Los estudios empíricos son cruciales para la evaluación de procesos y actividades 
realizadas por el hombre La experimentación provee una forma sistemática, 
disciplinada, cuantificable y controlada de evaluar actividades ejecutadas por los seres 
humanos, permitiendo a los investigadores en ingeniería de software, evaluar nuevas 
invenciones y propuestas, comparándolas con las existentes [6]. 
El proceso desarrollo de software es esencialmente colaborativo, varias personas 
trabajan con un mismo objetivo, coordinando acciones, tareas y decisiones. Cuando 
esas personas trabajan en diferentes entornos, el Trabajo Cooperativo Asistido por 
Computador (CSCW) se torna imperioso.  
El trabajo colaborativo requiere de habilidades sociales y capacidades de las 
cuales se debe recibir cierta instrucción y no hay mejor instrucción que ‘aprender 
haciendo’ [11]. El Aprendizaje Colaborativo Asistido por Computador (CSCL) 
permite a los alumnos aprender, interactuando unos con otros en entornos mediados 
por computadora y adquirir habilidades sociales y de trabajo en equipo. 
En línea con las necesidades de la disciplina de Ingeniería de Software de: 
adaptarse a los requerimientos del Desarrollo de Software Global; de capacitar y dar a 
los estudiantes la oportunidad de desarrollar habilidades sociales y pensamiento 
crítico para el trabajo en grupo; de ajustar, mejorar o generar procesos, técnicas y 
herramientas para entornos distribuidos, con resultados validados y fundamentados 
estadísticamente a través de estudios empíricos; y de incorporar a los programas de 
las carreras en sistemas y computación, todas estas temáticas que el mercado mundial 
demanda, es que se propone un “Modelo de apoyo para la preparación de actividades 
experimentales destinadas a la enseñanza de Ingeniería de Software en ambientes 
colaborativos y distribuidos geográficamente”, como resultado de la tesis de maestría 
que en este trabajo se presenta. 
1.3 Limitaciones y alcances 
Esta propuesta está desarrollada para el diseño de actividades experimentales, y, 
aunque no limitada, para la enseñanza de ingeniería de software en ambientes 
colaborativos y distribuidos, con diseños de uno y dos factores con hasta dos 
tratamientos. 
Las experiencias, en las que se basó el presente trabajo, fueron desarrolladas con 
estudiantes avanzados, ó recién recibidos, de carreras relacionadas a la informática y 
computación, de universidades latinoamericanas de habla hispana: U. de Chile, P. U. 
C. de Chile, U. del Quindío (Colombia), U. del Cauca (Colombia), U. de EAFIT – 
Medellín (Colombia), U.N.A. de Costa Rica, U. Tecnológica de Panamá y U.N. de 
San Juan, en el marco de diversos proyectos. 
Este trabajo se organiza en secciones, en la sección 1 se ha expuesto la 
introducción a la temática, justificación y planteamiento de la propuesta, en la 2 se 
presentan los antecedentes de la propuesta, en la sección 3 el Modelo Propuesto. En la 
sección siguiente las conclusiones y posibles ampliaciones y finalmente las 
referencias. 
2. Antecedentes 
2.1 Trabajos Relacionados 
Se encontraron muchas propuestas presentando diferentes estrategias de enseñanzaaprendizaje, de procesamiento de los datos, de criterios para medir la colaboración, de 
diferentes momentos en donde medir la colaboración, si se mide con datos 
cualitativos ó cuantitativos o mixtos, si la interacción es cara a cara o distribuida, 
sincrónica ó asincrónica, etc. Todas estas propuestas surgen con el fin de apoyar y 
mejorar el proceso de enseñanza-aprendizaje en la educación de la ingeniería de 
software, en ambientes colaborativos. Sin embargo estas experiencias en general no 
presentan diseños experimentales para la evaluación de la propuesta y validación de 
los resultados y tampoco presentan, salvo algunas excepciones, escenarios 
geográficamente distribuidos.   
2.2 Antecedentes de Investigación en la temática  
En el año 2003 un grupo de investigadores de Ingeniería de Software del Instituto de 
Informática de la UNSJ, se inicia en el camino de los ambientes colaborativos a través 
de la participación en un proyecto de investigación financiado por Brasil, PROSUL. 
Desde el año 2005 se avanza conjuntamente con la línea anterior, en el área de la 
ingeniería de software empírica,  canalizando la investigación y ejecución de 
experimentos a través de proyectos de investigación financiados para UUNN y de  
tesis de Licenciatura en C. Información. El grupo de investigación se fue afianzando y 
concretando vínculos con investigadores de otras Universidades extranjeras (Chile y 
Colombia). La SPU del Ministerio de Educación de la Nación Argentina aprobó y 
financió proyectos, dentro de los prog. Fortalecimiento de Redes Interuniversitarias II, 
III y IV. También se sumaron proyectos financiados por Chile (LACCIR) y por 
Colombia (COLCIENCIAS-CINTEL, Renata, Red Clara), incorporando UUNN de 
esos países y también de Panamá, Costa Rica y Brasil. Estos permitieron, además de 
la movilidad de investigadores, poder planificar y ejecutar experimentos en ambientes 
distribuidos, algunos resultados [15], [16], [17], [18].  
Se concibió el Grupo de investigación LACXSER (Latin American Colaboratory 
of eXperimental Software Engineering Research) [19]. Iniciativa liderada por 
investigadores latinoamericanos en Ingeniería del Software, con el propósito de 
fortalecer las capacidades de investigación aplicada e intercambio académico en IS 
para las Universidades de la región, usando redes académicas de alta velocidad.  
2.3 Los alumnos como sujetos experimentales 
Muchos estudios empíricos han tomado estudiantes como sujetos. Esto incluye un 
doble objetivo, tiene valor pedagógico y de interés para el estudiante y el investigador 
debe ser capaz de asegurar el valor educativo de estos estudios, más allá de los 
objetivos del estudio empírico [20]. En las clases de IS los estudiantes aprenden a 
analizar, diseñar, codificar, testear, etc, todo lo involucrado con el proceso de 
desarrollo de software y son esas las actividades en las que van a participar cuando se 
conviertan en profesionales. Por lo tanto es necesario planificar cuidadosamente, 
dentro de las clases de IS, los estudios empíricos. 
Los estudiantes son considerados en un experimento como profesionales menos 
experimentados, muchas veces sin tener en cuenta los años de estudio, sus 
capacidades o habilidades [10]. 
2.4 Recolección de los datos 
Para las experiencias realizadas se confeccionaron cuestionarios de satisfacción y de 
co-evaluación, siguiendo los lineamientos de Bob Hayes [21] para construir 
cuestionarios estadísticamente fiables. Fueron elaborados en base al conocimiento 
adquirido por el  grupo de investigación del Instituto de Informática de la UNSJ, en 
estudios previos realizados [22], [23] entre otros, y luego adaptados y mejorados con 
el aporte de los investigadores del LACXSER.  
Los experimentos permiten medir variables dependientes [6], aquellas cuyos 
resultados se desean evaluar y analizar cómo son influenciadas por los tratamientos 
aplicados.  Estas variables pueden ser objetivas (datos cuantitativos) y subjetivas 
(datos cualitativos, basados en la percepción). Las variables objetivas se analizarán 
por medio de test de hipótesis de acuerdo a las distribuciones y a la cantidad de datos 
con que se cuente [24],  y las subjetivas a través de los cuestionarios. 
3. Propuesta 
Las experiencias realizadas fueron evolucionando, de actividades con grupos de 
alumnos en forma co-localizada e individual, a actividades colaborativas en ambientes 
geográficamente distribuidos. Siempre con un diseño experimental que diera validez a 
las conclusiones arribadas. 
La presente tesis se nutre de todo lo realizado, de la experiencia adquirida, de los 
resultados obtenidos y propone un nuevo modelo para actividades de aprendizaje 
colaborativo y distribuido, ampliado a una variedad de modelos instruccionales, según 
el diseño experimental. Este modelo es denominado Modelo CODILA Ampliado 
(CODILA + A, en forma abreviada). Este modelo generalizado tiene un fuerte soporte 
experimental y es planteado con ciertas características [6] para poder considerar 
válidas las conclusiones. 
3.1 Modelo CODILA Ampliado - CODILA + A 
El Modelo CODILA Ampliado se enmarca dentro del tipo de aprendizaje cooperativo 
formal [5]. En las actividades ó sesiones planteadas para el Modelo (ver figura 1) 
participan actores (profesores, alumnos) con responsabilidades bien definidas (roles). 
Estos son: Profesor experto (encargado de impartir los conocimientos teóricos y 
definir las actividades prácticas, realiza todas las acciones pre-instruccionales e 
instruccionales de la experiencia), Profesores mediadores (uno por cada universidad 
participante, realizan el seguimiento de sus alumnos)  y Alumnos (son los 
protagonistas y objeto del proceso de enseñanza-aprendizaje). 
 
Fig.1. Modelo CODILA Ampliado (CODILA+A) 
Premisas a tener en cuenta para el uso del modelo: 
Para la conformación de los grupos distribuidos se recomienda la participación de no 
más de tres (3) universidades, en lo posible un alumno por cada una, debido a las 
dificultades existentes con la diferencia horaria y de coordinación. Una cantidad  de 3 
personas por grupo minimiza el trabajo no cooperativo e improductivo [25].  
La temática de IS a abordar debe ser divisible proporcionalmente en tantas 
unidades funcionales ó lógicas como instituciones participen. En este caso debería 
dividirse en tres (3) partes, cada una con coherencia lógica y objetivos individuales, y 
cuya práctica asociada cumpla las mismas características, es decir que el resultado de 
la práctica grupal sea el aporte de los tres componentes prácticos.  
Para crear un ambiente colaborativo y distribuido se usa, en la sesión práctica del 
Modelo CODILA+A, una técnica estructurada como JIGSAW [26].   
Las sesiones involucradas en el modelo CODILA+A son las siguientes: 
1) Sesión de Preparación: definir el objetivo de la actividad, la temática a 
abordar, participantes, identificar variables independientes (factores y tratamientos), 
Sesion/Resp  Univ A   Univ B   Univ C   
Sesión de  
Preparación  
      
Sesión de  
Capacitación  
      
Sesión  
Teórica   
      
Sesión de  
Aprendizaje  
Actividad Práctica desarrollada según Modelo  
Instruccional Elegido  
Sesión de  
Cierre   
  
    
Sesión  
Evaluación  
      
  
Alumno     P rofesor    
  
dependientes, las hipótesis en base a esas variables. Determinar el contexto donde se 
aplicará la actividad y todas las pre-condiciones consideradas para poder replicar el 
experimento bajo el mismo contexto, con otros sujetos. Las actividades de esta sesión 
están relacionadas con las actividades de ‘definición y planificación de la experiencia’ 
de [6],   y las directrices “elección de factores y niveles y selección de la variable de 
respuesta” de [27] y corresponde a la tarea de los profesores “tomar decisiones preinstruccionales” en el marco del aprendizaje cooperativo formal [5].  
2) Sesión de Capacitación: optativa, dependiendo de la temática y la plataforma 
de comunicación se decide si es necesario realizar una capacitación previa a los 
alumnos sobre su uso, o sobre conceptos previos requeridos para nivelar a los 
participantes de la experiencia. Esta sesión corresponde a la “instrucción de 
tecnología” que indica Johnson & Johnson [5]. 
3)  Sesión Teórica: a cargo del profesor experto. Actividad similar a la clase 
expositiva tradicional, el profesor experto también dicta la clase a grupos de alumnos 
geográficamente dispersos, quienes la atienden a través de algún medio de 
comunicación multimedial, en forma remota y sincrónica. Corresponde a la actividad 
“explicar la tarea y la interdependencia positiva” [5]. 
4)  Sesión de Aprendizaje: directamente relacionada con el modelo instruccional 
elegido para el diseño de la experiencia. Cada etapa de esta sesión debe seguir lo 
propuesto en el modelo instruccional. Corresponde a la actividad “monitorear el 
aprendizaje de los estudiantes e intervenir en los grupos para proveer asistencia o para 
promover el desarrollo colaborativo del grupo” [5]. 
5) Sesión de Cierre: finalizada la sesión de aprendizaje, los alumnos de cada 
universidad se reunirán con su profesor mediador, en forma co-localizada y 
sincrónica, para debatir sobre la experiencia educativa vivida, registrar sus aportes, 
críticas y sugerencias y cerrar académicamente el experimento  
6) Sesión de Evaluación: etapa de recolección y consolidación de los datos 
obtenidos, de análisis, procesamiento estadístico, validación de los resultados y 
elaboración de conclusiones. Se utilizan notas de evaluación individuales, grupales, 
cuestionarios de satisfacción de los alumnos y mecanismos de co-evaluación entre 
pares. Corresponde a la actividad  “Evaluar el aprendizaje de los estudiantes y del 
proceso del grupo” dentro del marco del aprendizaje cooperativo formal [5]. 
La macro estructura del Modelo CODILA+A será instanciada por procesos 
instruccionales diferentes, en la sesión de aprendizaje, para adaptarse a cada diseño 
experimental específico. 
3.2 Modelo Instruccional  
El Modelo Instruccional elegido para la sesión de aprendizaje depende del diseño 
experimental; si se trata de una experiencia que consiste en analizar los resultados de 
aplicar 2 más tratamientos diferentes a un mismo objeto (se trata de un factor con 2 ó 
más tratamientos), es necesario tantos grupos de alumnos como tratamientos se deban 
aplicar. Los grupos conformados deben estar balanceados [6]. 
En este trabajo sólo se tendrán en cuenta diseños experimentales de uno y dos 
factores y de dos tratamientos cada uno, para simplificar y clarificar bien su 
aplicación y usos. A continuación se expone una expresión matemática (1) creada 
para representar la combinación de Modelos Instruccionales para un diseño 
experimental: 
R = EFG * ETG * T(O) 
Donde R es el resultado que será medido y evaluado en la experiencia, EFG es la 
estrategia de formación de grupos, ETG es la estrategia de trabajo de los grupos, T es 
la técnica o proceso a aplicar y O es el objeto sobre el cual los grupos aplican una 
técnica, para obtener un resultado R. 
Esta expresión es originada en la presente propuesta para dar explicación a los 
modelos instruccionales correspondientes a los distintos diseños experimentales. La 
propuesta del presente trabajo genera los modelos instruccionales para cada una de las 
posibles de combinaciones de las variables independientes de la ecuación precedente.  
El Modelo CODILA+A no se limita únicamente a las soluciones instruccionales 
plasmadas en la presente tesis sino que es posible enriquecer el Modelo genérico 
agregando otras combinaciones instruccionales probadas o posibles de experimentar, 
como el método de Casos, el método BauHaus y la Controversia constructiva [28], 
[29], [30], [31] entre otros. 
A continuación se presentan los distintos modelos instruccionales, para realizar la 
sesión de práctica de aprendizaje, tomando las posibles variabilidades de diseños, 
teniendo en cuenta si se trata de un solo factor o de dos factores, con dos tratamientos.  
3.2.1 Modelos Instruccionales para un Diseño de un factor con dos tratamientos 
Es solo una la variable que puede asumir uno de dos tratamientos, la cantidad de 
posibilidades para la fórmula es: C(4,1)=4 y son las siguientes:  
R= EFG*ETG*T(O). Variación de la técnica o proceso. El objetivo de la experiencia 
es la comparación de dos técnicas o procesos diferentes para realizar alguna actividad 
u obtener algún resultado, sobre un mismo objeto, el resto de las variables se 
mantienen constantes y son controladas para evitar que influyan en los resultados, los 
grupos que abordarán cada tratamiento se conformarán del mismo modo y trabajarán 
con la misma estrategia.  
R= EFG*ETG*T(O). Variación del objeto a estudiar. El objetivo de la experiencia 
es comparar los resultados de aplicar la misma técnica, con grupos de trabajo 
conformados y que trabajen de la misma manera, a objetos diferentes o con 
características diferentes.  
R= EFG*ETG*T(O). Variación de formación de los grupos. Si el objetivo de la 
experiencia es analizar cómo es el comportamiento o qué resultados se obtienen de 
aplicar una misma técnica, sobre un mismo objeto usando grupos que trabajen de la 
misma manera, pero conformados en forma diferente (pre-condiciones distintas).  
R= EFG*ETG*T(O). Variación de la estrategia de trabajo de los grupos. El objetivo 
de la experiencia es analizar cómo es el comportamiento o qué resultados se obtienen 
de aplicar una misma técnica, sobre un mismo objeto, usando grupos conformados de 
la misma manera, pero que trabajen en forma diferente (estrategia de trabajo distinta).  
 
3.2.2 Modelos Instruccionales para un Diseño de dos factores con  dos tratamientos 
En este caso son dos las variables independientes las que pueden asumir uno de dos 
tratamientos cada una, la cantidad de posibilidades para la fórmula es: C(4,2)=6.  
R= EFG*ETG*T(O). Variación de la técnica o proceso y variación del objeto de 
estudio. El objetivo de la experiencia es la comparación de dos técnicas o procesos 
diferentes para realizar alguna actividad u obtener algún resultado, sobre dos tipos de 
(1) 
objeto u objetos con características diferentes, los grupos que abordarán cada 
tratamiento se conformarán del mismo modo y trabajarán con la misma estrategia.  
R= EFG*ETG*T(O). Variación de la estrategia de formación de los grupos y de la 
técnica o proceso. El objetivo de la experiencia es analizar como es el 
comportamiento o que resultados se obtiene de aplicar diferentes técnicas o procesos, 
sobre un mismo objeto, usando grupos conformados bajo pre-condiciones diferentes, 
pero que trabajen de la misma manera.  
R= EFG*ETG*T(O). Variación de la estrategia de formación de los grupos y del 
objeto a estudiar. El objetivo de la experiencia es comparar los resultados de aplicar 
la misma técnica, con grupos de trabajo conformados en forma diferente pero que 
trabajen de la misma manera, a objetos diferentes o con características diferentes.  
R= EFG*ETG*T(O). Variación de la estrategia de trabajo de los grupos y de la 
técnica o proceso. El objetivo de la experiencia es analizar como es el 
comportamiento o que resultados se obtiene de aplicar diferentes técnicas o procesos, 
sobre un mismo objeto, usando grupos conformados del mismo modo pero que 
trabajen en forma diferente.  
R= EFG*ETG*T(O). Variación de la estrategia de trabajo los grupos y del objeto a 
estudiar. El objetivo de la experiencia es comparar los resultados de aplicar la misma 
técnica o proceso, con grupos formados del mismo modo pero que trabajen de manera 
diferente, a objetos diferentes o con características diferentes.  
R= EFG*ETG*T(O). Variación de la estrategia de formación de los grupos y de la 
estrategia de trabajo de los grupos. El objetivo de la experiencia es comparar los 
resultados de aplicar la misma técnica o proceso, al mismo objeto, con grupos de 
trabajo conformados en forma diferente y que trabajen de manera diferente.  
3.3 Plantilla para documentar actividades experimentales. Modelo CODILA+A  
En la tabla 1 se presenta la plantilla para documentar actividades experimentales, para 
la enseñanza de la ingeniería de software, en ambientes colaborativos y distribuidos 
geográficamente. La ejecución de la experiencia no debería comenzar hasta que todos 
los datos y definiciones se hayan completado. 
Tabla 1. Plantilla guía para el diseño de actividades colaborativas y distribuidas.  
Plantilla para Documentar Actividades experimentales, colaborativas y distribuidas. CODILA+A 
1.  Temática 
 
Se define el tema objeto de aprendizaje para la actividad 
colaborativa. Debe ser limitado y factible de desarrollar en un 
contexto distribuido. 
2.  Breve descripción de la 
actividad 
Se describe sintéticamente la actividad de aprendizaje a llevar 
a cabo y la forma de dividirla. 
3.  Objetivo Plantear los propósitos pedagógicos y de investigación 
(experimentales) perseguidos por la actividad.  
4.  Breve justificación Beneficios potenciales de desarrollar la temática bajo una 
actividad experimental, colaborativa y distribuida.  
5.  Universidad líder / Nombre 
del profesor experto 
Identificar la Universidad que propone, planifica y guía la 
ejecución de la actividad, como también el nombre del 
profesor experto en la temática escogida. 
6.  Universidades participantes 
y mediadores 
institucionales 
Listado de universidades participantes, ya sea con alumnos, 
dictando clases, proveyendo soporte técnico y/o análisis de 
resultados, monitoreando, etc. y de los profesores mediadores. 
7.  Fecha  de ejecución Fecha de ejecución de la actividad, acordada. Indicar períodos 
para cada una de las sesiones del Modelo CODILA+A y del 
Modelo Instruccional. 
8.  Pre-condiciones para los 
alumnos 
Pre-requisitos que deben satisfacer los alumnos para participar 
en la actividad (conocimiento o nivel académico necesario). 
9.  Requisitos para la 
comunicación 
Plataforma de comunicación, herramientas de soporte a la 
colaboración. 
Diferencia horaria entre las U. participantes, para coordinar 
las interacciones entre ellas (de profesores y de alumnos). 
10.  Diseño experimental Identificar, en base a la ecuación R=EFG*ETG*T(O), las 
variables dependientes, independientes, factores, tratamientos. 
11.  Hipótesis 
 
Definir la o las hipótesis que se desean corroborar. Se debe 
tener en cuenta el diseño experimental y hacerlo formalmente, 
con hipótesis nula e hipótesis alternativa. 
Las hipótesis pueden ser varias: Orientadas a brindar un 
beneficio a la industria del software, a brindar un aporte a la 
educación superior, o de interés propio de la investigación. 
12.  Modelo instruccional Según qué variables independientes, la cantidad de factores, 
tratamientos (EFG, ETG, T, O), se debe elegir uno de los 
modelos instruccionales. Y detallar duración, documentación 
necesaria, responsables, etc. De cada sesión planteada. 
13.  Evaluación y Análisis de 
Resultados 
Indicar y definir todos los artefactos de medición de la 
actividad: cuestionario de co-evaluación entre pares, de 
medición de satisfacción, evaluación del trabajo presentado 
individual y grupal, y todos los mecanismos de validación, de 
análisis estadístico, tests, etc. 
14.  Material de apoyo Definir y preparar: toda la documentación requerida para la 
actividad: documentos de teoría, ejercicios, etc. 
15.  Productos esperables Lista de los productos que se desean obtener, por ejemplo: la 
publicación del método, de la actividad, de los resultados, etc.  
16.  Anexos Documentos relacionados con la actividad, no incluidos como 
material de apoyo, por ejemplo referencias bibliográficas, 
sobre las que se basa el experimento, sitios de interés, etc. 
4. Conclusiones  
El Modelo CODILA+A está validado por las experiencias realizadas, en las que se 
basó su generación, con lo cual se puede intuir que es un efectivo Modelo de Apoyo 
para la preparación de actividades experimentales destinadas a la enseñanza de 
ingeniería de software  en ambientes colaborativos y distribuidos. 
La Ingeniería de software es un área en constante evolución y es uno de los 
sectores más afectados por el fenómeno de la globalización. Esto debiera empujar a 
las universidades a la formación de profesionales capaces de gestionar los aspectos 
técnicos y humanos del proceso de desarrollo de software en ambientes distribuidos, 
proporcionando experiencias colectivas en el desarrollo de software [15]. 
Ejercitar o capacitar a los alumnos para el desarrollo de habilidades técnicas y 
sociales, en un laboratorio de Ingeniería de Software Distribuido, los familiariza con 
situaciones que tendrán que enfrentar durante su trabajo profesional futuro. Trabajar 
con un modelo que estructure la estrategia colaborativa del trabajo en ambientes 
distribuidos permitirá a los estudiantes mejorar sus capacidades para participar en 
proyectos con personas de otro país, otra cultura, sin miedo al fracaso, reduciendo la 
incertidumbre que produce actuar en un escenario de desarrollo de software global.  
Por lo tanto, el Modelo CODILA + A es un aporte: 
 A la industria del software, ofrece la posibilidad de ejecutar experimentos en 
forma guiada y metódica, y de obtener resultados estadísticamente fiables y 
significativos sobre mejoras o incorporaciones (de tecnologías o procesos) en el 
proceso de desarrollo. 
 A los alumnos, ofrece la oportunidad de trabajar en entornos distribuidos y 
colaborativos y desarrollar sus habilidades sociales que serán de utilidad en su 
futuro profesional, además de la adquisición de capacidades técnicas. Valoran la 
importancia de los estudios empíricos, para dar cientificidad y formalismo a los 
aportes de la Ingeniería de Software. 
 A las instituciones educativas, permite adaptarse a los requerimientos del medio, 
para entregar profesionales con las capacidades y habilidades necesarias en el 
mundo de la globalización.  
 A los investigadores, les permite definir, diseñar y ejecutar, en forma ordenada y 
sistemática, nuevos experimentos para validar hipótesis o replicar experiencias. Y 
permite recolectar datos uniformes y consolidados, para realizar estudios. 
Posibles Ampliaciones:  
El contar con las experiencias definidas formalmente a través de un modelo, usando 
una plantilla de definición, diseño y planificación, permite catalogar las experiencias 
y es posible generar un repositorio digital, tal como lo propone Wohlin y otros [6], 
que sea de fácil acceso y les permita a los investigadores recurrir a él, tanto para 
replicar las experiencias y poder validar los indicios estadísticos, como para realizar 
estudios específicos. Este repositorio admitirá que la industria del software acuda a 
buscar resultados fiables, cuando desee incorporar una mejora en sus procesos ó 
aplicar nuevos procesos o técnicas, y poder tomar una decisión en base a ello. 
También es posible extender la expresión para definir los modelos instruccionales, 
ampliando las posibilidades de diseño y la combinación de tratamientos y factores, así 
como la generación de otros modelos instruccionales para aplicar en el Modelo 
CODILA+A, tanto en el uso de diferentes estrategias colaborativas, como diseños con 
más de dos factores o más de dos tratamientos.  
Resta definir algún método para identificar y medir efectivamente los indicadores 
de interacción y colaboración, en base a los registros obtenidos en las últimas 
experiencias.  
Es necesario contar con una plataforma colaborativa adecuada que soporte este 
tipo de experiencias, que permita además de ser un espacio de comunicación y el 
monitoreo del proceso de colaboración entre los participantes de la actividad. 
