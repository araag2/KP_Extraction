Modelo de grafos para el estudio de la disponibilidad y la gestión de los niveles de servicio en servicios de IT
﻿
In the last years the organizations has increased the use of the technologies of the information, and also they increased
the associated risks them.The complexity of the infrastructures that include a large number of components
(applications, servers, operating systems, Databases, Application Servers, network and communications devices, UPS,
power supplies, etc.) requires a careful management.
COBIT, ITIL and other proposals agree that IT Management must be aligned with services. Also agree that a
configuration database (CMDB) is needed to know: components involved; dependencies between them; users and
administrators; electrical and networks connexions; etc. This CMDB is the heart of the ITIL based management,
because from them is possible to optimize the management of changes, incidents, problems and also the availability,
capacity, continuity and service level agrees..
In this paper, we show a representation of the IT infrastructure, including its relations of dependency and network and
electrical connections, etc. using ASDG, abstraction for managing changes in software components. We also show how
adapt them for represent the IT component like graph nodes. Over this graph we studied the service availability with a
walk around over the graph.
Keywords: Information Technology Management, Availability management, ASDG, ITIL, CMDB, impact analysis.
Resumen
En los últimos años las organizaciones aumentaron el uso de las tecnologías de la información, y también aumentaron
los riesgos asociados a ellas. La complejidad de las infraestructuras que incluyen un gran número de componentes
(aplicaciones, servidores, sistemas operativos, bases de datos, red y comunicaciones, UPS, generadores energía, etc.)
requiere de una gestión cuidadosa.
COBIT, ITIL y otras metodologías coinciden que la gestión de IT debe estar centrada en los servicios. También
coinciden que es necesaria una base de datos de configuraciones (CMDB) para conocer: los componentes involucrados;
dependencias entre ellos; usuarios y administradores; conexiones eléctricas y de red, etc. Esta CMDB es el centro de la
gestión basada en ITIL, pues a partir de ella es posible optimizar la gestión de los cambios, incidentes y problemas así
como también de la disponibilidad, capacidad, continuidad y los acuerdos de niveles de servicio.
En este artículo presentaremos como representar la infraestructura tecnológica, sus relaciones, sus conexiones eléctricas
y de red, etc., utilizando ASDG, abstracción utilizada para gestionar cambios en componentes de software. Mostramos
como adaptarlo para representar los componentes de IT como nodos de un grafo, sobre el cual se estudia la
disponibilidad de los servicios realizando una recorrida sobre este grafo.
Palabras clavesInformation Technology Management, Configuration management, ASDG, ITIL, CMDB, análisis de
impacto.
XIII Congreso Argentino de Ciencias de la Computación
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
 
Congreso General
_________________________________________________________________________
 
 
1744
1. INTRODUCCION
En los últimos años, el uso de las tecnologías de la información en las organizaciones se ha
incrementado significativamente, provocando un gran impacto en los procesos del negocio y
llegando a requerir infraestructuras muy complejas. Las necesidades de negocio requieren
respuestas rápidas, lo que incrementa el uso de nuevas tecnologías así como la cantidad de
aplicaciones, servidores, sistemas operativos, bases de datos, servidores de aplicaciones,
dispositivos de comunicaciones, generadores de energía, etc.
La complejidad de esta infraestructura se ve aumentada por los requerimientos de interoperabilidad,
e-business, sistemas distribuidos, ERPs, Intranets, nuevas funcionalidades de sus sistemas legacy,
accesos de diversas aplicaciones a los datos o servicios provistos por otra aplicación; y por los
modelos N-TIER y más recientemente SOA.
Esta mayor dependencia de la tecnología hace que aumenten los requerimientos de disponibilidad y
niveles de servicio que hacen que cualquier falla o bajada de un servicio, si no es conocida de
antemano o es muy prolongada, se convierte es una situación catastrófica para la organización. Para
mitigar estos riesgos, se deben tomar las medidas necesarias para asegurar que los tiempos de
indisponibilidad debido a fallas sean minimizados.
COBIT [1] e ITIL [2] son quienes aportan una guía a la solución a este problema introduciendo la
necesidad de la gestión de los servicios y de los procesos necesarios para mantenerlos. Es así que
surgen los procesos tales como Configuration Management, Availability Management, Capacity
Management, Service Level Management, IT Service Continuity Management, etc.
Estas propuestas coinciden en la necesidad de contar con una base de datos de configuraciones
(CMDB) para conocer: los componentes involucrados; dependencias entre ellos; usuarios y
administradores; conexiones eléctricas y de red, etc. En ITIL, esta CMDB permite una mejor
gestión de los distintos procesos, optimizando la forma de gestionar los cambios, incidentes y
problemas así como también la disponibilidad, capacidad, continuidad y los acuerdos de niveles de
servicio.
En trabajos anteriores hemos visto que esas propuestas no incluyen la forma de modelar la
infraestructura tecnológica y que existe escasa bibliografía al respecto, siendo estas en su mayoría
referentes a cambios en componentes de software. En estos trabajos [3][4][5] hemos mostrado
como representar la infraestructura de IT utilizando Abstract System Dependence Graph (ASDG)
[6] para realizar la gestión de los cambios en los componentes de infraestructura.
En este artículo mostramos como utilizar esa representación de la infraestructura para gestionar la
disponibilidad de los servicios en función de los Service Level Agreements (SLAs). El artículo se
organiza como sigue: primero se realiza una introducción a los conceptos básicos de Service Level
Managent, Availability Management y Configuration Management; luego se describe la forma de
representar la infraestructura de IT utilizando ASDG; después vemos como utilizar esa
representación para gestionar la disponibilidad de los SLA y por último mostramos nuestras
conclusiones y trabajos futuros.
2. MODELOS DE GESTIÓN
Los modelos de gestión de IT más aceptados son COBIT e ITIL.
La misión definida por COBIT [1] es la de “investigar, desarrollar, publicar y promover un
conjunto de objetivos de control en tecnología de información con autoridad, actualizados, de
XIII Congreso Argentino de Ciencias de la Computación
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
 
Congreso General
_________________________________________________________________________
 
 
1745
carácter internacional y aceptados generalmente para el uso cotidiano de gerentes de empresas y
auditores”.
COBIT hace énfasis en la orientación al negocio y ha sido diseñado no solo para ser utilizado por
usuarios y auditores, sino que en forma más importante, está diseñado para ser utilizado como una
lista de verificación detallada para los propietarios de los procesos de negocio. En el Marco
Referencial de COBIT se proporcionan herramientas al propietario de procesos de negocio que
facilitan el cumplimiento de sus responsabilidades. El marco referencial comienza con la premisa
“Con el fin de proporcionar la información que la empresa necesita para alcanzar sus objetivos, los
recursos de TI deben ser administrados por un conjunto de procesos de TI agrupados en forma
natural.
COBIT define un conjunto de 34 objetivos de control de alto nivel, uno para cada uno de los
procesos de TI, agrupados en cuatro dominios: planeación & organización, adquisición &
implementación, entrega (de servicio) y monitoreo. En particular se pueden mencionar los
siguientes: DS1 Definir Niveles de Servicio, DS3 Administrar Desempeño y Capacidad, DS4,
Asegurar Servicio Continuo, DS6 Identificar y Asignar Costos, DS8 Apoyar y asistir a los Clientes
de TI, DS9 Administrar la Configuración, DS10 Administrar Problemas e Incidentes.
Por su parte ITIL [2][7][8][9][10][11] fue creada para comunicar las mejores prácticas en la
Gestión de Servicios TI. ITIL ofrece un marco para todas las actividades de TI, como parte de la
entrega de servicios, basado en la infraestructura TI, Las actividades se dividen en procesos, que
proporcionan el marco para gestionar los Servicios TI en forma más madura.
ITIL provee de “mejores prácticas” para la gestión de TI las cuales proveen:
- Guías para alinear los servicios de TI con los requerimientos de negocio
- Un lenguaje común para TI y el negocio
- Un marco referencial, no una metodología
- Un conjunto de mejores prácticas neutral a los proveedores
- Guías, no un como hacerlo paso a paso para que una organización implemente
procesos de gerenciamiento de TI
 Además del modelo de procesos se encuentran:
- Guías en la planificación e implementación
- Sugerencias de organización, roles y habilidades requeridas
- Sugerencias para la educación y el entrenamiento
- Descripción de atributos clave en herramientas
- Ejemplos de políticas y procedimientos
La parte más importante de ITIL es el “Service Management” el cual se compone de dos libros
“Soporte del Servicio” (Service Support) y “Entrega del Servicio” (Service Delivery).
En soporte del servicio se tratan los siguientes procesos
 Relaciones entre procesos
 La función Service Desk
 Gestión de Incidentes
 Gestión de Problemas
 Gestión de Configuraciones
 Gestión de Cambios
 Gestión de Versiones
 Herramientas de Gestión de Servicios
En Entrega del servicio se tratan los siguientes procesos
XIII Congreso Argentino de Ciencias de la Computación
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
 
Congreso General
_________________________________________________________________________
 
 
1746
 Relación entre procesos
 Gestión de Niveles de Servicio
 Gestión Financiera de los Servicios de TI
 Gestión de Capacidad
 Gestión de Continuidad de los servicios de TI
 Gestión de Disponibilidad
 Herramientas de Gestión de Servicios
Es posible decir que la Gestión de los Niveles de servicio es la base del planteo de ITIL. Al analizar
sus procesos, podemos ver que la Gestión de las configuraciones es la que brinda, a través de su
CDMB (Configuration Management Data Base) la información necesaria para la mayoría de los
procesos, pues es la que permite conocer la infraestructura propiamente dicha.
MOF [12] es una propuesta de Microsoft basada en ITIL que, al igual que otras utilizadas por
empresas como HP e IBM, podemos considerar que comparte esta visión. Lo mismo puede decirse
de otras propuestas [13].
A grandes rasgos podemos ver que COBIT e ITIL persiguen objetivos similares. Ambas propuestas
plantean la necesidad de identificar, controlar y mantener todos los componentes de TI, de
gestionar los niveles de servicio, la disponibilidad, la capacidad, etc.
3. METODOLOGÍA PROPUESTA
En [3][4][5] hemos visto una forma de representar la infraestructura de TI utilizando ASDG. En
esos trabajos, vimos como es posible realizar estudios de impacto previos a la realización de un
cambio de forma de disminuir los riesgos ocasionadas por cambios en la infraestructura. En este
artículo mostraremos como usar esa representación para mejorar la gestión de los niveles de
servicio y en particular como calcular la disponibilidad de los servicios.
3.1 Especificación del problema
Utilizaremos Abstract System Dependence Graph (ASDG) [6][14][15], abstracción de grafos de
dependencia, para representar toda la infraestructura de TI como un grafo, donde los servidores,
dispositivos de red, software de base, aplicaciones, dispositivos eléctricos y usuarios, son nodos y
sus relaciones de dependencia, conexiones físicas y eléctricas, son aristas.
Primero veamos una definición de ASDG y a luego como utilizarlo para resolver los problemas
planteados.
3.2 Abstract System Dependence Graph
Un grafo de dependencia de sistema (SDG) [14][15] se compone de varios grafos de dependencia
de procedimientos. En [6] se propone un grafo abstracto de dependencia de sistema (ASDG) que
puede ser construido usando un subconjunto de información del SDG. El hecho que ASDG es un
subconjunto de SDG garantiza que los algoritmos usados para construir SDG pueden usarse
también para construir el ASDG.
ASDG consiste en vértices que representan componentes, por ejemplo funciones y variables
globales. La función call es representada por la arista call, y la arista data flow representa un flujo
de datos de una función a una variable global y viceversa.
Formalmente, se define ASDG de la siguiente manera:
Sea C el conjunto de componentes en el software, y C = F ∪G
XIII Congreso Argentino de Ciencias de la Computación
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
 
Congreso General
_________________________________________________________________________
 
 
1747
donde F es un conjunto de funciones y
G es un conjunto de datos globales
Para d,e ∈C, la arista <d,e> denota una dependencia de componente d en e.
Si d, e ∈F entonces <d,e> es la arista call, si d ∈G o e ∈G, entonces la arista <d,e> son los flujos
de datos.
Un ASDG es un conjunto de dependencias D en el sistema.
El conjunto de todos los componentes usado en D se define como
comp(D) = { e | si existe d, tal que <e,d> ∈D o <d,e>∈D}
Los vecinos de un vértice d se definen como
neigh(d) = { <e,d > | si existe e tal que <e,d > ∈D} ∪
{ <d,f> | si existe f tal que <d,f> ∈D}.
Cabe aclarar que se usa la notación de [2, 3] para los grafos.
Un ejemplo de ASDG y su código fuente se puede apreciar en Figura 1.
Figura 1 – Un ejemplo de programa y su ASDG
3.3 Representación de la infraestructura de TI
Ahora mostraremos como adaptar ASDG, para representar nuestro problema.
Como hemos visto anteriormente, necesitamos representar los componentes de infraestructura de
nuestra red, sus conexiones y dependencias.
Para esto, consideremos los componentes como nodos de nuestro grafo de dependencias y las
dependencias como aristas del mismo.
Por consiguiente, definamos formalmente el grafo G de la siguiente manera:
G = C ∪ RRHH ∪ R
donde
C son los componentes de la infraestructura
RRHH son recursos humanos de la organización
R son las relaciones entre los componentes
XIII Congreso Argentino de Ciencias de la Computación
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
 
Congreso General
_________________________________________________________________________
 
 
1748
A continuación se detallarán los mismos.
Sea C (componentes de la infraestructura) = F ∪ L ∪ E ∪ O
F es el conjunto de componentes físicos de la infraestructura
L es el conjunto de componentes lógicos de la infraestructura
E es el conjunto de componentes eléctricos de la infraestructura
O es el conjunto de otros componentes de la infraestructura
F (componentes físicos ) = N ∪ H ∪ OTF
N = HUB ∪ SWT ∪ ROU ∪ FRW
HUB conjunto que representa los hub de la infraestructura
SWT conjunto que representa los switch de la infraestructura
ROU conjunto que representa los router de la infraestructura y
FRW conjunto que representa los firewall de la infraestructura
H = EQP ∪ P, con P = IMP ∪ SCN ∪ MON
EQP es el conjunto que representa los equipos de la infraestructura
IMP es el conjunto que representa las impresoras de la infraestructura
SCN es el conjunto que representa los scanner de la infraestructura y
MON es el conjunto que representa los monitores de la infraestructura
OTF el conjunto que representa otros componentes físicos
L (componentes lógicos ) = SO ∪ SRV ∪ OTL
SO el conjunto que representa los sistemas operativos
SRV el conjunto que representa los servicios
OTL el conjunto de representa otros componentes lógicos
E (componentes eléctricos ) = UPS ∪ GEN ∪ ENC ∪ CDD ∪ OTE
UPS el conjunto que representa las UPS
GEN el conjunto que representa los generadores
ENC el conjunto que representa los enchufes
CDD el conjunto que representa las cajas de distribución
OTE el conjunto que representa otros componentes eléctricos
Los recursos humanos se definen de la siguiente manera: RRHH = ADM ∪ DES ∪ USU
ADM el conjunto que representa los administradores de recursos
DES el conjunto que representa los desarrolladores
USU el conjunto que representa los usuarios de un servicio
Sea R el conjunto de relaciones del sistema,
R = RC ∪ RD
Donde:
RC es el conjunto de aristas que representan relaciones de conexiones de red
RD es el conjunto de aristas que representan relaciones de dependencia de la infraestructura
La arista <d,e> ∈ RD denota una dependencia funcional del componente d en e.
RD = {<d,e> | si y solo si se cumple que existe una dependencia funcional del componente d en e}
En [4] vimos que la inclusión de las RC nos obliga a extender al ASDG con un nuevo tipo de arista,
por lo que para las conexiones de red definimos un grafo estándar en el cual los nodos son los
componentes del ASDG y las aristas son las propias conexiones.
XIII Congreso Argentino de Ciencias de la Computación
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
 
Congreso General
_________________________________________________________________________
 
 
1749
Ahora ya tenemos definida completamente la infraestructura tecnológica incluyendo a los
componentes de hardware, software, sus administradores y los usuarios de los servicios.
3.4 Análisis
3.4.1 Análisis de impacto
Cuando es necesario realizar un cambio en cualquiera de los componentes, se desea conocer todos
los componentes y recursos humanos (administradores, usuarios) impactados. Para ello se
construye un árbol de alcance a partir del nodo que representa el componente, que incluya todos los
nodos alcanzados por las relaciones de dependencia con el mismo. El árbol incluirá entonces todos
los componentes impactados, los administradores y los usuarios.
En el caso en que se impacte un componente de red, el algoritmo presenta algunas variaciones. En
este caso se debe verificar que para todo par de componentes, que residen en equipos distintos y
que existe una dependencia entre ellos, exista un camino de red (que no pase por los componentes
de red afectados) entre los componentes de hardware donde reside cada uno. En caso de no existir
se debe incluir en el árbol el componente dependiente en la relación y continuar con el árbol de
alcance.
3.4.2 Análisis de componentes de un servicio
Podemos ver que esta estructura que hemos construido, contiene todos los servicios que se ofrecen
y de que componentes dependen.
Conocer todos los componentes involucrados en un servicio nos ayudaría a planificar la calidad de
dichos servicios.
En nuestra representación, los servicios se corresponden con los usuarios del mismo.
Si realizamos una recorrida en dirección contraria en el grafo, o sea que comenzamos desde un
usuario de un servicio y vamos construyendo un árbol de alcance, con los componentes de quien se
depende, tendremos la lista de todos los componentes involucrados en la prestación del servicio.
Esta lista nos permite, estudiar los posibles cuellos de botella e invertir en la mejora de los puntos
que puedan ser críticos para optimizar la disponibilidad, la capacidad y la continuidad de los
servicios.
3.4.3 Disponibilidad de los servicios
Tradicionalmente, los estudios de disponibilidad estaban centrados en los distintos componentes,
antes que en los servicios en si. Las propuestas de COBIT e ITIL nos expresan la necesidad de
conocer la disponibilidad de los servicios. En nuestra representación, podemos observar que la falla
de cualquier componente afecta la disponibilidad de distintos servicios, por lo que para un servicio,
su tiempo de indisponibilidad, es la sumatoria de las indisponibilidades de todos los componentes
involucrados en la prestación de dicho servicio.
Para calcular la disponibilidad de los servicios, se debe ir contabilizando las indisponibilidades
ocasionadas por fallas en cada componente.
Ante la indisponibilidad de un componente, se realiza el análisis de impacto descrito en 3.4.1 y del
árbol de alcance se extraen los servicios impactados. Para cada servicio impactado se incrementa el
tiempo de indisponibilidad.
Finalmente es posible calcular la disponibilidad
% Disponibilidad = Horas Acordadas de Servicio – (indisponibilidad componente i) X 100
Horas Acordadas de Servicio
XIII Congreso Argentino de Ciencias de la Computación
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
 
Congreso General
_________________________________________________________________________
 
 
1750
3.5 Caso de Estudio
Consideremos ahora la siguiente realidad representada gráficamente en la siguiente figura.
En ella se pueden apreciar los componentes de red, como por ejemplo Hub 1, Hub 2, Switch 2,
Router 1, además de los componentes de hardware como los equipos, los servidores, etc. También
se pueden observar las distintas dependencias que hay entre los mismos (líneas punteadas) y los
usuarios que dependen de ellas..
3.5.1 Análisis de impacto
En [3][4][5]hemos mostrado este análisis. El árbol de alcance que se obtiene se utiliza por el
proceso de Gestión de Cambios para la planificación y autorización de los cambios.
3.5.2 Análisis de componentes de un servicio
El servicio ofrecido por la aplicación APP es utilizado
por el usuario U5. Como ya comentamos en nuestra
representación, existe una correspondencia entre
usuario y servicio, por lo que el estudio lo
realizaremos a partir del usuario U5.
En la siguiente figura, podemos observar, que el
servicio utilizado por U5 depende de APP, quien a su
vez depende de BD2 y Equipo2. Siguiendo con el
análisis se observa que BD2 depende de ServidorBD y
de UPS2.
Esta información, al momento de definir los alcances
del servicio, nos permitirá evaluar las posibilidades y
ajustar las necesidades de mejora o en su defecto
limitar los alcances.
XIII Congreso Argentino de Ciencias de la Computación
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
 
Congreso General
_________________________________________________________________________
 
 
1751
3.5.3 Cálculo de disponibilidades
A continuación analizaremos la disponibilidad de los distintos servicios, teniendo en cuenta las
siguientes caídas.
Caída 1 Caída 2 Caída 3
Teniendo en cuenta las caídas anteriores, veamos a continuación, la disponibilidad de los distintos
servicios: App (usuario U5), AppWeb (usuarios U2 y U4) y Correo (usuarios U1 y U3)
Disponibilidad servicio APP = Hs Ac Serv – (indisp caída 3) X 100
Hs Ac Ser
Disponibilidad AppWeb = Hs Ac Serv – (Hs indisp caída 1 + Hs indisp caida 3) X 100
Hs Ac Serv
Disponibilidad correo = Hs Ac Serv – (0) X 100 = 100%
Hs Ac Serv
Podemos observar que el servicio de correo no fue afectado por ninguna de las caídas, por lo que su
disponibilidad es del 100%. Los servicios brindados por APP y por AppWeb fueron afectados por
caídas, por lo que el cálculo de disponibilidad tiene en cuenta las mismas.
4. CONCLUSIÓN Y TRABAJOS FUTUROS
Hemos analizado la problemática de la Gestión de los servicios de IT y en particular la necesidad
de contar con una CMDB como soporte de diversos procesos de la gestión. Esta CMDB nos
permite entre otras cosas realizar un análisis de impacto previo a la implementación de un cambio
de configuraciones en la infraestructura tecnológica de una organización, conocer todos los
componentes involucrados en un servicio, calcular la disponibilidad asociada a cada servicio en
función de los SLA.
Hemos visto que este análisis puede ser realizado visualizando los componentes de la
infraestructura como un grafo sobre el cual, realizando recorridas, se pueden efectuar análisis de
XIII Congreso Argentino de Ciencias de la Computación
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
 
Congreso General
_________________________________________________________________________
 
 
1752
alcance y con ello identificar los componentes involucrados. Hemos usado ASDG, abstracción
basada en grafos utilizada para el manejo de cambios en componentes de software, para analizar los
cambios de la infraestructura.
Hemos visto que ASDG no nos permite una representación completa de la infraestructura y hemos
mostrado como resolverlo. Además, el modelo no incluye algunos puntos importantes como ser los
las configuraciones redundantes de componentes, configuraciones de clusters, alta disponibilidad,
balanceo de carga y contingencia y también el factor tiempo (es decir, que una dependencia es
válida en determinada franja horaria).
Nuestros planes incluyen tratar con los puntos mencionados en el párrafo anterior, así como
también trabajar en la optimización de los algoritmos utilizados y estudiar algunas alternativas de
representación, entre las que se encuentra la utilización de Redes de Petri.
REFERENCES
[1] COBIT. http://www.isaca.org/, Ult. acc. 2007.
[2] ITIL. http://www.itsm.org/, http://www.itil.org, http://www.itilsurvival.com, Ult. acc. 2007.
[3] S.Machuca, G.Sasco, N.Chiaro: Un modelo basado en grafos para análisis de impacto en cambios de componentes
de infraestructura, JAIIO-ASIS 2005.
[4] S.Machuca, G.Sasco, N.Chiaro: Análisis de impacto en la gestión de cambios de configuración de componentes de
IT, CLAIO (Conferencia Latinoamericana de Investigación Operativa) 2006.
[5] S.Machuca, G.Sasco, N.Chiaro: Análisis de impacto en la gestión de cambios de servicios de Telecomunicaciones,
MVD TELCOM 2006 (I Congreso Regional de Telecomunicaciones).
[6] Kunrong Chen, Václav Rajlich, Case Study of Feature Location Using Dependence Graph.. Department of
Computer Science, Wayne State University, 2002, pp. 293 - 299.
[7] Charles Thomas Betz, The convergence of metadata and IT service management, 2003.
[8] M. Berkhout, R. Harrow, Service Support: Service Desk and the Process of Incident Management, Problem
Management, Configuration Management, Change Management and Release Management, London, The
Stationery Office, 2000.
[9] A. Cassidy, K. Guggenberger A Practical Guide to Information Systems Process Improvement. Boca Raton, FL,
St. Lucie, 2001.
[10] IT Service Management Forum, IT Service Managment Forum, USA, Attendee FAQ, 2003.
[11] J. Van Bon, G. Kemmerling, IT service management : an introduction, Canada, 2002.
[12] MOF. http://www.microsoft.com/technet/itsolutions/cits/mo/mof/default.mspx, Ult. acc. 2006.
[13] Erp4it: Managing information systems, http://erp4it.typepad.com/erp4it/2004/10/cmdb_chaos_and_.html, Ult. acc.
2006.
[14] Horwitz, S.; Reps, T and Binkley, D. Interprocedural Slicing Using Dependence Graphs ACM Trans.
Programming Languages and Systems, vol 12, No. 1 (Jan 1990), pp. 26-60.
[15]Horwitz, S.; Reps, T. The Use of Program Dependence Graphs in Software Engineering. Proceedings of the 14th
International Conference on Software Engineering, (May 1992).
XIII Congreso Argentino de Ciencias de la Computación
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
 
Congreso General
_________________________________________________________________________
 
 
1753
