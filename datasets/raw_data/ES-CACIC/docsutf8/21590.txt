Algoritmo de encaminamiento para redes de sensores inalámbricas utilizando técnicas de agregación
﻿ 
Different environments supervision and control needs local variables measurements. When the places 
where these measurements are going to be made are of hard access it is used to use Wireless Sensor 
Networks (WSN). A hierarchical routing algorithm in two levels is proposed in this work to periodically 
collect the environment’s data. Clusters which headers are rotated to uniform the power consumption are 
defined in the first level. The environment is divided in a grid which is used to locate the headers and to 
apply aggregation techniques. An intercluster communication structure is defined in the second level. 
Two well defined rounds are used to send the data to the base station, one to define the enrouting tree 
and the other to send the collected data. Finally, two kinds of critical network failures are considered: 
fail in the header election and fail in the inter header communication structure. In both cases solutions 
are proposed to mitigate the negative effects on the system performance. 
Keywords: Comunication Networks, Wireless Comunication, Sensor Networks, Routing, Aggregation.   
Resumen  
La supervisión y control de entornos de distinta índole implica la necesidad de medir variables propias 
del ambiente. Cuando los sitios en que deben hacerse estas mediciones son de difícil acceso se suele 
recurrir a redes inalámbricas de sensores inteligentes (RISI). En este trabajo se propone un algoritmo de 
encaminamiento jerárquico en dos niveles que realiza una recolección periódica de datos del ambiente. 
En el primer nivel se definen clusters cuyas cabeceras se  rotan para lograr un consumo de energía más 
uniforme. Se divide la red en una cuadrícula que se utiliza para ubicar  las cabeceras y aplicar técnicas 
de agregación. En el segundo nivel se define la estructura de comunicación intercluster. Para el envío de 
los datos hacia la estación base se trabaja en dos rondas bien definidas, una de establecimiento del árbol 
de encaminamiento y otra de envío de la información recolectada. Finalmente, se consideran dos tipos de 
fallos críticos para la red: fallo en la elección de cabeceras y fallo en la estructura de comunicación entre 
cabeceras. En ambos casos se proponen soluciones para mitigar los efectos adversos en el 
funcionamiento del sistema. 
Palabras claves: Redes de comunicación, Comunicación inalámbrica, Redes de sensores, Algoritmos de 
encaminamiento, Agregación de datos.   
* Facultad de Cs. Exactas, Ingeniería y Agrimensura, Universidad Nacional de Rosario, Rosario, Santa Fé 
(2000), Argentina.
XIII Congreso Argentino de Ciencias de la Computación
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
 
II Workshop de Arquitecturas, Redes y Sistemas Operativos
_________________________________________________________________________
 
 
1
1 INTRODUCCIÓN  
La medición de variables del medio es fundamental para la supervisión y control de 
entornos y actividades de la más diversa índole. Se realiza en aplicaciones industriales, 
médicas, agrícolas, de preservación del medio natural o creación de ambientes inteligentes, 
entre otras. En muchas de las aplicaciones mencionadas, el sensado de las variables de 
interés debe realizarse en ambientes distantes u hostiles que hacen muy difícil el cableado y 
la atención periódica de los dispositivos de medición.  Por estos motivos se han comenzado 
a utilizar las redes inalámbricas de sensores inteligentes (RISI) para obtener los datos 
necesarios. 
Las RISI son un tipo particular de redes Ad-Hoc, constituidas por nodos que además de 
recolectar datos del ambiente, son capaces de procesarlos y colaborar con sus vecinos para 
transmitirlos hacia la/las estaciones base. Estas redes se auto-organizan para adaptarse a 
topologías cambiantes, y deben trabajar bajo fuertes restricciones de energía, tratando de 
maximizar su tiempo de vida útil [1] [2]. 
Una RISI realiza dos actividades fundamentales para llevar hasta el nodo base información 
relevante para la aplicación. La primera se ocupa del sensado y procesamiento de la 
información, y la segunda de la diseminación de la misma en la red. Ambas tareas 
consumen energía, que como ya se mencionó es un recurso que debe ser cuidadosamente 
preservado. Se ha establecido que  la transmisión consume la mayor parte de la energía 
disponible,  así que se intenta minimizar la tarea de diseminación realizando todo el 
procesamiento local posible [3]. En este sentido se han desarrollado técnicas de agregación 
de datos que permiten que el procesamiento de la información se realice en forma 
distribuida en nodos de la red.  La eficiencia y aplicabilidad de estas técnicas, dependen del 
problema a abordar, por lo que deben ser cuidadosamente elegidas y posiblemente 
adaptadas teniendo siempre en cuenta el dominio de trabajo [4].  
En este trabajo presentamos un algoritmo de encaminamiento para redes de sensores basado 
en clusters, que realiza una recolección periódica de datos del ambiente. El entorno a 
supervisar se divide en una cuadrícula uniforme para ubicar las cabeceras de clusters. El 
algoritmo trabaja en dos rondas bien definidas, una de selección de cabeceras y formación 
de clusters, y otra de envío de información hacia la estación base utilizando alguna función 
de agregación. Este artículo se organiza de la siguiente forma: en la sección 2 se analizan 
las técnicas de agregación de datos, la sección 3 trata sobre el control de topología 
centrándose en el uso de clusters. En la sección 4 se describe el algoritmo desarrollado y 
finalmente en las secciones 5 y 6 se enumeran las conclusiones alcanzadas y se proponen 
líneas de trabajo futuro. 
2 AGREGACIÓN DE DATOS  
Las RISI están constituidas por una gran cantidad de nodos, y por lo tanto es impracticable 
utilizar algoritmos de encaminamiento centrados en direcciones, en los cuales es necesario 
identificar cada nodo unívocamente [3]. Por este motivo, los algoritmos que se utilizan 
habitualmente en redes de sensores inalámbricas son centrados en datos. En los protocolos 
XIII Congreso Argentino de Ciencias de la Computación
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
 
II Workshop de Arquitecturas, Redes y Sistemas Operativos
_________________________________________________________________________
 
 
2
centrados en datos, generalmente se busca aplicar algún tipo de  procesamiento en los 
nodos de forma de reducir el tiempo de transmisión [5]. 
En este sentido se han desarrollado técnicas de agregación de datos, con el fin de lograr el 
mensaje más compacto posible que represente  al conjunto de mensajes individuales. El 
mensaje agregado se transmite a través de la red en lugar del conjunto de mensajes 
procesados [5]. 
Al incorporar agregación, los algoritmos prolongan la vida útil de la red, reduciendo la 
cantidad de mensajes a difundir.  La reducción del consumo de energía depende en gran 
medida de la aplicación a encarar, pues son sus características las que determinan la 
función de agregación a utilizar. Algunas aplicaciones admiten agregados sencillos como la 
obtención del valor máximo, mínimo o promedio. El estudio de otros fenómenos en 
cambio, requiere de la  transmisión de todos los valores obtenidos o gran parte de ellos. 
Estos últimos casos son los más desafiantes al momento de diseñar alguna técnica de 
agregación, que manteniendo los errores acotados, permita cumplir con los requerimientos 
de la aplicación [6]. 
Si bien el ahorro de energía es un requerimiento fundamental para el diseño de una técnica 
de agregación, los algoritmos que la utilizan son evaluados también en otros aspectos [7]: 
 Vigencia de los datos: diferencia entre el momento de obtención del dato y el de llegada 
a la estación base. 
 Proporción de lecturas recibidas: Cantidad de lecturas recibidas por la estación base 
respecto del número total de lecturas realizadas. 
Desde ya, el peso que se le dé a cada requerimiento dependerá de la aplicación particular. 
El problema a abordar será el que determine la magnitud de error aceptable, el período 
admisible de espera para la llegada de los datos o el porcentaje de mensajes que pueden 
perderse, sin afectar gravemente la eficiencia esperada para la aplicación. 
2.1 Clasificación de las técnicas de agregación 
Este trabajo se focaliza en aplicaciones donde es habitual realizar una adquisición periódica 
de datos, con el fin de mantener un estado de situación actualizado del fenómeno a sensar. 
Se habla de “rondas de recolección o sensado”, donde los nodos obtienen los valores de las 
variables de interés y los transmiten hacia la estación base. Estas “rondas” se repiten en 
períodos cuya duración queda determinada por la naturaleza del fenómeno bajo estudio. En 
general, podemos clasificar las técnicas de agregación periódicas como [4] [7]: 
 Periódica simple: En este tipo de algoritmos, cada nodo espera un período fijo, agrega 
los datos recibidos en un único paquete de datos y transmite. Si algún nodo se retrasa en 
el envío de datos o falla, su información no formará parte del agregado enviado hacia la 
estación base. Un ejemplo muy conocido es el algoritmo de difusión dirigida [8].
 Periódica por salto: En estos algoritmos, cada nodo sabe quienes de entre sus vecinos le 
XIII Congreso Argentino de Ciencias de la Computación
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
 
II Workshop de Arquitecturas, Redes y Sistemas Operativos
_________________________________________________________________________
 
 
3
enviarán información (nodos hijos). Entonces, los nodos agregan los datos recibidos y 
los envían cuando han colectado la información de todos sus hijos. En caso de que algún 
hijo no se reporte, se espera un período predeterminado, y si no se obtiene respuesta, se 
difunde el agregado logrado hasta ese momento. El algoritmo que proponemos en este 
trabajo pertenece a esta categoría.
 Periódica por salto ajustado: Estos algoritmos utilizan el mismo principio que los de 
agregación periódica por salto, pero incorporan un esquema de retardos para la difusión 
de los mensajes, basado en la posición de cada nodo en el árbol de distribución. El 
algoritmo propuesto por Solís [7] cae dentro de esta categoría.
3 CONTROL DE TOPOLOGÍA DE LA RED BASADO EN CLUSTERS 
Las RISI son redes densamente pobladas donde cada nodo posee un número muy elevado 
de potenciales vecinos. Además, es habitual que la red deba reconfigurarse ante pequeñas 
modificaciones en su topología. Estas características ocasionan problemas para el 
funcionamiento de la red: se eleva la probabilidad de interferencias y el costo de 
reconfiguración es alto por la existencia de un gran número de rutas posibles. Una solución 
para estos inconvenientes consiste en limitar el número de vecinos, lo que se conoce como 
control de topología. Una de las opciones para  controlar la topología es definir redes 
jerárquicas basadas en clusters o grupos locales de nodos. Para el funcionamiento de los 
clusters se suele seleccionar nodos con roles especiales conocidos como cabecera (CH). 
Los CH organizan la comunicación de los nodos miembro del cluster.  
La utilización de clusters suma ventajas al control de topología. Por un lado se gestionan 
los recursos en forma local lo que facilita la escalabilidad de la red. Además estos grupos 
de nodos están orientados al uso de la técnica de agregación con el fin de reducir el 
consumo[5]. La ubicación de los puntos de agregación tiene una gran influencia sobre el 
funcionamiento de los algoritmos que  utilizan esta técnica. [9].
3.1 El Protocolo LEACH 
El protocolo desarrollado por Heinzelman [10] conocido con el nombre de “Low Energy 
Adaptive Clustering Hierarchy” (LEACH)  propone la utilización de clusters e introduce la 
rotación del rol de cabecera  entre los nodos de la red. Selecciona en forma random algunos 
nodos para cumplir el rol de CH. Éstos son los encargados de aplicar alguna función de 
agregación para obtener un único mensaje a enviar al sink. Esto le permite lograr una 
distribución más uniforme del consumo de energía prolongando el tiempo de vida del 
sistema. La recolección de datos se realiza en forma periódica y por lo tanto es un protocolo 
que se comporta en forma correcta cuando se necesita una supervisión constante en un 
entorno dado [8]. 
Su funcionamiento se divide en  dos fases, una de establecimiento del árbol de 
encaminamiento y otra de transmisión de datos hacia la estación base. En la primera fase se 
elige, mediante un algoritmo distribuido que utiliza probabilidades, las cabeceras de cluster. 
Éstas notifican que asumieron el rol de cabecera  y cada nodo se incorpora al  cluster cuya 
señal recibe con más fuerza.  
XIII Congreso Argentino de Ciencias de la Computación
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
 
II Workshop de Arquitecturas, Redes y Sistemas Operativos
_________________________________________________________________________
 
 
4
En la segunda fase los nodos miembros le envían sus datos a la cabecera y ésta aplica 
alguna función de agregación y transmite el mensaje resultante directamente a la estación 
base. Se asume que todos los nodos miembro están  a un salto de la cabecera. Por lo tanto 
ésta realiza una  planificación de tiempos y cada miembro transmite en el periodo de 
tiempo que le corresponde  para evitar colisiones. 
4 ALGORITMO PROPUESTO  
El algoritmo que se propone utiliza la idea de rotación de cabeceras de cluster propuesta 
por Heinzelman para el algoritmo descrito en la sección 3.1. Sin embargo, un inconveniente 
de LEACH es que al seleccionar las cabeceras en forma random, las mismas pueden quedar 
concentradas en algún sector de la red. Esto podría  ocasionar la desconexión  de un 
número indeterminado de nodos, como se puntualiza en  [8]. Para subsanar este problema, 
basándose en las características de las aplicaciones de interés para este trabajo,  se propone 
la división del entorno a supervisar en una cuadrícula  con divisiones uniformes y 
adyacentes como se muestra en la figura 1. Las ventajas de este enfoque se detallarán en las 
subsecciones siguientes. 
4.1 Generalidades del algoritmo 
Este algoritmo se desarrolló  para aplicaciones de supervisión ambiental con recolección 
periódica de datos. En este dominio las variables poseen una fuerte correlación 
espacio/temporal de valores entre nodos vecinos. Para aprovechar esta característica se 
propone utilizar clusters aplicando alguna función de agregación que dependerá de la 
aplicación particular. Otras características de la red sobre la que trabajará el algoritmo son: 
 Nodos fijos y homogéneos; con el mismo nivel de energía inicial. 
 Densidad de nodos uniforme. 
 Nodo sink único fuera del área monitoreada. 
La ubicación de cada nodo se conoce inicialmente y por lo tanto es posible dividir la zona 
bajo estudio en una cuadrícula uniforme, identificando cada nodo dentro de las divisiones 
de la misma.  Este enfoque  persigue dos objetivos:  asegurar que no queden nodos 
desconectados para una disposición dada de CH, y mantener acotada  la cantidad de saltos 
necesarios para que los datos de los nodos miembro alcancen la CH correspondiente.  
El uso de una cuadrícula virtual ya fue propuesto en [9] por Al-Karaki. En su algoritmo, los 
clusters coinciden con las divisiones de la cuadrícula, y el rol de CH se rota entre los  nodos 
miembros de la misma teniendo en cuenta su energía remanente. En el algoritmo que aquí 
se propone, cuando se  rotan las CH, se vuelven a definir los clusters, pudiendo 
incorporarse nodos de otras divisiones de la cuadrícula. Esto involucra un mayor número de 
mensajes de control, pero dichos mensajes son muy breves. Lo que se busca minimizar al 
introducir clusters dinámicos es el número de transmisiones de datos, al disminuir la 
cantidad de saltos necesarios. Los mensajes con información del ambiente son mucho más 
extensos que los de control, y por este motivo se considera beneficioso reducir el tráfico de 
los primeros a cambio de un incremento de los últimos.  
XIII Congreso Argentino de Ciencias de la Computación
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
 
II Workshop de Arquitecturas, Redes y Sistemas Operativos
_________________________________________________________________________
 
 
5
Por último, el funcionamiento del algoritmo se divide en dos rondas bien diferenciadas. La 
primera se ocupa del establecimiento del árbol de  encaminamiento (R1) y la segunda del 
envío de datos al sink (R2). Estas rondas se repiten periódicamente durante todo el tiempo 
de vida de la red.  
4.2 Establecimiento del árbol de encaminamiento
En cada división de la cuadrícula se seleccionará una cabecera de cluster, por lo que 
existirán tantos clusters como divisiones en la cuadrícula como puede verse en la figura 1. 
Figura 1: cuadrícula genérica 
La ronda R1 del algoritmo se ocupa de definir la estructura de los clusters y la 
comunicación intra e intercluster. Para ello se encaran diversas tareas que se describen a 
continuación. 
4.2.1 Selección de cabeceras 
Los nodos de cada división están identificados con un ID. Cuando comienza a trabajar la 
red, el nodo con mayor ID de cada partición de la cuadrícula elige en forma random el 
primer cabecera. En las rondas siguientes cada cabecera elige en forma random a su sucesor 
y lo notifica.  Cada nodo de la red conoce el mayor ID de su división y al asumir el rol de 
cabecera se autoelimina de una lista de candidatos a CH que recibe de su predecesor. 
Cuando todos los nodos de una división han cumplido con el  rol de cabecera, todos serán 
nuevamente posibles candidatos. El cabecera que al autoeliminarse de la lista de candidatos 
obtiene una lista vacía, le advierte al nodo de  mayor ID de su división este hecho y se 
repite el proceso. 
4.2.2 Formación de clusters 
El árbol de encaminamiento jerárquico se definirá en dos niveles. El primer nivel 
establecerá la estructura de cada cluster. Luego de seleccionar las cabeceras, cada nodo 
miembro decidirá a que cluster pertenece. Para ello cada CH debe enviar un mensaje de 
estructura de cluster (EC) como se muestra en la figura 2. 
XIII Congreso Argentino de Ciencias de la Computación
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
 
II Workshop de Arquitecturas, Redes y Sistemas Operativos
_________________________________________________________________________
 
 
6
Figura 2: Estructura del mensaje tipo EC 
En este contexto es de gran importancia el concepto de nivel de cada nodo, que es la menor 
cantidad de saltos que lo separan de su cabecera. De la misma forma resulta relevante que 
cada nodo identifique al vecino que usará para enviarle mensajes a su CH, al que se llama 
Ruta Al Sink (RAS). 
Los nodos no cabecera que escuchen  los mensajes EC se incorporarán al cluster del primer 
CH que escuchen. Luego reenviarán el mensaje EC colocando su ID como emisor y 
anunciando su nivel, que será el del emisor mas uno. Los nodos que no escuchan ninguna 
cabecera eligen como RAS a un nodo común, es decir dentro de un cluster la comunicación 
será multihop. Un nodo puede recibir mensajes EC con diferentes emisores. Puede tomar 
entonces dos actitudes, desechar el mensaje si su nivel no mejora, o actualizar su nivel y 
reenviar el mensaje. Para que un nodo mejore su nivel se debe cumplir que el nivel del 
nuevo nodo emisor es menor que el nivel actual del nodo menos uno. 
 Las CH deben conocer a sus hijos, por lo que debe existir un mensaje de pertenencia al 
cluster que envía cada miembro del mismo. Este mensaje se enviará cuando se ha cumplido 
un tiempo de espera sin escuchar mensajes de tipo EC. Una vez enviado el mensaje de 
pertenencia, el nodo no puede cambiar de cluster. 
La rotación de cabeceras tiende a lograr una distribución uniforme del  gasto de energía. 
Podría ocurrir que los clusters tengan distinta cantidad de miembros. Es importante 
destacar, que un nodo común que está en una división de la cuadrícula puede sumarse a un 
cluster cuya cabecera pertenece a otra. En este caso un cluster quedará formado por nodos 
que pertenecen a más de una división como se muestra  en la figura 3.  
Figura 3: Ejemplo de formación de cluster 
4.2.3 Comunicación entre cabeceras  
El segundo nivel del árbol de encaminamiento definirá  la ruta de comunicación al sink de 
XIII Congreso Argentino de Ciencias de la Computación
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
 
II Workshop de Arquitecturas, Redes y Sistemas Operativos
_________________________________________________________________________
 
 
7
todas las cabeceras de cluster. Se establece con el objetivo de que la información agregada 
alcance al nodo sink, ya que el área a supervisar es de tamaño variable y se puede dar el 
caso de que no todas las cabeceras alcancen la estación base. En este caso es necesario que 
las cabeceras lleguen a la estación base a través de su comunicación con otras cabeceras,  lo 
que significa que la comunicación entre las cabeceras y el sink será multihop.  
Para establecer la estructura de comunicación entre los CH,  el sink envía un mensaje por 
inundación que se identificó como mensaje tipo E. Este mensaje sólo será tenido en cuenta 
por los nodos cabecera de cluster, y tendrá la estructura mostrada en la figura 4.  
Figura 4: Estructura del mensaje tipo E 
Cada nodo cabecera que recibe un mensaje tipo E, adopta como RAS al nodo que figura en 
el tramo Emisor, y su nivel lo calcula sumándole uno al nivel del Emisor. Luego reenvía el 
mensaje, colocándose él como nodo emisor [11].  
Un nodo puede recibir mensajes de este tipo más de una vez desde diferentes nodos 
cabecera. Entonces su comportamiento es análogo al descrito en el primer nivel de la 
jerarquía: desecha el mensaje si su nivel no mejora, o actualiza su nivel y lo notifica. 
Por lo tanto, luego de la circulación de este mensaje entre los distintos nodos cabecera, 
queda perfectamente definida la estructura de comunicación de los CH. Al finalizar la 
definición de los dos niveles del árbol de encaminamiento, se procede al envío de datos 
hacia la estación base. 
4.3 Envío de datos al sink 
Los datos son enviados en forma periódica durante la ronda R2 por los miembros del 
cluster a la cabecera. Esta lleva a cabo la función de agregación y envía el mensaje 
resultante a su RAS. De esta forma los datos llegarán a la estación base. El algoritmo 
desarrollado de acuerdo a la clasificación propuesta por Solis en [7] es periódico por salto. 
El mensaje de datos intracluster tendrá una estructura como se muestra en la figura 5.  
Figura 5: Estructura del mensaje de datos intracluster 
La comunicación intercluster  puede realizarse teniendo en cuenta dos enfoques distintos. 
Uno es que las cabeceras al recibir mensajes ya agregados de otras cabeceras los reenvíen 
directamente hacia el sink y el otro es que vuelvan a aplicar una función de agregación y 
luego envíen el mensaje agregado. En principio, el primer enfoque implica mayor consumo 
XIII Congreso Argentino de Ciencias de la Computación
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
 
II Workshop de Arquitecturas, Redes y Sistemas Operativos
_________________________________________________________________________
 
 
8
de energía ya que se transmiten mayor cantidad de mensajes.  El enfoque que se adopte 
depende fuertemente de la función de  agregación a realizar sobre los datos, la cual a su vez 
será definida de acuerdo a las necesidades de la aplicación. Por lo tanto, la estructura del 
mensaje de datos intercluster dependerá del enfoque adoptado.  
4.4 Potencia de transmisión 
La potencia de transmisión de los nodos será variable dependiendo del tipo de 
comunicación a establecer. Para la comunicación intercluster los nodos cabecera 
transmitirán con mayor potencia, para lograr la comunicación entre ellos y el sink. El 
intercambio de mensajes intracluster se podrá realizar con una potencia de transmisión 
menor. Se fija un radio de transmisión r y las divisiones de la cuadrícula tendrán una 
longitud 2r como se muestra en la figura 6. De aquí se concluye que: 
d = √ (2r)2 + (2r)2        
d = 2 r √ 2      < 3r 
Por lo tanto en la comunicación intracluster la mayor distancia entre un CH y un nodo será 
menor a 3 saltos. 
Figura 6: Radio de transmisión intracluster 
4.5 Fallos en la red 
Durante cada una de las tareas que se desarrollan en las dos rondas del funcionamiento del 
algoritmo, pueden presentarse fallos. El protocolo desarrollado no da seguridad respecto de 
la llegada de mensajes a la estación base. Este criterio se adoptó pues para el tipo de 
aplicaciones de interés es suficiente con fijar un umbral, que representa un porcentaje de 
pérdida de mediciones admisible, que una vez superado indica que el tiempo de vida de la 
red ha expirado. Sin embargo, en la ronda R1 de establecimiento del árbol de 
encaminamiento existen ciertos fallos, que de producirse degradan en forma significativa el 
funcionamiento de la red. Se considerarán como fallos críticos los que se producen en las 
etapas de elección de cabeceras y definición de la estructura de comunicación de cabeceras. 
Para disminuir el impacto de estos fallos se propone los siguientes cursos de acción. 
 fallos en la elección de cabeceras: la cabecera actual de la cuadrícula elige en forma 
random a su sucesora y le envía la lista de candidatos a CH. El nodo elegido responde 
con un mensaje de aceptación. La cabecera actual espera por el mensaje de aceptación 
un ∆t,  en caso de no recibirlo elige una cabecera sustituta. 
XIII Congreso Argentino de Ciencias de la Computación
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
 
II Workshop de Arquitecturas, Redes y Sistemas Operativos
_________________________________________________________________________
 
 
9
 fallos en la definición de la estructura de comunicación de cabeceras: para 
determinar el tratamiento de los fallos en esta etapa, se debe considerar el enfoque 
elegido para la comunicación intercluster. Si se adopta el enfoque sin agregación en la 
comunicación entre cabeceras, el nodo sink conoce la cantidad de mensajes que le 
deben llegar. Mientras la pérdida de mensajes no sea superior a un porcentaje que se 
fijará de acuerdo a la aplicación no toma ninguna acción, en caso que se supere ese 
porcentaje se considerará que el tiempo de vida de la red ha expirado. Si se adopta el 
criterio con agregación en la comunicación entre cabeceras,  será cada CH el que deba 
verificar el porcentaje de pérdida de mensajes aceptado y tomar las acciones 
correspondientes. Esto es posible ya que cada cabecera conoce la cantidad de CH que 
reportan a él. 
5 CONCLUSIONES 
Se ha propuesto un algoritmo de medición periódica de las variables de interés. Este tipo de 
recolección de datos es muy utilizado en  supervisión ambiental. En estas aplicaciones es 
muy frecuente que exista una fuerte correlación espacio/temporal de las variables 
involucradas, lo que permite utilizar técnicas de agregación. Se plantea el uso de una 
cuadrícula para evitar subdivisiones de la red y minimizar la cantidad de saltos para los 
mensajes de datos. Además, la propuesta de rotación de cabeceras de cluster contribuye al 
logro de un consumo más uniforme de potencia, prolongando el tiempo de vida de la red. 
El algoritmo no garantiza la recepción de todos los mensajes en la estación base. Sin 
embargo controla dos puntos críticos en el envío, que son la selección de cabeceras y la 
definición de la estructura de comunicación entre cabeceras. Este control implica la 
incorporación de mensajes que incrementan el tráfico en la red. Dicho incremento se ha 
considerado necesario ya que los fallos en estas etapas degradan rápidamente el 
funcionamiento del sistema.  
6 TRABAJO FUTURO  
El funcionamiento del algoritmo propuesto debe ser verificado por simulación. Se espera 
realizar esta tarea con el fin de evaluar su desempeño para cotejarlo con el análisis 
realizado. Para un mismo entorno de trabajo se propone comparar la eficiencia del 
algoritmo propuesto en cuanto al tiempo de vida de la red, respecto a un algoritmo que no 
realiza ningún tipo de agregación.  Otra simulación de interés es comparar los dos enfoques 
planteados, para la estructura de comunicación de cabeceras. Finalmente, se podría variar 
las dimensiones de la cuadrícula definida, lo que modificaría la definición de los clusters, y 
considerar su impacto sobre el desempeño de la red. Esta última prueba sería 
particularmente interesante cuando se trabaja con redes de distribución no homogénea de 
nodos. 
