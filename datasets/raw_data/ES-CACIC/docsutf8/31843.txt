Metodología innovadora para el estudio y programación de microprocesadores en arquitectura de computadoras
﻿ Este Trabajo presenta una Metodología de enseñanza de Microprocesadores, con una etapa de 
programación en Assembler, la cual facilita la comprensión en el funcionamiento interno de un microprocesador y el 
rol que tienen los registros en el mismo.  Adicionalmente, se plantea una etapa de aplicación de los 
Microprocesadores en el Diseño de Sistemas Digitales mediante Programación de software para sistemas embebidos. 
Dicha metodología se está implementando en la Asignatura de Organización y Arquitectura de Computadoras.   
La propuesta se encuadra dentro del Método inductivo básico a través de Simulación con kits e instrumental de 
diseño de Sistemas Embebidos. Este método se considera apropiado, teniendo en cuenta el contenido a enseñar y la 
necesidad de incluir la enseñanza de Programación de Sistemas Embebidos basado en sistemas Procesadores en las 
carreras de Informática. La Programación de Software embebido en sistemas Microprocesadores, se presenta como 
un Trabajo de Laboratorio que se va desarrollando a lo largo de toda la materia. 
  
Keywords: Organización y Arquitectura de Computadoras, Microprocesadores, Sistemas Embebidos, Metodologías 
innovadoras, Estrategias Educativas. 
1 Introducción 
 
Para una mejor descripción de la metodología de enseñanza, se comienza por realizar una descripción del área dentro 
de la especialidad en donde se encuentran incluida la materia. Luego de esto, se describe la metodología en sí misma,  
acompañada de los contenidos de la materia. 
El área de enseñanza se denomina ARSO  y abarca las materias de Arquitectura, Redes y Sistemas Operativos,  las 
cuales están fuertemente vinculadas al Hardware dentro de las Ciencias Informáticas. 
Entre los Objetivos y Contenidos se busca describir la importancia de introducir al alumno en el funcionamiento y 
constitución del Microprocesador y mediante la programación del mismo a bajo nivel, acompañando los fundamentos 
teóricos con una fuerte parte práctica que permite a los alumnos desarrollar y ejercitar la capacidad de diseño de un 
programa y la resolución de problemas. Por otro lado se pretende introducir el concepto de software embebido mediante 
la realización de un Laboratorio a lo largo de toda la cursada, mediante un kit de desarrollo basado en un sistema 
microprocesador Cortex M3, que permite potenciar la programación de microprocesadores en alto nivel para 
aplicaciones complejas que involucran la implementación de Sistemas Operativos de Tiempo Real (RTOS) y 
Aplicaciones con interfaces Ethernet, para potenciar los conceptos adquiridos en redes. 
La metodología presentada pretende demostrar  cuan eficiente es aplicándola en el área ARSO mediante el respaldo 
de un grupo docente fuertemente capacitado para dar soporte y ayudar al alumno a desarrollar la capacidad de 
razonamiento sobre los temas en cuestión. Dicha Metodología se está aplicando actualmente en la material 
Organización y Arquitectura de Computadores del Instituto de Ingeniería de la UNAJ. 
2   Descripción del Área 
Las materias básicas del Área, son “Organización y Arquitectura de Computadoras” y “Sistemas Operativos I” 
dictadas en el tercer semestre de la carrera, luego “Redes de Computadora I” se dicta en el cuarto semestre, el resto de 
las materias del área se ubican en tercer y cuarto año de Ing. Informática. La aplicación de la metodología se centra en 
Organización y Arquitectura de Computadoras, en donde se contempla la descripción de un microprocesador y sus 
aplicaciones, además se presentan conceptos de programación de un sistema procesador en lenguaje de alto nivel con 
Universidad Nacional Arturo Jauretche 
Instituto de Ingeniería – Ingeniería Informática 
Av. Clachaquí 6200, Florencio Varela, Argentina 
josio@unaj.edu.ar, martinmorales@unaj.edu.ar 
1624
aplicaciones relacionadas a las demás materias del área, todo esto mediante un Laboratorio obligatorio a realizarse 
durante toda la materia. Cabe aclarar que con las aplicaciones no se pretende explicar temas que serán impartidos en 
otras Materias, pero se abre una puerta para profundizar sobre estos temas de manera práctica y aplicada. 
3 Objetivos y Contenidos 
Los objetivos en relación a los contenidos de la materia “Organización y Arquitectura de Computadoras” son los 
siguientes: 
 
 Matemática Discreta 
- Sistemas de Numeración 
- Algebra de Boole 
- Sistemas lógico y compuertas 
 
 Comprensión del funcionamiento de un procesador. 
Estudio desde el punto de vista físico y lógico de los microprocesadores: 
- Diagrama de bloques. Buses. Registros. Instrucciones. Modos de direccionamiento. Estructura 
algorítmica. (CPU) 
- Periféricos de entrada/salida. Proceso de interrupción. Temporizadores. Comparadores y 
capturadotes.(MCU) 
 
 Tipos y Selección de procesadores genéricos 
- Estado del arte y criterios comparativos de procesadores 
 
 Utilización de procesadores genéricos: 
- Programación en Assembler mediante un Microrpocesador básico 
 Caso de Estudio HC08 de Freescale (facilita la comprensión de funcionamiento)  
 Aplicaciones de algoritmos matemáticos y planteo con Diagrama de Flujos 
- Programación en C, Realización de experiencias concretas con elementos de entrada/salida 
 Caso de estudio Microprocesador Cortex M3 
 Aplicaciones con periféricos. 
 
 Descripción de las Distintas Arquitecturas de Computadores 
- Evolución y Performance de las Computadoras 
 
 Memorias 
- Memoria Cache 
- Memoria Interna 
- Memoria Externa 
 
 Entradas / Salidas 
 
 Soporte para Sistemas Operativos 
 
 Estudio de Arquitecturas de Microprocesadores populares 
- Arquitecturas X86 
- Arquitectura ARM para Sistemas Embebidos 
4  Materiales de Estudio y Herramientas de trabajo 
 
Para la implementación de esta metodología es estrictamente necesario lograr una estrecha relación entre los materiales 
de estudio y las herramientas de trabajo. Es por eso que en cada Trabajo práctico siempre se agrega la información 
necesaria para que el mismo pueda ser resuelto sin problemas. Por otro lado el hecho de usar herramientas específicas 
de HW, hace necesario proveer materiales específicos para cada herramienta, ya sea, mediante apuntes de cátedra o 
mediante manuales o notas de aplicación relacionadas con las herramientas. 
1625
 4.1  Materiales de Estudio 
 
- Bibliografía básica [1 - 8] 
- Apuntes de cátedra [9] 
- Manuales Técnicos y notas de aplicación del microcontrolador HC908 y del kit de Desarrollo LPC1769 [10 14] 
- Bibliografía de aplicaciones  [15] y [16] 
 
4.2 Herramientas de Trabajo 
 
Dentro de las herramientas de trabajo se deben incluir la Computadora, como una herramienta indispensable para 
realizar toda la parte práctica. 
 
4.2.1. Herramientas de Trabajo  
 
Las herramientas de trabajo indispensables para llevar a cabo la metodología son: 
 
- Kit de Desarrollo LPC1768, (ver fig. 1)  
- Placa Base con los siguientes componentes: 
o Componentes para implementación de diferentes protocolos (serial, SPI, I2C,PWM, USB, Ethernet) 
o Componentes básicos (leds, potenciómetros, dimmers, joystick) 
o Micrófono y parlantes para aplicaciones de audio 
o Memoria Flash externa 
o Interfaz con display gráfico 
o Interfaz USB (HOST y HID) 
o Interfaz Ethernet 
o Puertos de E/S 
 
- Software para diagramas de Flujo. 
- Software de compilación y simulación en circuito (Win IDE, ver Fig. 2) 
- Software IDE LPCxpresso, Permite crear proyectos en C para Microcontroladores de 32 Bits basado en 
Microprocesadores ARM de la Firma NXP, (ver Fig. 3). Integra un conjuntos de Herramientas que permiten 
compilar y hacer debugging en circuito, también permite crear proyectos a compilar con el software Mingw. 
5 Características de la Cursada 
5.1  Contenidos Teóricos de la Cursada  
 
En Principio se describen los componentes de una Computadora y se presenta la evolución y desempeño de las mismas. 
Se detallan cada una de las partes Principales que la conforman como las distintas memorias (memoria cache, Memoria 
interna y Memoria externa) y se describen las entradas y salidas. También se explica el soporte para Sistemas 
operativos. 
También, se dictan los detalles del Procesamiento, Como la Aritmética Computacional, Características del Set de 
Instrucciones, Modos de direccionamiento y la Unidad de Control. Esto último tanto para la Arquitectura HC08 de 
Freescale,  luego se comparan características de X86 de Intel y de la Arquitectura ARM. 
Luego se describen los Registros, Modos de Direccionamiento, Bifurcaciones, Saltos y subrutinas e Interrupciones del 
Microprocesador HC08 de Freescale con Registros que manejan datos de 8 bits, para la programación en Assembler. En 
una segunda Etapa se describen los Módulo de Entrada/Salida, Módulo de temporización, Comunicaciones Serie (SPI, 
SCI, I2C, Ethernet, USB, entre otros). 
 
 
5.1  Contenidos Prácticos de la Cursada  
 
 TP1. Rendimiento de Computador 
 TP2. Sistemas de Numeración 
 TP3. Algebra de boole 
 TP4. Circuitos Lógicos y Partes de Microprocesador. Concepto de Procesamiento de Instrucción 
1626
 TP5: Ejercicios sobre Modos de direccionamiento y set de instrucciones basados en el HC08. 
 TP6: Programación de operaciones basadas en los principales sistemas de numeración y algoritmos matemáticos 
con simulación en Assembler. (Realización de Diagramas de Flujo) sobre el HC08. 
 TP7: Memoria externa. Discos Rígidos. RAID. I/O. Manejo de Memoria y paginado 
 Laboratorio Obligatorio de Programación de Interfaces de e/s sobre una Arquitectura ARM en C. Este laboratorio 
consiste en la explicación de las interfaces que se enumeran a continuación y culmina con una aplicación que 
involucra las distintas interfaces sobre la placa LPC 1769. 
- En este Laboratorio se utiliza el kit de programación junto con una Placa Base, permitiendo implementar una 
comunicación RS-232, USB y Ethernet. 
- Aplicaciones con Display Gráfico 
- Realización el control de un sistema calefactor – refrigerante mediante el sensado de temperatura y el 
accionamiento de una resistencia calefactora o un ventilador según el valor de temperatura sensado. 
-  Realizar aplicaciones de almacenamiento de datos mediante una memoria externa mediante la interfaz SPI  
- Realizar aplicaciones de procesamiento digital de audio. 
 
 
Fig. 1. El KIT de desarrollo LPCxpresso LPC1114 está formado por el LPC-Link, el cual es un programador que permite programar 
toda la Familia de Microcontroladores de NXP y hacer debugging en Circuito. Adicionalmente viene acompañado por un Target que 
contiene un Microcontrolador LPC1114 con un Microprocesador ARM Cortex M0 para Aplicaciones. 
 
6 Metodología de Enseñanza 
 
La metodología de enseñanza tiene en cuenta cuatro factores principales para la instrucción del Alumno: 
  
 El primer factor consiste en hilvanar los temas vistos en materias anteriores. Esto se logra, integrando los 
conocimientos vistos anteriormente en un Trabajo Práctico, mediante ejercicios que involucran operaciones y 
algoritmos matemáticos.  
 De la misma manera se integran los Contenidos de “Organización y Arquitectura de Computadores” con 
“Sistemas Operativos I”, Aprovechando la implementación de un Sistema Operativo de Tiempo real en el 
Laboratorio, aplicando en la Práctica los conceptos adquiridos en dicha materia. 
 Los dos Factores principales están muy estrechamente ligados y coordinados para lograr instruir al alumno de 
manera que pueda fijar los conocimientos teóricos mediante la aplicación práctica de los mismos. Por un lado, 
la programación en Assembler de un microprocesador básico fortalece los conceptos de funcionamiento de un 
procesador y las posibles aplicaciones de sus registros. Por otro lado, involucra la aplicación de las reglas del 
buen programador mediante la planificación del código mediante el Diagrama de Flujos correspondiente. 
 Por último, se puede considerar como factor complementario el hecho de incluir dentro del Laboratorio, 
aplicaciones que involucran temas y elementos específicos de otras materias de Informática, mediante la 
Programación en Lenguaje de Alto nivel de código para Sistemas embebidos, la realización de aplicaciones 
que contienen elementos de materias del área ARSO, etc. 
 
6.1  Metodología de Teoría  
 
1627
Las clases teóricas se dictan mediante filminas ilustrativas que permiten al alumno apreciar detalles de Imágenes y 
gráficos de manera interactiva. Los temas teóricos están diagramados de tal manera que los alumnos puedan fijarlos 
mediante la correspondiente clase práctica, de manera casi simultánea. 
 
6.2 Metodología Práctica 
 
La metodología práctica está diagramada en dos módulos, como se detalla en la sección 5. En el primer Módulo se 
presenta una práctica que consiste en determinar mediante diferentes técnicas la eficiencia y rendimiento en sistemas 
Computadores. Introducir al alumno en los sistemas de numeración, especialmente los utilizados en sistemas digitales. 
Enseñar al alumno a representar las distintas partes de un microprocesador mediante compuertas lógicas y por último, 
introducción al alumno al funcionamiento de un Computador, mediante la descripción de la composición y 
funcionamiento de un Microprocesador, de las jerarquías de memoria y de los periféricos I/O.  
Los Trabajos Prácticos 5, 6 y el laboratorio se realizan en Computadora con diferentes herramientas de software. En 
cada clase los alumnos tienen una introducción a las prácticas dictada por el Profesor a cargo del Curso y luego los 
alumnos realizan parte de los ejercicios correspondientes al Trabajo práctico en cuestión. La primera parte del segundo 
módulo consiste en programar código assembler profundizando sobre las características y funcionamiento de un 
microprocesador (en cuanto a registros, set de instrucciones, códigos de operación y modos de direccionamiento). En 
esta instancia el alumno comienza a utilizar el software WINIDE,  de la Fig. 2, mediante la compilación y la simulación 
de código. Luego sigue una Práctica que consiste en la programación y simulación en assembler de ejercicios que 
requieren el manejo de datos,  la conversión entre sistemas de numeración, implementación de operaciones matemáticas 
y de algoritmos matemáticos y de comunicaciones. Cabe aclarar que previo a cada programa se deben realizar el 
diagrama de flujo describiendo el funcionamiento que deberá realizar el programa. Este tipo de ejercicios hace que el 
alumno desarrolle la capacidad de programar de manera ordenada y de resolver problemas.  
 
 
Fig. 2. Compilador y Simulador en Circuito WINIDE. 
 
Es importante destacar que los alumnos forman comisiones de tres integrantes para realizar El Laboratorio, lo cual 
fortalece el trabajo en grupo, en donde además de la aplicación a implementar, deben realizar un informe y presentarlo 
en una clase al resto del curso. 
El Laboratorio, consiste básicamente en la programación en Lenguaje C de los módulos periféricos E/S que permiten la 
interfaz entre el microprocesador y otros dispositivos. De esta manera se realiza el control de un Display gráfico, de 
varios módulos externos como memorias flash mediante interfaz I2C, interfaz USB, interfaz Ethernet, Free 
RTOS y procesamento de audio mediante PWM, etc. Para la programación del Microcoprocesador Cortex M3 se utiliza 
el software LPC xpresso que se muestra en la Fig. 3. 
 
 
 
1628
 
Fig. 3. Entorno de Desarrollo Integrado LPCxpresso, que permite Programación en C y debugging en circuito para 
Microcontroladores de NXP basados en Microprocesadores ARM  Cortex. 
 
Finalmente, con el Laboratorio se introduce al Alumno a la programación de Software para sistemas Embebidos, se 
presentan aplicaciones relacionadas con Sistemas operativos de tiempo real y Ethernet, permitiendo aplicar los 
conceptos profundizados en las demás materias del área. Se implementa el envío de datos a una memoria externa, 
aplicando los conceptos de jerarquía de memoria. Por último, se realizan aplicaciones con periféricos I/O, lo cual 
permite comprender la idea de interfaz E/S en un Computador y buses y se exploran las distintas posibilidades que 
ofrece un Sistema procesador ARM. 
Se debe aclarar que cada curso se compone de un profesor a cargo y un máximo de 30 alumnos, es por eso que se puede 
llevar a cabo esta modalidad tan demandante. 
 
7 Resultados Obtenidos 
 
Entre los resultados obtenidos se puede destacar que la programación en Assembler de un microprocesador de 8 bits 
con registros básicos favorece la comprensión del funcionamiento del mismo y las posibles funciones que pueden 
cumplir los registros. De un total de 120 alumnos repartidos en 4 cursos de 30, se presentaron a los exámenes 104 
alumnos, sobre los cuales se obtuvieron los resultados de la Tabla 1, en donde se muestran los resultados luego de las 
evaluaciones correspondientes a los temas relacionados con el microprocesador, tales como modos de direccionamiento, 
registros, set de instrucciones y ejecución de instrucciones, programación en Assembler.  
Tabla 1.  Resultados de las evaluaciones del Segundo módulo referentes al microprocesador y su funcionamiento.  
Tema evaluado Sin 
Respuesta 
Respuesta 
correcta 
Respuesta 
incorrecta 
Descripción teórica de ejecución de instrucciones en un microprocesador 4% 90% 6% 
Realización de diagramas de flujo 40% 45% 15% 
Programación en Assembler 15% 60% 25% 
Modos de direccionamientos y set de instrucciones 2% 90% 8% 
Utilización de registros y memoria 15% 65% 20% 
 
En la Tabla 2 se puede observar como influyeron los conceptos aplicados mediante la programación de un 
microprocesador en Assembler, en los alumnos que tuvieron que rendir en la última fecha flotante de la materia el 
módulo 1. 
Tabla 2.  Comparativa de los temas relacionados con el microprocesador evaluados en el primer módulo antes y después de 
programar en Assembler y explorar las características del microprocesador .  
Evaluación de conceptos sobre microprocesadores en el primer módulo Sin 
Respuesta 
Respuesta 
correcta 
Respuesta 
incorrecta 
Examen del primer módulo sobre un total de 115 alumnos 10% 60% 30% 
Examen flotante del primer módulo sobre un total de 20 alumnos 5% 95% 0% 
1629
8 Conclusiones 
 
Como conclusión se puede decir que esta metodología ayuda al alumno a familiarizarse con todas las herramientas 
digitales disponibles en el diseño y Programación de Sistemas Embebidos y le provee una buena preparación para 
desempeñarse como profesional en esta área.  
Entre las Herramientas presentadas y utilizadas en la Cátedra se presentan las diferentes Familias de Microprocesadores 
que son usados en una amplia gama de aplicaciones para Sistemas Embebidos y Sistemas Computacionales.  
Por un lado se realizan aplicaciones sobre un microcontrolador de 8 bits de baja gama como es el HC08, en donde se 
pueden visualizar y utilizar los principales registros de un procesador, mediante la programación en bajo nivel de 
aplicaciones que requieren poco procesamiento y poca memoria. Entre los resultados, se pudo demostrar que esta 
metodología favorece a la comprensión del funcionamiento del microprocesador y de cada una de sus partes. También 
se logró fomentar la planificación de un programa mediante diagramas de flujo y la resolución de problemas. 
Aunque el Laboratorio de software embebidos sobre el kit LPCxpresso aun no nos permite sacar conclusiones por su 
reciente implementación, es muy evidente que fortalecerá la programación de sistemas embebidos y por otro lado 
formalizar los conocimientos sobre jerarquías de memorias y Periféricos I/O.  
