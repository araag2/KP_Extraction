Clasificación automática de emisiones radar mediante combinación de ARTMAP y filtros Kalman
﻿
Las Medidas de Apoyo Electrónico (Electronic Support Measures ESM) tienen que ver con la 
búsqueda, intercepción, localización, análisis e identificación de energía electromagnética irradiada 
con propósitos militares. 
Una función crítica de un sistema ESM es la identificación en tiempo real del tipo de radar asociado 
con cada tren de pulsos interceptado. Esta tarea constituye un desafío debido a la creciente densidad 
electromagnética, típica de una zona de conflicto, donde puede haber cientos de miles de pulsos por 
segundo, además de gran dispersión en los modos de trabajo de los radares militares. 
En este trabajo se examina un sistema de reconocimiento de emisiones de radar que combina 
diversas fuentes de información para predecir el tipo de radar más probable. Los parámetros del 
pulso que caracterizan el tipo de radar se utilizan para la tarea de clasificación, mientras que los 
parámetros de carácter espacial (dirección de arribo y amplitud) se utilizan para separar los trenes 
de pulsos correspondientes a los distintos emisores activos. 
El componente principal del sistema de reconocimiento es un clasificador basado en una red 
neuronal con capacidad de aprendizaje incremental, que se entrena para determinar el tipo de 
emisor radar presente en el ambiente. El sistema aprende en forma autónoma a identificar cada tipo 
específico de radar, directamente a partir de la información recolectada de campo. 
 
Palabras Claves: Clasificación de emisores, red ARTMAP difusa, clustering, ESM, Radares 
 
 
1. INTRODUCCIÓN 
 
Las Medidas de Apoyo Electrónico (Electronic Support Measures ESM) involucran la búsqueda, 
intercepción, localización, análisis e identificación de energía electromagnética (principalmente de 
radar) radiada con propósitos militares. Las ESM proveen información valiosa para conocimiento 
de la situación en tiempo real, para detección y evasión de amenazas y para el despliegue a tiempo 
de contra medidas electrónicas (Browne, J. P. R, & Thurbon, M. T., 1998), (Wiley, 1993). 
 
 
1.1. Descripción del problema 
 
Una función crítica de un sistema ESM es la identificación en tiempo real del tipo de radar asociado 
con cada tren de pulsos interceptado. Las aproximaciones clásicas ordenan los pulsos de radar 
entrantes en trenes individuales, y luego comparan las características de ese tren con una librería de 
descripciones paramétricas, que contiene una lista de los tipos de radares conocidos. Esta tarea 
constituye todo un reto debido al constante aumento de la densidad electromagnética (un radar 
Doppler puede transmitir cientos de miles de pulsos por segundo); así como la multiplicación y 
dispersión de los modos de trabajo de los radares militares, la agilidad en parámetros como el 
intervalo de repetición de pulsos, la frecuencia de emisión y la velocidad de barrido; modos 
desconocidos o reservados para los cuales no existen entradas en las librerías ESM, solapamiento 
entre los parámetros de diferentes tipos de radar; y ruidos o efectos de propagación que conllevan a 
una caracterización incompleta o errónea. Estos aspectos del problema imponen una gran demanda 
a los sistemas ESM. 
 
 
1.2. Solución propuesta 
 
En este trabajo examinaremos una aproximación alternativa. Un sistema de reconocimiento que 
combina diversas fuentes de información, para predecir el tipo de radar más probable por cada pulso 
interceptado. Los parámetros específicos de clase se utilizan para clasificar los pulsos de acuerdo al 
tipo de radar, mientras que los parámetros específicos de la posición espacial se usan para separar 
los pulsos provenientes de los distintos emisores activos. 
El componente central del nuevo sistema de reconocimiento es un clasificador basado en una red 
neuronal, que se entrena para determinar los tipos de radares presentes en el medio ambiente.  
El uso de una red neuronal con capacidad de aprendizaje incremental ofrece un marco de trabajo 
apto para refinar los tipos de radares conocidos y agregar los desconocidos, en pleno 
funcionamiento. 
En esta aplicación se utiliza una red neuronal fuzzy ARTMAP (Carpenter, G.A., Grossberg, S., 
Markuzon, N., Reynolds, J. H., & Rosen, D. B., 1992) para clasificar los pulsos en base a los 
parámetros específicos de clase, y clustering por el método del vecino más próximo, basado en un 
banco de filtros Kalman (Bar-Shalom, Y., & Li, R. A., 1993); (Blackman, 1986), para separar los 
pulsos a partir de los parámetros específicos de la posición espacial. 
 
 
2. DESCRIPCIÓN GENERAL DEL MODELO 
 
 Las señales radar son interceptadas en forma pasiva por la etapa receptora del sistema ESM. En un 
teatro de operaciones típico, las señales interceptadas son una mezcla de pulsos electromagnéticos 
transmitidos desde varias fuentes. La iluminación simultánea de estas fuentes produce solapamiento 
y entremezcla de los pulsos recibidos. Tras la detección del pulso, la mayoría de los sistemas ESM 
miden la amplitud del pulso (Pulse Amplitud PA), el ancho de pulso (Pulse Width PW), frecuencia 
de emisión de la onda portadora (RF), tiempo de llegada (Time Of Arrival TOA) y la dirección de 
arribo (Direction Of Arrival DOA). Una vez que los parámetros del pulso fueron medidos, se 
digitalizan y ensamblan en una estructura denominada firma del pulso (Pulse Signature PS). En la 
figura 1 se ilustra el diagrama en bloques de la solución propuesta. 
En primer lugar un separador trata de descubrir periodicidades en el TOA de las PS entrantes. Si la 
agrupación de pulsos resulta posible por este método, se forman clusters y se les asigna un número 
de track y PRI a cada pulso del grupo (se entiende por track a un grupo de pulsos provenientes del 
mismo emisor). La agrupación se realiza mediante la técnica clásica de histogramas de diferencia de 
TOA. 
Posteriormente las PS se dividen en dos cadenas. Una cadena constituye los parámetros que 
caracterizan los aspectos funcionales del radar. Estos parámetros incluyen la RF, el PW y PRI, y 
son los que habitualmente se compilan en las librerías ESM porque son directamente útiles para 
reconocer el tipo de radar. La otra cadena consiste en los parámetros específicos del contexto, tales 
como la DOA y la amplitud, que reflejan la posición del emisor en el espacio. Estos parámetros son 
menos útiles que los anteriores para el reconocimiento del tipo de radar, pero son importantes para 
agrupar los pulsos en tracks. 
 
 
 
Receptor 
 
 
Fig. 1. Diagrama en bloques de un sistema ESM 
(los corchetes indican que el campo puede estar vacío para algunos pulsos) 
 
Antes de la operación en línea, la red neuronal se entrena mediante aprendizaje supervisado, usando 
datos de radares colectados en campo y etiquetados con su respectivo tipo de radar. Sólo los 
parámetros específicos de tipo se utilizan en el entrenamiento, incluyendo el PRI si está disponible. 
Durante la operación online, el sistema de reconocimiento procesa la secuencia de PS 
correspondiente a los pulsos interceptados, así como el número de track y PRI de cada pulso 
agrupado por el separador por TOA. Los parámetros específicos de tipo son enviados a la red 
neuronal y los espaciales al subsistema de clustering. Para cada pulso entrante el subsistema 
clasificador emite una predicción del tipo de radar. Esta predicción tiene la forma de un patrón 
denotado por yab. A su vez, el subsistema de clustering intenta agrupar los pulsos en tracks 
basándose en los parámetros espaciales. Si el número de track ya fue provisto por el separador por 
TOA, la salida de este subsistema es descartada.  
La fusión de las respuestas de los subsistemas de clasificación y de clustering se realiza en el 
módulo de acumulación de actividad. Los patrones de respuesta yab obtenidos por el subsistema de 
clasificación son acumulados a lo largo del tiempo según los tracks, es decir según los 
agrupamientos surgidos de la información espacial. Los números de track obtenidos en el módulo 
de clustering indican los emisores a los que se asocian las PS. La fusión se implementa mediante  
un conjunto de campos de acumulación de actividad, donde cada campo Fhe corresponde a un track 
h = 1, 2, … , R. La asignación de un track h = H a una PS habilita un campo de acumulación de 
actividad FHe para que acumule los patrones de salida yab del módulo de clasificación. La 
acumulación produce la salida ye, que se obtiene a partir de una o más respuestas yab, y que 
constituye la predicción final del tipo de radar de cada PS entrante.  
 
 
2.1. Modulo clasificador 
 
ARTMAP refiere a una familia de redes neuronales capaces de realizar aprendizaje rápido, 
incremental, online, supervisado o no supervisado (Carpenter, G.A., Grossberg, S., Markuzon, N., 
Reynolds, J. H., & Rosen, D. B., 1992). Las redes ARTMAP presentan varias características 
atractivas para ser empleadas en sistemas ESM.  
• Pueden aprender en forma rápida y estable a partir de eventos nuevos encontrados en campo. 
Las redes neuronales clásicas, como el Perceptrón Multicapa y Radial Basis Function (Chen, 
S., Cowan, C. F. N., & Grant, P. M., 1991) requieren un re entrenamiento offline de todo el 
conjunto completo de datos, a través de un proceso lento e iterativo, para aprender nuevos 
tipos de radares.  
• Las redes ARTMAP también realizan “discriminación de familiaridad”, para evitar 
predicciones carentes de sentido de clases de radar desconocidas (Carpenter, G. A., Rubin, 
M. A., & Streilein, W. W., 1997a). 
• Pueden representar un tipo de radar usando uno o más prototipos, lo cual resulta deseable 
para manejar radares con varios modos de operación. 
• La arquitectura ARTMAP se presta naturalmente para el procesamiento paralelo de alta 
velocidad, hecho que resulta crítico para la identificación en tiempo real. 
 
La red fuzzy ARTMAP es aplicada generalmente en la versión simplificada mostrada en la figura 2. 
 
Fig. 2. Arquitectura fuzzy ARTMAP especializada en reconocimiento de patrones. 
Los semicírculos sólidos representan conexiones adaptativas 
 
La arquitectura ARTMAP simplificada se obtiene combinando una red ART no supervisada con un 
campo de mapeo. La variante fuzzy ARTMAP puede procesar información tanto analógica como 
digital, empleando fuzzy ART como red. Una red neuronal Fuzzy ART consiste en dos capas de 
nodos totalmente conectados: una capa de entrada F1 con M nodos, y una capa competitiva F2 con N 
nodos. F1 y F2 están conectadas mediante un conjunto de pesos de valores reales W = {wij  [0, 1]: i 
= 1, 2, … , M; j = 1, 2, … , N}. Cada nodo j de F2 representa una categoría de reconocimiento que 
aprende un vector prototipo wj = (w1j, w2j, … , wMj). La capa F2 está conectada, a través de vínculos 
asociativos, a un campo de mapeo Fab de L nodos, donde L es el número de clases en el espacio de 
salida. Un conjunto de pesos binarios Wab = {wjkab  [0, 1]: j= 1, 2, …, N; k = 1, 2, … , L} se asocia 
con las conexiones de F2 a Fab. El vector wjab = (wj1ab, wj2ab, … , wjLab) vincula el nodo j de F2 con 
una de las L clases de salida. Durante el entrenamiento la red hace aprendizaje supervisado del 
mapeo entre los vectores de entrenamiento a = (a1, a2, … , am) y las salidas t = (t1, t2, … , tL), donde 
tK = 1 si K es la clase para a, y cero en caso contrario.  
La siguiente secuencia describe el algoritmo de aprendizaje fuzzy ARTMAP: 
1. Inicialización. Inicialmente todos los nodos F2 están libres, todos los pesos wij son iguales a 1 y 
todos los pesos wjkab son iguales a 0. Un nodo de F2 se dice comprometido cuando es 
seleccionado para codificar a un vector de entrada a, y vinculado con un nodo de Fab. Los 
parámetros de la tasa de aprendizaje β  [0, 1], la selección α > 0 y la vigilancia ρ  [0, 1] son 
establecidos a su valor inicial.  
2. Codificación del patrón de entrada. Cuando un par de vectores de entrenamiento (a, t) es 
presentado a la red, a sufre una transformación denominada codificación complementaria, que 
duplica el número de sus componentes. El patrón de entrada así codificado tiene M = 2m 
dimensiones y está definido por A = (a, ac) = (a1, a2, … ,am; a1c, a2c, … ,amc), donde aic = (1-ai), 
y ai  [0, 1]. El parámetro de vigilancia ρ es reseteado a su valor base. 
3. Selección del prototipo. El patrón A activa la capa F1 y se propaga a través de los pesos de 
conexión W a la capa F2. La activación de cada nodo j en la capa F2 está determinada por la 
función de selección de Weber: 
                                              (1) 
Donde | • | es el operador norma,  
 es el operador difuso AND, (A  wj)i  min(Ai, wij) 
α es el parámetro de selección definido por el usuario. 
 
La capa F2 produce, por medio de una competencia winner-take-all, un patrón binario de 
actividad y = (y1, y2, … , yN) tal que solamente el nodo j = J con el mayor valor de activación J 
= argmax{Tj : j = 1, 2, … , N} permanece activo; entonces yJ = 1 e yj = 0  j ≠ J. Si más de un Tj 
es máximo, es seleccionado el nodo j con el menor índice. El nodo J propaga su expectativa 
descendente, o vector prototipo wj, de vuelta hacia F1 y se realiza la prueba de vigilancia. Esta 
prueba compara el grado de semejanza entre wJ y A contra el parámetro de vigilancia 
adimensional ρ: 
                                                  (2) 
Si se supera la prueba el nodo J permanece activo, y se dice que se alcanzó la resonancia. De lo 
contrario, la red inhibe el nodo activo de F2 (o sea que Tj es puesto a 0 hasta que sea presentado 
a la red el próximo par de entrenamiento (a, t)) y busca otro nodo J que pase la prueba de 
vigilancia. Si ese nodo no existe, se activa un nodo libre. La profundidad de la búsqueda, antes 
de que se seleccione un nodo libre está determinada por el parámetro de selección α. 
 
4. Predicción de clase. El patrón de clase t es aplicado directamente al campo de mapeo Fab, 
mientras la categoría y es enviada de F2 al campo de mapeo a través de los pesos asociativos 
Wab. La capa Fab genera un patrón binario de actividad yab = (y1ab, y2ab, … , yLab), en el cual el 
nodo K más activo produce la predicción de clase K = k(J). Si el nodo K constituye una 
predicción de clase incorrecta, una señal de seguimiento de la semejanza aumenta el parámetro 
de vigilancia ρ, justo lo suficiente para inducir otra búsqueda entre los nodos de F2, en el paso 3. 
Esta búsqueda continúa hasta que es activado un nodo libre de F2 (y el aprendizaje sigue con el 
paso 5), o hasta que se active un nodo J que haya aprendido previamente la predicción correcta. 
 
5. Aprendizaje. El aprendizaje de la entrada a involucra la actualización del vector de pesos wj, y 
si J corresponde a un nodo recientemente comprometido, la creación de un vínculo asociativo 
con Fab. El vector de pesos del nodo J de F2 es actualizado de acuerdo a 
 
w’J = β(A   wj) + (1- β)wj    (3) 
donde β es la tasa de aprendizaje. El algoritmo puede configurarse para aprendizaje lento con 0 
< β < 1, o para aprendizaje rápido con β = 1. Con codificación complementaria y aprendizaje 
rápido, fuzzy ART representa a una categoría j como un híper rectángulo Rj m-dimensional, que 
tiene el tamaño justo para contener el cluster del patrón de entrenamiento a, al que ha sido 
asignado. Para aprender una nueva asociación entre el nodo J de F2 y el nodo K de Fab (k(J) = 
K), se hace wJkab = 1 para k = K, donde K es la clase deseada para a, o cero para k ≠ K. Una vez 
que los pesos W han convergido para el conjunto de patrones de entrenamiento, ARTMAP 
puede predecir la clase para un patrón de entrada cualquiera, ejecutando los pasos 2, 3, y 4 sin 
ninguna vigilancia, o prueba de semejanza.  
 
 
2.2. Clustering 
 
El objetivo del módulo de clustering en la arquitectura de reconocimiento ilustrada en la figura 1, es 
agrupar en tracks los patrones de la cadena espacial. Las señales entrantes contienen información 
acerca del estado del emisor, que puede cambiar con el tiempo. Es deseable que este clustering 
online tenga la capacidad de inicializar nuevos tracks cada vez que es detectado un emisor nuevo,  
de ajustar los tracks en respuesta a los cambios de los emisores y de eliminar tracks cuando los 
emisores desaparecen o dejan de transmitir. 
Varias técnicas pueden realizar clustering secuencial online. Por ejemplo los  algoritmos de 
cuantificación adaptativa de vectores (Gray, 1984) pueden funcionar bien cuando el valor de los 
parámetros varía lentamente. Si los parámetros exhiben variaciones rápidas lineales o no lineales, se 
requieren algoritmos más sofisticados.  
En este caso el clustering online de los parámetros DOA (Direction Of Arrival) y PA (Pulse 
Amplitud), es implementado combinando el método del vecino más próximo con filtrado Kalman 
lineal. Un filtro Kalman es un algoritmo de optimización recursivo. En la figura 1 se muestra una 
descomposición del proceso recursivo requerido para el clustering online. Las funciones básicas son 
asociación de datos, mantenimiento de tracks y filtrado y predicción. 
2.2.1. Asociación de datos  
Cuando llega un patrón entrante b (b = {DOA, PA}) de la cadena espacial se intenta asociar 
inicialmente con algún track existente. La asociación implica computar una semejanza sh(b) entre la 
entrada b y la próxima posición predicha de cada track (h = 1, 2, … , R) en el entorno espacial. 
Supongamos que las posiciones de los tracks son establecidas en forma independiente e idéntica, 
donde cada track lleva asociada una distribución gaussiana. Entonces la semejanza puede tomarse 
como una probabilidad: 
 
  (4) 
Donde M es el número de dimensiones en el entorno espacial, y  y  son respectivamente la 
posición predicha y la matriz de covarianza para el track h. Suponiendo que todos los tracks tienen 
igual probabilidad a priori, el track h = H que maximiza la ecuación (4) es asociado con el patrón b 
 
H = argmaxh{sh(b) : h = 1, 2, … , R}  (5) 
 
El filtrado Kalman es utilizado para predecir la próxima posición  y la matriz de covarianza   
de cada track h. Recordemos que el clustering es obviado cuando b corresponde a una PS que ha 
sido asignada a un track previamente establecido por el separador por TOA. En ese caso b retiene 
su track y no se realizan la asociación de datos ni el mantenimiento de track. El filtrado y predicción 
Kalman sin embargo se sigue realizando para sustentar una descripción coherente de todos los 
emisores activos del medio. 
 
2.2.2. Mantenimiento de tracks 
Una vez asociado con el patrón b, el track H atraviesa dos pruebas. En la primera, la semejanza 
sh(b) se compara contra un umbral δc que regula la creación de nuevos tracks, δc  [0, 1]. Si sh(b) ≥ 
δc la prueba se considera superada. En la segunda prueba se computa el promedio acumulativo de 
los valores de semejanza SH: 
 
                                     (6) 
Donde QH es el número de patrones a los cuales se les asignó el track H. SH es comparado contra 
otro umbral δd que regula la calidad global de los tracks existentes, δd  [δc, 1]. Si SH ≥ δd la prueba 
se considera superada. Si el track H pasa ambas pruebas, es asignado al patrón b.  
Si cualquiera de las dos pruebas falla, un nuevo track es iniciado para b. Cuando un nuevo track H 
es iniciado, sh(b) = 1,  es igualado a b y  es igualado a σ2 IM, donde IM es la matriz identidad, y  
σ = (σ1, σ2, … , σM) representa la resolución de la medición de los parámetros espaciales. Además, 
si la segunda prueba falla (es decir SH < δd), el track H previamente establecido es eliminado. 
Después de la asignación de b a un track existente, o recientemente iniciado, cualquier otro track 
que no haya sido asignado a un patrón de entrada, por un período de tiempo mayor a un parámetro τ 
> 0, es eliminado. Es decir que un track es eliminado si: 
 
TOA(b) – TOAh > τ    (7) 
 
Donde TOAh es el tiempo en el cual el track h fue asignado por última vez a una entrada. Borrar 
tracks libera recursos y reduce las probabilidades de futuras asignaciones erróneas. El número de 
track H es la salida del proceso de mantenimiento de tracks. 
Un track de alta calidad es aquel al cual se le asignaron un gran número de pulsos transmitidos por 
el mismo emisor. Para asegurar tracks de alta calidad, nuevos tracks se inician rápidamente 
estableciendo δc cerca de 1, a la vez que los tracks de baja calidad son eliminados más lentamente (a 
medida que SH declina progresivamente). Esto reduce la ambigüedad durante la asignación de 
tracks. 
 
2.2.3. Filtrado y predicción Kalman 
El filtrado y predicción se implementa con un banco de filtros Kalman estándar, uno por track. Cada 
track h es asociado con un filtro Kalman y representado por una distribución Gaussiana unimodal. 
Después de la asignación del track H a b, el filtro de H es empleado para predecir la próxima 
posición y la matriz de covarianza. 
2.3. Fusión de la información específica y espacial 
 
La fusión de la información específica y espacial es implementada por medio de campos idénticos 
de acumulación de actividad F1e, F2e, … , FRe, donde cada campo Fhe está conectado a un track h, y 
replica el campo de salida de la red neuronal, es decir que contiene L nodos, uno por cada tipo de 
radar. Los nodos de salida de la red neuronal están conectados a sus respectivos nodos en todos los 
campos Fhe, h = 1, 2, … , R. Cada campo Fhe incorpora una memoria de corto plazo capaz de 
acumular sus patrones de entrada. La memoria de Fhe es caracterizada por un patrón de acumulación 
The = (Th1e, Th2e, … , ThLe). 
Tras la inicialización de un track h, The se iguala a 0. Cuando el track h = H se asigna a un patrón b, 
FHe se activa. El patrón de actividad yab de salida del clasificador se acumula en FHe de acuerdo a: 
 
(THe)’ = THe + yab    (8) 
 
La acumulación de patrones de actividad en Fhe continúa hasta que el track h es eliminado. Para una 
PS dada de entrada, el patrón de actividad ye de salida del módulo de acumulación es igual a THe. El 
tipo de radar se predice como: 
Ke = argmaxke{             (9) 
Además de la predicción discreta, los campos de acumulación de actividad pueden ser usados para 
alimentar una tabla de emisores. Los campos también pueden describir múltiples tipos de radar que 
comparten las mismas características espaciales (misma posición geográfica), lo cual ayuda a 
vincular los emisores con las plataformas que los transportan. 
La acumulación secuencial de actividad mejora la tasa de clasificación global del sistema de 
reconocimiento, debido a que la predicción acumulada Ke es tolerante a los errores cometidos por la 
red neuronal (predicción K). El concepto de predecir clases desde múltiples “vistas” de un emisor, 
que son acumuladas en el tiempo, ha sido exitosamente desarrollado en varias arquitecturas 
neuronales (Granger, E., Rubin, M. A.,Grossberg, S., & Lavoie, P. 2000), (Baloch, A. A., & 
Waxman, A. M., 1991). La efectividad de la acumulación de actividad depende de la calidad de los 
tracks computados. 
2.4. Simulaciones comparativas 
 
La arquitectura propuesta fue comparada mediante simulaciones por computadora con los 
clasificadores kNN y RBF para referencia paramétrica y no paramétrica respectivamente. Previo a 
cada simulación, los datos de los pulsos radar fueron particionados en dos subconjuntos de 
entrenamiento y prueba. El 50% de la información de cada tipo de radar fue seleccionado al azar 
para formar el subconjunto de entrenamiento. Luego, los vectores de entrenamiento a, junto con la 
etiqueta del tipo de radar t, fueron presentados repetidamente hasta la convergencia de la red. El 
mismo orden aleatorio fue usado en todas las presentaciones. La convergencia se alcanzaba cuando 
la suma cuadrática del cambio fraccional del vector de pesos W era menor que 0.001, para dos 
ciclos sucesivos. Un ciclo se define como la presentación de todo el subconjunto de entrenamiento 
al clasificador, por orden de TOA. El clasificador RBF usado en esta comparación selecciona 
subconjuntos de patrones de entrenamiento, uno por uno para codificar capas ocultas (Chen, S., 
Cowan, C. F. N., & Grant, P. M., 1991). En este caso la convergencia se alcanzaba cuando la suma 
cuadrática de los errores entre la salida real y la deseada caía por debajo de 0.01. Después de la 
convergencia, el subconjunto de prueba era presentado al clasificador ya entrenado, para probar la 
predicción. 
La performance de cada clasificador fue evaluada en términos de cantidad de recursos consumidos 
y precisión predictiva. La cantidad de recursos asignados durante el entrenamiento se mide de 3 
maneras. La compresión se refiere a la relación promedio de patrones de entrenamiento a nodos 
comprometidos en la capa F2. La memoria es el número de registros normalizados necesarios para 
almacenar el conjunto de vectores de pesos, siendo un registro normalizado un conjunto de bits 
suficientes para almacenar los valores reales del clasificador, como ai, wji, ρ, etc. Tiempo de 
convergencia es el número de ciclos requeridos para que el clasificador converja.  La precisión 
predictiva sobre el subconjunto de prueba se midió usando la tasa de clasificación, o sea la relación 
de patrones correctamente clasificados sobre el total de patrones de prueba. 
La tabla 1 contiene el promedio de 20 simulaciones. Los parámetros de la red fueron elegidos por 
prueba y error para lograr la mejor tasa de clasificación, con la menor memoria y tiempo de 
convergencia del entrenamiento. Los resultados indican que la red fuzzy ARTMAP logró 
consistentemente una buena tasa de clasificación promedio, comparable con las obtenidas por los 
clasificadores kNN y RBF. Las arquitecturas ARTMAP alcanzan la misma tasa de clasificación con 
mayor compresión (menos memoria física para almacenar los vectores) y menos ciclos de 
entrenamiento para la convergencia. 
 
Criterio de evaluación 
Precisión Recursos Clasificador 
Tasa de 
clasificación 
Compresión Memoria T. de convergencia 
k-Nearest-Neighbor 
(k=1, dEuclídea) 
99,53% 1 80340 N/A 
RBF 
(Spread del kernel = 0.05) 
99,57% 4.2 6370 2125 
Fuzzy ARTMAP 
(ε=10-4, α=.001, β=1, =0) 
99,45% 220 733 3.6 
Tabla 1. Resultados de la comparación. 
 
También se realizaron ensayos con datos de pulsos faltantes y etiquetas de clase faltantes durante el 
entrenamiento y durante la prueba, todos con resultados muy aceptables.  
Existen varias extensiones del algoritmo básico fuzzy ARTMAP que aportan sustanciales mejoras 
al rendimiento. Entre estas cabe mencionar: ARTMAP-IVS estrategia del vector indicador 
(Granger, E., Rubin, M. A., Grossberg, S., & Lavoie, P., 2000) para el manejo de datos faltantes, 
ARTMAP-FD discriminación de familiaridad (Granger, E., Grossberg, S., Rubin, M. A., & 
Streilein, W. W., 1999) para la detección de pulsos de clases desconocidas, ARTMAP-MT- 
seguimiento negativo de la semejanza para mejorar la convergencia y evitar la proliferación de 
categorías y ARTMAP-LUC aprendizaje de clases desconocidas para continuar ajustando los pesos 
durante la fase de operación. 
3. CONCLUSIONES 
 
Se ha evaluado una arquitectura de ESM alternativa para el reconocimiento e identificación de 
emisiones de radar. Esta arquitectura combina un clasificador basado en una red neuronal, un 
algoritmo de clustering online y un módulo de acumulación de actividad. Una vez entrenada con 
muestras tomadas de campo, la red neuronal clasifica y predice el tipo de radar de los pulsos 
interceptados, basándose en los parámetros específicos de tipo. A su vez, el algoritmo de clustering 
separa los pulsos de cada emisor, basándose en los parámetros espaciales. El módulo de 
acumulación de actividad permite fusionar las respuestas del clasificador con las estimaciones del 
algoritmo de clustering, y de esta manera predecir la clase del emisor más probable. La 
implementación particular del sistema consiste en una variante de la red fuzzy ARTMAP para 
clasificación, y el método del vecino más próximo junto con un banco de filtros Kalman para 
clustering online. 
Las simulaciones demostraron que la red fuzzy ARTMAP obtuvo consistentemente un alto nivel de 
precisión y compresión, aún con una cantidad de datos de entrenamiento muy limitada. Comparada 
con los clasificadores de referencia RBF y kNN, esta implementación presenta una tasa de 
clasificación semejante, requiriendo menor cantidad de recursos (menor tiempo de convergencia y 
menos memoria para almacenar los prototipos).  
Los resultados obtenidos son promisorios para abordar aplicaciones de sistemas ESM autónomos, 
que deban enfrentarse a datos de emisores complejos, incompletos y superpuestos. 
 
 
4.
