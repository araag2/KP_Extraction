Arquitectura para un Sistema Tutor Inteligente basado en Competencias STI C
﻿ Un Sistema Tutor Iteligente (STI) es una aplicación cuyo objetivo se 
centra en la enseñanza personalizada y su principal característica es la 
adaptación dinámica de la instrucción de acuerdo al perfil y actividad del 
alumno, para lo cual incorpora técnicas de inteligencia artificial (IA). La 
arquitectura general de un STI define sus componentes, la manera en que se 
estructuran e interaccionan dichos componentes depende en gran medida del 
modelo pedagógico de referencia utilizado por el diseñador.  
En STI de dominios genéricos ésta estructuración y el modelo pedagógico 
elegido puede ocasionar problemas de comprensión del modelo y problemas de 
implementación. Nuestro trabajo intenta solventar estos problemas proponiendo 
una arquitectura STI derivada del modelo pedagógico Enseñanza Basada en 
Competencia (EBC). Planteamos innovaciones en la representación del modelo 
de dominio, modelo del alumno y el proceso de diagnóstico acorde con la EBC. 
Palabras claves: Sistema Tutor Inteligente, Educación Basada en 
Competencias, Simulación de la arquitectura STI. 
Abstract. An Intelligent Tutor Systems (ITS) is an application which is aimed 
to a personalized tuition and its main characteristic is the dynamic adaptation of 
the instruction according to the students activity and profile, therefore it adds 
techniques of artificial intelligence (AI). The general architecture of the ITS 
defines its components. The way that they structure and interact those 
components depend mainly on the pedagogic model of reference used by the 
designer. 
On ITS of generics domains this structuration and the chosen pedagogic model 
may cause understanding troubles of the model and implement. 
Our task tries to settle these troubles suggesting an architecture ITS derived 
from the pedagogic model Competency-Based Education (CBE). 
We set out innovations on the model representation of domain, model of the 
student and the diagnostics process according with CBE. 
Keywords: Intelligent Tutor Systems, Competency-Based Education, 
Simulation of ITS architecture. 
 
CACIC 2010 - XVI CONGRESO ARGENTINO DE CIENCIAS DE LA COMPUTACIÓN                                                 21
1 Introducción 
Un STI utiliza técnicas basadas en la inteligencia artificial (IA), principalmente 
para representar el conocimiento, y dirigir una estrategia de enseñanza capaz de 
comportarse como un experto, tanto en el dominio de conocimiento que enseña como 
en el dominio pedagógico, donde puede diagnosticar la situación en la que se 
encuentra el estudiante. De esta forma puede ofrecer una acción o solución que le 
permita progresar en su aprendizaje [1]. 
Un STI conjuga una propuesta formativa sobre un determinado dominio de 
conocimiento que podrá ser una asignatura, curso, perfil profesional, etc., junto con 
unos criterios pedagógicos [2]. 
Los STI pueden desarrollarse en un dominio específico o en uno genérico. En el 
primer caso el sistema asume criterios pedagógicos adecuados al dominio y que 
utilizará en los modelos y procesos educativos que cubren las necesidades formativas. 
Estos STI tienen un uso limitado a un único dominio. Sin embargo, los STI genéricos 
debido a su visión multi-dominio deben ser capaces de adaptar sus componentes a las 
especificaciones generales para abordar varios dominios de estudio y facilitar la 
adquisición de conocimiento y su uso al alumno.  
Vemos que los STI genéricos aunque más flexibles son más complejos, lo que 
origina la aparición de problemas, tales como: 
a) Comprensión del modelo: es difícil construir un sistema que integre distintos 
marcos teóricos, sentido y criterios de evaluación, representación del conocimiento, 
heurísticas ad hoc. 
b) Implementación: la interpretación de parámetros, configuración de modelo no 
es simple. 
 En este trabajo se propone una nueva arquitectura de STI cuyo modelo 
pedagógico está basado en la Enseñanza Basada en Competencias (EBC). Nos 
centramos en la representación del modelo de dominio y del modelo del alumno, así 
como en el proceso de diagnóstico acorde con la EBC. Una arquitectura de este tipo 
proveerá al docente de una plataforma que facilite la implementación de una 
propuesta formativa más transparente desde la EBC al Sistema Tutor Inteligente 
Basado en Competencias (STI-C).  
El trabajo se organiza como sigue, en la sección 2 caracterizamos la arquitectura 
de los STI. En la sección 3 abordamos los principios de la enseñanza basada en 
competencias (EBC). En la sección 4 presentamos el modelo de STI para el desarrollo 
de competencias (STI-C).  En la Sección 5 exponemos el proceso de diagnóstico. En 
la sección 6 se presenta un estudio evaluativo de la propuesta. Finalmente exponemos 
conclusiones y futuras líneas de trabajo de la propuesta realizada. 
2 Caracterización de un STI 
Un STI es un sistema adaptativo y dinámico para la enseñanza personalizada en 
función de las características y comportamiento del alumno. En esta sección nos 
centramos en la arquitectura de componentes de un STI para la representación del 
conocimiento y cómo se estructura dicho conocimiento en el sistema. 
CACIC 2010 - XVI CONGRESO ARGENTINO DE CIENCIAS DE LA COMPUTACIÓN                                                 22
2.1 Arquitectura de un STI 
La arquitectura general de un STI está estructurada en cuatro componentes [3], 
[4]: a) modelo de dominio, b) modelo del alumno, c) modelo instruccional y d) 
modelo de interfaz Cada uno de estos componentes asume distintas funciones 
interactuando entre si. Basados en [5] describimos los componentes de interés para 
nuestra investigación: 
- Modelo del dominio: Corresponde a la respuesta sobre el qué se enseña. 
Contiene el conocimiento sobre la materia que debe ser aprendida. El primer paso en 
la implementación de un STI, es la representación explícita por parte del experto del 
conocimiento existente sobre el dominio. Un modelo del dominio será más potente 
cuanto más conocimiento tenga [6].  
- Modelo del alumno: Representa el a quién se enseña, lo que el alumno conoce y 
lo que no conoce del dominio. Un gran número de STI infieren este modelo a partir de 
los conocimientos y carencias del alumno sobre el modelo del dominio, y a partir de 
esta información, que generalmente es imprecisa [7] adaptan el proceso de instrucción 
a sus necesidades. La estructura que almacena el estado de conocimiento del alumno 
es propiamente su modelo, mientras que el proceso de razonamiento que actualiza este 
modelo se denomina diagnóstico del alumno. 
- Modelo de instrucción: Corresponde al cómo se enseña. Constituye por tanto, 
las estrategias de enseñanza o estrategias tutoriales.  
- Interfaz: A través de ella se lleva a cabo la interacción hombre-máquina.  
Un STI conjuga una propuesta formativa orientada por unos criterios 
pedagógicos. Estos criterios condicionan el modo de representación del conocimiento 
en el modelo de dominio, modelo del alumno y su proceso de actualización.  
La mayoría de STI representan el conocimiento como una red de estructura 
jerárquica en donde los nodos son conceptos y los conceptos relacionados están 
unidos mediante arcos. Genéricamente, esta estructura puede asumir la forma de red 
semántica, mapa conceptual o red bayesiana, la relación entre los nodos pueden ser de 
diversa naturaleza, de agregación, parte-de, etc. [8].  
3 EBC - Enseñanza Basada en Competencias 
La EBC es un modelo curricular emergente que busca dar repuesta a las 
demandas del contexto, implica articular tales demandas con el desarrollo de 
competencias, que posibilite al alumno desenvolverse en un mundo complejo y en 
permanente transformación [9]. Las competencias constituyen un saber y saber hacer 
complejo que integran conocimientos conceptuales, procedimentales y actitudinales. 
El Diseño Curricular Basado en Competencias (DCBC) es el proceso que permite 
cristalizar la EBC en una propuesta formativa en función de normas de competencias. 
La norma de competencia contiene una serie de descriptores que reflejan las buenas 
prácticas profesionales, que orientarán las capacidades que desarrollará el alumno.  
CACIC 2010 - XVI CONGRESO ARGENTINO DE CIENCIAS DE LA COMPUTACIÓN                                                 23
 
MDCo  
 
Descriptores
evd  evp  evc
Banco de 
 Items 
 
MAC 
Evaluador Adaptador Planificador 
Modelo de Presentación 
 
MDCu 
 
 
 
Banco  de 
Esp. de 
Test 
3.1 Descriptores del DCBC 
Unidad de competencia (uc): función que describe el conjunto de las actividades 
diferenciadas que serán cumplidas desde el rol o perfil seleccionado. 
Elemento de competencia (ec): desagregación de la función principal que 
pretende especificar algunas de las actividades claves o la actividad crítica de la 
función. Una función (uc), según su complejidad o su variedad, puede especificarse 
en uno o en varios elementos de competencia (ec). 
Evidencias de desempeño (evd): descriptor de los signos que sirven para controlar 
que un determinado proceso está siendo realizado de acuerdo a "buenas prácticas". 
Evidencias de producto (evp): descriptor de los signos de evidencia tangibles en 
el nivel de los resultados o del producto, cuando se ha actuado a partir de consagrar 
las "buenas prácticas". 
Evidencias de conocimiento (evc): descriptor del conocimiento científico - 
tecnológico que permite al ejecutor comprender, reflexionar y justificar los 
desempeños competentes. 
4  Una Arquitectura para un STI-C  
En esta sección presentamos la estructura del Sistema Tutor Inteligente basado en 
Competencias (STI-C). Nos centramos en la representación del conocimiento 
(competencias en nuestra propuesta) del modelo de dominio y del modelo del alumno, 
así como en el proceso de diagnóstico que lo actualiza. En la figura 2 se esquematiza 
la arquitectura general propuesta.   
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
CACIC 2010 - XVI CONGRESO ARGENTINO DE CIENCIAS DE LA COMPUTACIÓN                                                 24
Fig. 2.  Arquitectura STI-C  
De forma general describimos los componentes de la arquitectura STI-C como 
sigue: 
- El modelo de dominio: Contiene el perfil de competencias definidos en un 
dominio de conocimiento. Se compone de cuatro componentes:  
a) Un modelo de dominio de competencia (MDCo), derivado del mapa funcional 
de las normas de competencias, se representa mediante una red semántica que incluye 
unidades de competencia, elementos de competencia (ec), descriptores y las 
relaciones entre estos. b) Un modelo de dominio curricular (MDCu) organizado en 
módulos didácticos Mi que elabora el profesor en base al DCBC sobre el MDCo. c) 
Un conjunto de descriptores que incluyen las evp, evd y evc, cada uno tiene asociado 
un banco de ítems. d) Un banco de especificaciones de test asociados a los eci, 
definidos por el docente.  
- El modelo del alumno, en nuestro caso modelo del alumno de competencia 
(MAC): Se encarga de almacenar la información referente al alumno y su 
representación dentro del modelo de diagnóstico.  
A continuación describimos en mayor detalle los elementos más importantes de 
los modelos anteriores. 
4.1 Modelo de dominio  
Una novedad fundamental de nuestra propuesta de arquitectura STI-C consiste en 
cómo se estructura el modelo de dominio, a saber: el MDCu reorganiza el MDCo 
siguiendo la lógica de los procesos de enseñanza y aprendizaje. 
El proceso formativo apunta al desarrollo de las capacidades que permitan 
desempeños competentes del perfil en diversidad de situaciones. Cada capacidad a 
desarrollar se infiere del análisis del mapa funcional y agrega (siguiendo la lógica del 
proceso formativo) uno o más elementos de competencias (ec). 
El MDCu tendrá una estructura modular, donde cada módulo didáctico (Mi) es la 
unidad que permite estructurar los objetivos, los contenidos y las actividades en torno 
a un problema de la práctica profesional y de las capacidades que se pretenden 
desarrollar, las cuales, son inferidas a partir de los elementos de competencia ec. En la 
figura 3 se esquematiza el MDCu. 
El MDCu se puede construir en forma simple y casi transparente desde el DCBC 
de una propuesta formativa a implementar, lo cual simplifica la comprensión por parte 
del profesor al momento de su implementación. 
4.2 Modelo del alumno basado en competencias - MAC 
El MAC almacena la información referente al alumno, para ello utiliza un modelo 
de superposición sobre el MDCu, esto permite acreditar las competencias asociadas al 
módulo didáctico. 
 
 
CACIC 2010 - XVI CONGRESO ARGENTINO DE CIENCIAS DE LA COMPUTACIÓN                                                 25
CMP 
M1 
ec1
evc evp evd
i i
i
ecn
evc evp evd
i i
i
Mn 
ec1
evc evp evd
i i
i
ecn
evc evp evd
i i
i
 
Fig. 3.  Estructura del módulo didáctico. CMP: Perfil de competencias, eci: Elemento 
de competencia iesimo, Mi: Módulo iesimo, i: Banco de items asociado a las evc, evp 
y evd.  
Cada nodo de la red MAC relativos a las evc, evp y evd almacena una 
distribución de probabilidades discreta )|(
→
ii uP θ  correspondiente al nivel de 
conocimiento técnico-científico (θi)   del alumno sobre el descriptor dado un patrón de 
respuesta )(
→
iu , la cual se infiere de las respuestas a los ítems  que el alumno  resuelve 
y componen un test Ts. Tal como se indicó anteriormente en el momento de definir los 
componentes del MDCu, se determinan los elementos intervinientes en el diagnóstico, 
a saber: a) el banco de ítems asociado a evc, evp y evd de cada ec, b) los Test 
asociados a los ec, c) especificaciones de Test donde se determinan lo métodos para 
selección de ítem, criterios de finalización, etc. 
Cada nodo ec almacena una distribución de probabilidades correspondiente al 
conocimiento técnico-científico )|(
→
ievuP θ  del alumno sobre el mismo y estará en 
función de los evci, evpi y evdi que agrega, este valor se obtendrá promediando los 
valores de las distribuciones de sus agregados.  
Por cada ítem respondido el algoritmo actualizará las )|(
→
ii uP θ  de  evci, evpi  y 
evdi y verificará si se cumple el criterio de finalización, en caso afirmativo se 
calculará y actualizará la distribución )|(
→
ievuP θ  del eci,, de no cumplirse el criterio 
CACIC 2010 - XVI CONGRESO ARGENTINO DE CIENCIAS DE LA COMPUTACIÓN                                                 26
de finalización, se seleccionará el siguiente ítem (en base al criterio de selección de 
ítems establecido en las especificaciones de test) para mostrar en el test, repitiéndose 
el proceso hasta alcanzar el criterio de finalización. 
Los nodos de módulos didácticos Mi almacenan una distribución de 
probabilidades correspondiente al nivel de competencias del alumno sobre las 
capacidades abordadas en el módulo, esta se infiere promediando las distribuciones de 
de probabilidades de los elementos clave en la evaluación,  los ec asociados al Mi.   
El proceso de diagnóstico se expone en mayor detalle en la sección siguiente. 
5 Proceso de Diagnóstico 
Para el proceso del diagnóstico en el STI-C utilizamos una adaptación del Test 
Adaptativo Informatizado (TAI cognitivo) [5], esta propuesta utiliza un modelo de 
respuesta basado en la Teoría de Respuesta al Ítem (TRI) que tiene las siguientes 
características: discreto, no paramétrico y es capaz de evaluar ítems con múltiples 
respuestas. 
En este modelo de respuesta cada ítem tiene asociado una Curva Característica de 
Opción (CCO) de las cuáles se infieren sus Curvas Características de Respuesta 
(CCR) y Curvas Características de Ítem (CCI). Las CCO se determinan mediante un 
proceso de calibración basado en el algoritmo de Ramsay [12]. 
Durante la administración de un test, el conocimiento del alumno se estima cada 
vez que éste responde a un determinado ítem. La actualización de la distribución del 
conocimiento del alumno se lleva a cabo utilizando una adaptación del método 
bayesiano propuesto por Owen [13]. 
Nos interesa fundamentalmente la evaluación del tipo agregada que actualiza las 
distribuciones de conocimiento sobre evc, evp o evd de la siguiente manera: 
 
⎪⎪⎩
⎪⎪⎨
⎧
=
→
−
→
→→
−
→
→→
casootroenuuP
evdoevpevcevalúaQsiuPuuP
uuP
it
iiiitiuiit
it
i
),...,|(
,)|(),...,|(
),...,|(
11
11
1
θ
θθ
θ
r
 (1) 
Donde  ),...,|( 11
→
−
→
it uuP θ es la estimación de conocimiento a priori del alumno en 
tev ;  
 y )|( tiui uP i θ
→
r  la CCO para la opción del patrón de respuesta. 
Una vez actualizadas las distribuciones en los nodos evc, evp y evd del alumno, 
se puede estimar su nivel empleando las dos formas utilizadas en los TAI; esto es: 
• Esperanza a posterior (EAP), donde el valor correspondiente al nivel 
de conocimiento es la media (o valor esperado) de la distribución de 
probabilidades. Formalmente: 
CACIC 2010 - XVI CONGRESO ARGENTINO DE CIENCIAS DE LA COMPUTACIÓN                                                 27
)|())|((
1
0
→−
=
→ ==∑ ntk
k
nt ukkPuPEAP θθ  (2) 
• Máximo a posterior (MAP), donde el valor correspondiente al nivel 
de conocimiento es aquél con mayor probabilidad asignada, esto es, la moda 
de la distribución. Formalmente: 
)|())|((
0
→
≤≤
→ == nt
Kk
nt ukPmáxuPMAP θθ  (3) 
6 Estudio evaluativo del modelo 
En el presente trabajo nos centramos en la evaluación simulada de la arquitectura 
(Mcmillan  y Schumacher [12], Guzmán [5], Millán [8]).  
6.1 Evaluación simulada de la arquitectuta propuesta 
Para esta evaluación hemos realizado las siguientes simulaciones: 
a) Generación del MDCu: en base a una secuencia de dos números naturales 
como parámetros de entrada se organiza la estructura del MDCu. Así, si recibiera la 
secuencia a, b, se interpreta que el perfil de competencias tiene a módulos Mi, cada Mi 
tiene asociado b elementos de competencias (ec) y estos sus respectivos evc, evp y 
evd. De esta manera se construye la representación de la red semántica de 
competencias cuyo número de nodos sería igual a a+a*b+a*b*3+1. Conforme se 
crean los nodos se etiquetan con la siguiente codificación: 0 se le asigna al nodo raíz, 
a los Mi se le asignan consecutivamente valores de 1 hasta a, a cada Mi se le 
relacionan b elementos de competencias ec, cada ec se identifica con un código 
consistente en el número de Mi concatenado al número correspondiente de ec. 
Finalmente cada ec tiene asociado 3 nodos hojas codificados del 1 al 3 que 
corresponden a los evc, evp y ev. 
b) Banco de Ítems: una vez construido el MDCu, se genera el banco de ítems, 
cuyo número se define mediante un parámetro de entrada. En esta investigación 
hemos incorporado items de opción múltiple de 5 opciones, cada ítem generado se 
asigna consecutivamente (de forma balanceada) a uno de los nodos evc, evp o evd.  
A fin de realizar las simulaciones de test heurísticos para el proceso de 
calibración, por cada opción de los item se genera un  puntaje parcial en forma 
seudoaleatoria, este puntaje se utilizara durante la simulación de la calibración.   
Las CCO de los ítems se obtienen mediante la simulación del proceso de 
calibración. 
c) Simulación de Test Heurísticos: los test heurísticos simulados se utilizan en el 
proceso de calibración, el número de test a generar y los eci del Mi que serán 
evaluados por los test, se determina mediante parámetros de entrada.  
Para la generación de los test, por cada test se procede de la siguiente manera:  
- Por cada item del test se genera la opción seleccionada. 
CACIC 2010 - XVI CONGRESO ARGENTINO DE CIENCIAS DE LA COMPUTACIÓN                                                 28
- Los patrones de respuestas de los ítems asociados a los evc, evp y evd del ec 
evaluado se generan de manera seudoaleatoria. 
- Se puntúa según patrón de respuesta. 
- Se evalúa el test utilizando un criterio heurístico por puntos. 
d) Simulación de la Calibración de las CCO: obtenidos los resultados de los test 
heurísticos como se explica en el paso anterior, se procede a la calibración de las 
CCO de las opciones de los ítems que componen el test. El algoritmo de calibración 
es una adaptación del propuesto por Guzmán (2005) en base a Ramsay (2000). 
e) Alumnos Simulados: los alumnos simulados se generan en un número igual al 
parámetro de entrada correspondiente. A cada uno se le asigna un identificador 
numérico consecutivo a partir de uno. El comportamiento posterior de cada alumno en 
el test va a venir determinado por su modelo cognitivo real. Se trata de un modelo de 
superposición sobre los nodos evaluados en el test. El nivel de competencia inicial 
sobre los nodos evc, evp y evd lo determina el simulador a priori mediante una 
función seudoaletoria que sigue una distribución normal, los valores permitidos son 
aquellos que pertenecen al rango uno y el número de niveles de competencia 
definidos. Para calcular el nivel de competencia real del alumno, se lo somete a un 
test en el que se le administran todos los ítems (uno detrás de otro) que evalúan los 
evc, evp y evd. En este test se utilizan las CCO reales de los ítems, y el criterio de 
evaluación aplicado en este caso puede MAP o EAP. De esta forma, se obtiene como 
resultado el nivel de competencia real en el elemento de competencia ec que agrega 
los nodos evc, evp y evd correspondientes. Para el resto de los ec se aplica el mismo 
procedimiento de forma análoga. 
f) Administración simulada del TAI: tras determinar el modelo cognitivo real de 
cada alumno simulado, se procede a administrar el test bajo las condiciones indicadas 
en la simulación. El modo en el que el alumno simulado selecciona el patrón de 
respuesta para cada ítem se basa en la propuesta de Guzmán (2005). Una vez 
determinado el patrón de respuesta, se procede a inferir el nivel de conocimiento. 
Seguidamente, se vuelve a elegir el siguiente ítem, según el criterio de selección 
configurado en el test. Este proceso se repetirá hasta cumplir la condición de 
finalización del test. Finalmente, en función del propósito de la simulación y en base a 
los parámetros de entrada, se presenta diversa información que permite estudiar y 
analizar los resultados. En el contexto del trabajo las simulaciones se han repetidos un 
elevado número de veces y los resultados presentados son promedios de valores 
obtenidos. En la tabla 1 se exponen los parámeros utilizados en la simulaciones, el 
porcentaje de aciertos surge del número de veces que se ha inferido de forma correcta 
el  nivel de competencia de los alumnos reales (modelo cognitivo real).  
Tabla 1.  Valores resultantes del proceso de validación simulada de la arquitectura STI-C.  
Alumnos simulados Mi ec Tests Items % Aciertos 
1 30 96 50 
5 
5 50 
50 97 
1 30 98 100 
 5 
5 100 
50 97 
1 30 97 200 
5 
5 150 
50 98 
CACIC 2010 - XVI CONGRESO ARGENTINO DE CIENCIAS DE LA COMPUTACIÓN                                                 29
7 Conclusiones y trabajos futuros 
Los resultados obtenidos en las simulaciones muestran que la arquitectura 
propuesta para el modelo de dominio curricular MDCu,  modelo del alumno MAC  y 
su diagnóstico basado en TAI, pueden constituirse en una opción coherente que 
conjuga una arquitectura STI basada en los criterios pedagógicos de la EBC.  
En esta misma línea de trabajo  hemos sometido el modelo de arquitectura STI-C 
a criterios de expertos obteniendo resultados alentadores. 
Un estudio evaluativo complementario de nuestra propuesta orienta la siguiente 
línea futura de investigación: 
-Implementación piloto, validación y evaluación formativa y sumativa del 
modelo. 
8
