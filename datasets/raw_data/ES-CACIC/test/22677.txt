Mejorando el rendimiento y QoS en Wi Fi con Sintonización de Parámetros EDCA 802 11e
﻿ Las WLAN basadas en IEEE 802.11 se han vuelto las más 
populares. Corrientemente, la mayor parte del tráfico transportado por estas 
redes está compuesto por servicios tradicionales como web browsing, e-mail o 
transferencia de archivos. Sin embargo, las llamadas de voz sobre Internet 
(VoIP), y otros servicios de streaming o interactivos como video o juegos en 
tiempo real, tendrán un importante rol en las redes wireless multiservicio del 
futuro. En orden a satisfacer estos  requerimientos, la tecnología WLAN 
evoluciona en dos claras direcciones: i) experimentando maximizar la 
utilización del canal wireless con nuevas especificaciones PHY, y ii) mejorando 
los mecanismos de diferenciación de tráfico a nivel MAC. EDCA 802.11e 
provee diferenciación de tráfico, clasificándolos en diferentes Categorías de 
Acceso (ACs), donde cada una tiene sus propios parámetros MAC estáticos por 
defecto. Más recientemente, han surgido propuestas con el objeto de seleccionar 
dinámicamente  los parámetros MAC óptimos, que permiten mejores resultados 
de rendimiento, y simultáneamente el cumplimiento de consignas de QoS. En el 
trabajo se propone un algoritmo de sintonización, que llamaremos MTDA 
(Algoritmo de Diferenciación de Tráfico Múltiple) y que introduce importantes 
mejoras a los antecedentes. Se experimentó su funcionamiento por simulación 
con Redes de Petri, en escenarios más realistas, verificando su inicialización 
efectiva,  rápida convergencia, y la diferenciación eficiente de múltiples  
tráficos wireless.  El presente trabajo desarrolla sucesivamente los siguientes 
apartados:  1) Introducción, 2) Modelo y Escenarios de Simulación, 3)  
Algoritmo de Sintonización MTDA, 4) Ensayo Experimental del Algoritmo 
MTDA y 5) Conclusiones y aportes. 
 Palabras claves: Sintonización, EDCA,  Wireless 802.11,  
1   Introducción  
La provisión de QoS (Quality of Service) para las aplicaciones de capa superior es 
uno de los más grandes desafíos que una capa MAC wireless debería soportar. En 
particular, los enlaces wireless tienen características tales como altos niveles de 
pérdidas, ráfagas de pérdidas de tramas, alta latencia y jitter. Hay algunas formas de 
caracterizar la QoS a través de requerimientos estrictos que se expresan en términos 
de valores cuantitativos tales como velocidad de datos, pérdidas de rendimiento, 
límites de retardos y límites de jitter.  
 
1.1 802.11e: Soporte de QoS para WLANs 
 
En DCF (802.11 Distributed Coordination Function), solo se provee el servicio de 
mejor esfuerzo [1]. Las aplicaciones multimedia limitadas en tiempo (por ejemplo, 
voz sobre IP) requieren ciertas garantías de ancho de banda, retardo y jitter. El punto 
es que con DCF, todas las estaciones compiten por el canal con la misma prioridad. 
No hay mecanismo de diferenciación para proveer mejor servicio para el tráfico 
multimedia de tiempo real que para las aplicaciones de datos. Por otro lado, en DCF 
no se especifica ningún mecanismo de control de admisión. Cuando la carga de 
tráfico es muy alta, la performance puede degradarse considerablemente. 
Las limitaciones de QoS mencionadas arriba de DCF motivaron numerosos 
esfuerzos de investigación para mejorar la performance MAC, que se estandarizaron 
con la incorporación de EDCA 802.11e [1]. Con este estándar se propuso una nueva 
función de capa MAC llamada la función de coordinación hibrida (HCF). HCF usa un 
método de acceso al canal basado en la contención, también llamado acceso al canal 
distribuido realzado (EDCA), que opera concurrentemente con un método de acceso 
al canal controlado HCF basado en polling (HCCA). El AP y aquellas STAs que 
implementar las facilidades de QoS son llamadas AP con QoS realzadas (QAP) y 
STAs con QoS realzadas (QSTAs), respectivamente. 
1.2 EDCA de 802.11e 
Antes de entrar en la capa MAC, cada paquete de datos recibido desde la capa 
superior tiene asignado un valor de prioridad de usuario específico. En la capa MAC, 
EDCA introduce cuatro diferentes colas first-in first-out (FIFO), llamadas ACs. Cada 
paquete de datos desde la capa superior debería estar mapeado en una AC 
correspondiente. Diferentes clases de aplicaciones (por ejemplo, tráfico background, 
tráfico de mejor esfuerzo (best effort), tráfico de video y tráfico de voz) pueden estar 
dirigidos a diferentes ACs. Cada AC se comporta como una simple entidad DCF 
compitiendo con sus propios parámetros de contención (CWmin[AC], CWmax[AC], 
AIFS[AC] y TXOPLimit[AC]), los cuales son anunciados por el QAP periódicamente 
en tramas beacon. Básicamente, a más pequeño los valores de CWmin[AC], 
CWmax[AC], y AIFS[AC], más cortos los retardos de acceso de canal para el 
correspondiente AC, y más alta la prioridad para acceder al medio (Fig. 1). 
En EDCA se introduce un nuevo tipo de IFS, el IFS de arbitrario (arbitrary IFSAIFS), en lugar de DIFS en DCF. Cada AIFS tiene un intervalo IFS con longitudes de 
arbitrio definidas como: 
AIFS[AC] = SIFS + AIFSN[AC] × slot time, 
donde  AIFSN[AC]  es el número IFS de arbitrio.  
También, está previsto un mecanismo de control de admisión, basado en 
contención, en 802.11e que necesitan soportar tanto el QAP y las QSTAs.  
 
 
Fig. 1 Relaciones de temporización en DCF y EDCA (Fuente: IEEE Std. 802.11 2007) 
2   Modelo y Escenarios de Simulación 
Con el objeto de evaluar experimentalmente el mecanismo EDCA 802.11e, se adoptó 
un modelo de simulación implementado en Redes de Actividades Estocásticas 
Jerárquicas (HSAN) [2],  que se ejecuta sobre el simulador Möbius [3]. Las HSAN 
son una versión extendida de las Redes de Petri. Este modelo comprende una 
implementación precisa y detallada de una QSTA con la función EDCA asociada, 
considerando tanto su perspectiva funcional y temporal.  
Además, y desde el punto de vista de la modelación, el modelo también exhibe 
una importante flexibilidad en los siguientes aspectos: i) Facilidad para incluir 
modificaciones o refinamientos, ii) Pueden obtenerse un gran número de medidas de 
performance de diferentes tipos, desde el mismo modelo sin modificaciones 
estructurales, iii) El modelo puede ser usado como una estructura base para construir 
modelos más complejos y de más alto nivel. Justamente, una ventaja importante, para 
evitar el proceso de construir un modelo de red para cada uno de los escenarios de 
simulación, es que el modelo adoptado representa una simple estación que soporta 
QoS. Este modelo puede replicarse, para obtener el escenario de simulación 
requerido. El número de replicas se parametriza por el usuario y está totalmente 
automatizado por la herramienta de modelación Möbius.  
 
2.1   Escenarios de Experimentación  
 
Se utilizaron versiones de este modelo basado en HSANs, para la evaluación de 
performance del protocolo IEEE 802.11e en diferentes escenarios. Cada QSTA se 
configuró para transmitir uno o todos de los siguientes tipos de flujos de tráfico: un 
flujo de voz como un stream de modulación de pulsos codificados (pulse code 
modulated-PCM), con periodos fijos de 20 ms, un flujo de video con distribución 
Poisson, y un flujo de tráfico de mejor esfuerzo con distribución Pareto con factor de 
forma 1.9. Las características se resumen en la Tabla 1. 
El primer escenario de evaluación considera la carga de tráfico generada por 
estaciones operando en la misma banda de frecuencia, variando la carga al 
incrementar el número de estaciones activas desde 1 a 25, como indica la Fig. 2.  
 
 Voz Video Mejor  
Esfuerzo 
Paquete 160 bytes 1280 bytes 1500 bytes 
Velocidades 64 Kbps 640 Kbps 1024 Kbps 
803.11a 36 Mbps 
Tabla 1 Tamaños de paquetes y rates de los tráficos de voz, video y mejor esfuerzo 
 
 
Fig. 2 Escenario 1 con estaciones que transmiten todos los tráficos  
(Fuente: Gráfico obtenido en el Simulador Möbius) 
 
El segundo escenario considera la carga de tráfico generada por estaciones 
variando la carga al incrementar el número de estaciones activas de 5 a 50, pero 
manteniendo la proporción relativa de estaciones que transmiten uno  de los tipos de 
tráficos en la red, como indica la Fig. 3. Se planteó la siguiente relación entre los 
tráficos: 60 % de estaciones de voz, 20 % de video y 20 % de mejor esfuerzo.  
 
 
Fig. 3 Escenario 2 con estaciones que transmiten uno de los tráficos 
(Fuente: Gráfico obtenido en el Simulador Möbius)  
 
Todas las simulaciones experimentales se obtuvieron con un intervalo de 
confianza del 95% y una precisión del 5 %. Las métricas de performance analizadas 
fueron: rendimiento absoluto, rendimiento relativo, pérdida de paquetes, retardo de 
cola promedio y tamaño de cola promedio. Ambos escenarios incluyen un modelo de 
error EMI que introduce una tasa de error de 1.10-4 BER. 
3 Algoritmo de Sintonización MTDA 
3.1 Aspectos Generales 
Un algoritmo de sintonización de parámetros MAC es la función f(.) que selecciona 
los parámetros MAC futuros dados los valores actuales y el estado corriente de la 
WLAN. 
El objetivo del trabajo fue proponer y experimentar por simulación un algoritmo 
de sintonización, que llamamos MTDA (Algoritmo de Diferenciación de Tráfico 
Múltiple). Se trata de un algoritmo adaptativo, basado en modelos, centralizado, 
iterativo e incluye todos los parámetros MAC. Introduce novedades, como su 
funcionamiento en escenarios más realistas, incluye todos los parámetros EDCA, 
posee una inicialización efectiva y de rápida convergencia, ampliando la 
diferenciación eficiente de múltiples  tráficos wireless (voz, video y de mejor esfuerzo 
con distribución Pareto).  La sintonización de los parámetros EDCA de todos los tipos 
de tráfico, puede producirse en los instantes de llegada o partida de un requerimiento. 
Se planteó como objetivo que el algoritmo permitiera: a) una diferenciación de 
tráfico dinámica que incremente la prioridad de los flujos de tiempo real, 
manteniendo niveles de rendimiento o de pérdidas establecidos, b) Maximizar el 
rendimiento agregado obtenido en la red para los diferentes flujos, incluyendo los 
otros no prioritarios elásticos, c) Asegurar la adaptación a los cambios de la WLAN 
encontrando la asignación más apropiada de los recursos del canal en cada situación.  
El diseño del algoritmo de sintonización EDCA tuvo especialmente en cuenta los 
valores de inicialización y el rango  de valores posibles de los parámetros. La Tabla 2 
muestra el rango de valores de los parámetros EDCA sobre los que corre el algoritmo.  
      
 
 
Voz Video 
Mejor 
Esfuerzo 
 
 
AIFSN 2 [2-8] [3-12], 
 
 
CWmin 7 [7-63] [31-1023] 
 
 
CWmax 31 63 1023 
  TXOP [1-7] [1-10] [0-10]  
 
Paquete 
160 
bytes 
1280 
bytes 
1500 bytes 
 
 
Velocidad 
64 
Kbps 
640 
Kbps 
1024 Kbps 
 
 
     
Tabla 2 Rango de valores de los parámetros EDCA del algoritmo MTDA 
 
3.2 Detalles del Algoritmo 
 
El algoritmo, una variante y generalización de la propuesta de [4],  se basa en 
su sencillez y la adaptación dinámica de las tendencias observadas en los tráficos y la 
propia red. Los aspectos del mismo se describen a través de la siguiente lógica: 
 
1.  Esperar por la primera solicitud de flujo 
2. Iniciar el vector  de parámetros y su rango de valores ξ,  según el flujo requerido  
- Voz: AIFSN=2, CWmin=7, CWmax=31, TXOP=1 
- Video: AIFSN=3, CWmin=31, CWmax=63, TXOP=10 
 - Mejor Esfuerzo: AIFSN=5, CWmin=63, CWmax=1023, TXOP=10 
3. Esperar por una nueva solicitud de flujo para sumarse al sistema. Resguardar 
parámetros ξ  vigentes hasta el momento. Ajustar el vector de parámetros y su rango 
de valores ξ temporales según el nuevo flujo requerido.  
4. Usando los parámetros con la nueva ó la misma solicitud de tráfico, verificar el 
cumplimiento de los objetivos de rendimiento, delay y descarte (µ), etc. ó si el 
número máximo de iteraciones ha sido alcanzado. Si es así, Ir al paso 6. De lo 
contrario, Ir al paso 5. 
5. Incrementar/Decrementar secuencialmente (solo un cambio en cada iteración): 
- AIFSNbe  AIFSNbe + 1. [5-12] Actualizar ξ. Ir al Paso 4. 
- AIFSNvi  AIFSNvi + 1. [3-8] Actualizar ξ. Ir al Paso 4. 
- CWmin,be  CWmin,be x 2 +1 [63-1023] Actualizar ξ. Ir al Paso 4. 
- TXOPvoz  TXOPvoz + 1. [1-7] Actualizar ξ. Ir al Paso 4. 
- TXOPbe TXOPbe – 1.[1-10] Actualizar ξ. Ir al Paso 4. 
- TXOPvideo TXOPvideo – 1.[1-10] Actualizar ξ. Ir al Paso 4. 
Si el nuevo valor de un parámetro produce un alejamiento del 
cumplimiento de µ, restaurar el valor anterior del parámetro, y mantenerlo 
fijo por el resto de las iteraciones del presente requerimiento. 
6. Si no se ha verificado el cumplimiento de µ rechazar solicitud, o proponer 
requerimientos posibles de satisfacer,  y restaurar parámetros ξ resguardados 
previos a la solicitud. De lo contrario configurar los parámetros de trabajo con  ξ 
temporal. Ir al paso 3. 
 
4   Ensayo experimental del Algoritmo MTDA 
La comparación del comportamiento de la red con MTDA respecto a cuando se usan 
los parámetros estáticos por defecto (Tabla 3), se realizó configurando las estaciones 
para funcionar en el estándar 802.11a en 36 Mbps. Para el funcionamiento del 
algoritmo, se estableció que la pérdida de rendimiento no debía superar el umbral del 
1% ni los 150 ms de retardo para los tráficos de voz y video. 
 Voz Video Mejor  
Esfuerzo 
AIFSN 2 2 3 
CWmin 3 7 15 
CWmax 7 15 1023 
TXOP 1 2 - 
 
Tabla 3 Parámetros estáticos por defecto para los tráficos 
 
4. 1 Escenario 1 – Estaciones con todos los tráficos presentes 
 
En las Fig. 4, 5 y 6 se observan las comparaciones del rendimiento de los flujos de 
voz, video y de mejor esfuerzo, cuando se usa la configuración con los parámetros 
estáticos por defecto respecto a cuando se ejecuta el algoritmo MTDA. Se muestra 
que el uso del algoritmo MTDA, obtiene mejoras significativas en el rendimiento de 
todos los tráficos presentes, mientras se da satisfacción a los requerimientos de QoS.  
Si comparamos globalmente el uso del algoritmo respecto a la configuración 
estática por defecto, la mejora del rendimiento de la red es del orden del 47% 
promedio, y en los tráficos de voz y de video un incremento promedio del orden del 
70% y  50%, respectivamente. 
 
 
Fig. 4  Comparación del rendimiento del tráfico de voz 
usando Parámetros por Defecto y el Algoritmo MTDA  
 
 
Fig. 5  Comparación del rendimiento del tráfico de video 
usando Parámetros por Defecto y el Algoritmo MTDA  
 
 
Parámetros 
por defecto 
Alg. 
MTDA 
[Mbps] 0,923 1,593 
Mejora  72,54% 
 
 
Parámetros 
por defecto 
Alg. 
MTDA 
[Mbps] 10,855 16,222 
Mejora 49,44% 
 
 
Fig. 6  Comparación del rendimiento del tráfico de mejor esfuerzo 
usando Parámetros por Defecto y el Algoritmo MTDA  
 
4. 2 Escenario 2 – 60% tráfico de voz, 20% de video y 20% de mejor esfuerzo 
 
En las Fig. 7, 8 y 9 se observan las comparaciones del rendimiento de los flujos de 
voz, video y de mejor esfuerzo, cuando se usa la configuración con los parámetros 
estáticos por defecto respecto a cuando se ejecuta el algoritmo MTDA. La carga crece 
desde 5 a 50 estaciones. En este caso también se obtienen mejores  prestaciones con el 
algoritmo MTDA para todos los tráficos presentes. Se genera una mejora global del 
rendimiento del orden del 20% promedio, y en los tráficos de voz y de mejor esfuerzo 
un incremento promedio del orden del 45% y  15%, respectivamente. 
5 Conclusiones y aportes 
El estado de la red Wi-Fi con QoS, es esencialmente dinámico, donde las diversas 
métricas de cada tráfico y de la red dependen de los tráficos existentes y de la 
proporción relativa entre ellos. Por lo tanto, un algoritmo de sintonización debe 
responder a esa dinámica variando y adaptando los parámetros EDCA, en 
contraposición a mantener los valores estáticos por defecto, obteniendo mejores 
métricas de rendimiento, y simultáneamente, el cumplimiento de consignas de QoS. 
EDCA 802.11e, por si sola, asegura la diferenciación de tráfico y premisas de QoS 
para una baja cantidad de estaciones, y un algoritmo de sintonización complementa el 
protocolo, asegundo mayores rendimientos y esas restricciones de QoS, para los 
tráficos de mayor prioridad o de tiempo real, aún en condiciones de alta carga. 
Las contribuciones principales son: i) La especificación de un nuevo algoritmo de 
sintonización que  llamamos MTDA (Algoritmo de Diferenciación de  Tráfico  Múlti- 
 
Parámetros 
por defecto 
Alg. 
MTDA 
[Mbps] 10,285 12,226 
Mejora  18,87% 
 
ple), ii) La demostración de que las características de mecanismo estándar EDCA 
IEEE 802.11e combinado con un algoritmo de sintonización son apropiadas para 
soportar todo tipo de tráfico de datos multimedia, de tiempo real y control automático 
en los ambientes administrativos e industriales de próxima generación, iii) La 
especificación  y experimentación de un nuevo tipo de escenario para la evaluación de 
 
 
Fig. 7  Comparación del rendimiento del tráfico de voz  
usando Parámetros por Defecto y el Algoritmo MTDA 
 
 
Fig. 8  Comparación del rendimiento del tráfico de video 
usando Parámetros por Defecto y el Algoritmo MTDA 
 
Parámetros 
por defecto 
Alg. 
MTDA 
[Mbps] 1,332 1,906 
Mejora  43,14% 
 
 
Parámetros 
por defecto 
Alg. 
MTDA 
[Mbps] 6,440 6,555 
Mejora  1,80% 
 
 
Fig. 9  Comparación del rendimiento del tráfico de mejor esfuerzo  
usando Parámetros por Defecto y el Algoritmo MTDA 
 
las métricas cuando se plantea una proporción relativa dada de los tipos de tráficos en 
la red, y iv) Los aportes realizados usando modelación con Redes de Petri, que 
complementan y facilitan la comparación con los conocimientos  obtenidos desde 
colecciones de trazas puras, con estudios analíticos o modelaciones con otras 
herramientas matemáticas, para diferentes contextos reales e hipotéticos [5-8]. 
 
