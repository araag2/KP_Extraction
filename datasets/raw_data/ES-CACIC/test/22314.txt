Matrices de subdivisión para curvas beta spline cúbicas
﻿
In this paper we use a subdivision technique to calculate the control points that subdivide
polinomial curves. If P = (P
0
, ..., P
n
) is the control polygon and B[P] is the polinomial curve
of degree n for which a subdivision algorithm is to be constructed, we use matrix operations to
obtain the left polygon L and the right polygon R that aproximate the curve B[P]. Each one of
the polygons P, L, and R represent a set of points in the plane. In this work we have considered
the case of cubic Beta-spline curves, with parameters β
1
and β
2
, and we obtained the subdivision
curves for different values of these parameters. We explicitely detail the subdivision matrices
that we have used for each case, and present the graphic representation of the subpolygons
obtained in the different steps of the subdivision.
Resumen
En este trabajo se emplea una técnica de subdivisión para calcular los puntos de control
que subdividen a las curvas polinómicas.
Sea P = (P
0
, ..., P
n
) el polígono de control y B[P] la curva polinómica de grado n para la
cual se construye el algoritmo de subdivisión. Mediante operaciones matriciales se obtienen L
XIII Congreso Argentino de Ciencias de la Computación
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
 
V Workshop de Computación Gráfica, Imágenes y Visualización
_________________________________________________________________________
 
 
710
y R, polígonos a izquierda y a derecha, respectivamente, que aproximan a la curva B[P]. Cada
uno de los polígonos P, L, y R representan un conjunto de puntos en el plano.
Consideramos el caso de las curvas Beta-spline cúbicas, con parámetros β
1
y β
2
, y realizamos
la subdivisión para distintos valores de estos parámetros. Detallamos explícitamente las matrices
de subdivisión utilizadas para cada caso, así como también la representación gráfica de los
subpolígonos obtenidos en los distintos pasos de la subdivisión.
Palabras claves
matrices de subdivisión, polígono de control, curvas Beta-spline
1. INTRODUCCION
Recordemos que un algoritmo de subdivisión es una técnica para encontrar polígonos de
control L (a izquierda) y R (a derecha) tales que dividen a la curva B [P] (t) en algún valor
c ∈ (0, 1). Si suponemos que B [P] ([a, b]) representa la curva cuando el parámetro varía sobre
el intervalo [a, b], entonces
B [P] ([0, 1]) = B [L] ([0, 1]) ∪ B [R] ([0, 1]).
Más precisamente,
B [L] ([0, 1]) = B [P] ([0, c])
B [R] ([0, 1]) = B [P] ([c, 1]) .
Goldman Ronald y DeRose Tony [4] desarrollaron una forma de encontrar las matrices de
subdivisión a izquierda y a derecha que se aplican a un determinado polígono de control para
obtener subpolígonos a izquierda y a derecha, considerando para ello el caso de la subdivisión
de curvas polinómicas.
Nuestro interés es mostrar explícitamente las matrices de subdivisión para curvas Betasplines cúbicas, para distintos valores de los parámetros de sesgo y de tensión. Estas matrices
nos brindarán los puntos de control correspondientes a L y R.
Asimismo queremos mostrar, gráficamente, la influencia de estos parámetros en la subdivisión.
2. MATRICES DE SUBDIVISION
En esta sección se desarrolla una técnica para calcular los puntos de control que subdividen
a las curvas o superficies polinómicas.
Sea B(t) = (B
0
(t), ..., B
n
(t)), con B
0
(t), ..., B
n
(t) funciones que forman una base para la
curva polinómica B[P](t) de grado n, para la cual será construido un algoritmo de subdivisión,
siendo P = (P
0
, ..., P
n
) el polígono de control y P
0
, ..., P
n
los puntos de control. Es decir,
consideremos
B[P](t) =
n
∑
k=0
B
k
(t)P
k
= B(t) ∗ Pt,
XIII Congreso Argentino de Ciencias de la Computación
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
 
V Workshop de Computación Gráfica, Imágenes y Visualización
_________________________________________________________________________
 
 
711
siendo Pt la traspuesta de P y ” ∗ ” representa la multiplicación de matrices. Las funciones
B
0
(t), ..., B
n
(t) son continuas, suman uno y, dado que forman una base, son linealmente independientes sobre el intervalo [0,1]. Estas tres propiedades nos aseguran que, si un algoritmo
de subdivisión es aplicado a la curva B[P](t), entonces los polígonos de control convergen a la
curva [4].
Como B(t) es una base para el espacio de los polinomios de grado n, existen matrices S
L
y
S
R
[4] que dependen de c, c ∈ (0, 1) tales que:
{B(ct) = B(t) ∗ S
L
B(c + (1 − c)t) = B(t) ∗ S
R
, (1)
donde S
L
y S
R
son matrices que reparametrizan las funciones B
0
(t), ..., B
n
(t). En el caso de la
subdivisión en el punto medio, consideramos c = 1
2
.
Sea P = (P
0
, ..., P
n
) el polígono de control; buscamos expresiones para L y R tales que:
{B[L](t) = B[P](ct)
B[R](t) = B[P](c + (1 − c)t), (2)
donde L y R son los subpolígonos a izquierda y a derecha respectivamente, en los cuales queda
dividido el polígono original P.
En forma matricial, esto se puede escribir de la siguiente manera:
B(t) ∗ Lt = B(ct) ∗ Pt
(B
0
(t) · · · B
n
(t) ) ∗
⎛
⎜
⎝
L
0
...
L
n
⎞
⎟
⎠
= (B
0
(ct) · · · B
n
(ct) ) ∗
⎛
⎜
⎝
P
0
...
P
n
⎞
⎟
⎠
.
Sustituyendo por la primera ecuación de (1) obtenemos que
B(t) ∗Lt = B(t) ∗ S
L
∗ Pt.
Como B
0
(t), ..., B
n
(t) son linealmente independientes, se concluye que
Lt = S
L
∗Pt (3)
⎛
⎜
⎝
L
0
...
L
n
⎞
⎟
⎠
= S
L
∗
⎛
⎜
⎝
P
0
...
P
n
⎞
⎟
⎠
.
Similarmente obtenemos que:
Rt = S
R
∗ Pt.
Por lo tanto, las matrices que reparametrizan las funciones de la combinación lineal sirven,
además, para subdividir los polígonos de control. El próximo lema nos da expresiones explícitas
para las matrices.
Lema 1 Sea T = (t
0
, ..., t
n
) una sucesión de constantes tales que 0 ≤ t
k
≤ 1 (ver lema 2.1 de
[4]), y sea 0 ≤ c ≤ 1 una constante. Entonces S
L
y S
R
están dadas explícitamente por
{
S
L
= B(T )−1 ∗ B(cT )
S
R
= B(T )−1 ∗ B(c + (1 − c)T ) (4)
XIII Congreso Argentino de Ciencias de la Computación
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
 
V Workshop de Computación Gráfica, Imágenes y Visualización
_________________________________________________________________________
 
 
712
donde cT = (ct
0
, ..., ct
n
) , c + (1 − c)T = (c + (1 − c)t
0
, ..., c + (1 − c)t
n
) y
B(T ) =
⎛
⎜
⎝
B
0
(t
0
) · · · B
n
(t
0
)
...
...
B
0
(t
n
) · · · B
n
(t
n
)
⎞
⎟
⎠
Demostración: De (1), B(ct
i
) = B(t
i
) ∗ S
L
, con i = 0, ..., n, y ésto en forma matricial es
B(cT ) = B(t) ∗ S
L
⎛
⎜
⎜
⎜
⎜
⎝
B
0
(ct
0
) B
1
(ct
0
) · · · B
n
(ct
0
)
B
0
(ct
1
) B
1
(ct
1
) · · · B
n
(ct
1
)
...
...
...
B
0
(ct
n
) B
1
(ct
n
) · · · B
n
(ct
n
)
⎞
⎟
⎟
⎟
⎟
⎠
=
⎛
⎜
⎜
⎜
⎜
⎝
B
0
(t
0
) B
1
(t
0
) · · · B
n
(t
0
)
B
0
(t
1
) B
1
(t
1
) · · · B
n
(t
1
)
...
...
...
B
0
(t
n
) B
1
(t
n
) · · · B
n
(t
n
)
⎞
⎟
⎟
⎟
⎟
⎠
∗ S
L
Así, S
L
= B(T )−1 ∗ B(cT ).
En forma similar se encuentra la expresión de S
R
.
Estas matrices de subdivisión pueden determinarse a partir de las matrices de subdivisión
de Bézier SB
L
y SB
R
, como en el caso de cualquier técnica polinomial. Dadas las funciones de
Bézier de grado n (los polinomios de Bernstein) denotadas por bn
0
(t), ..., bn
n
(t), es decir
bn
i
(t) =
(n
i
)
ti(1 − t)n−i, i = 0, ..., n,
las matrices SB
L
y SB
R
se obtienen a partir de un algoritmo desarrollado en [2] y en [3], y están
dadas por
SB
L
=
⎛
⎜
⎜
⎜
⎜
⎝
b0
0
(c) 0 0 · · · 0
b1
0
(c) b1
1
(c) 0 · · · 0
...
...
bn
0
(c) bn
1
(c) bn
2
(c) · · · bn
n
(c)
⎞
⎟
⎟
⎟
⎟
⎠
(5)
SB
R
=
⎛
⎜
⎜
⎜
⎜
⎝
bn
0
(c) bn
1
(c) · · · bn
n
(c)
0 bn−1
0
(c) · · · bn−1
n−1
(c)
...
...
...
0 0 · · · b0
0
(c)
⎞
⎟
⎟
⎟
⎟
⎠
. (6)
Sea C la matriz cuyas componentes son los coeficientes de las combinaciones lineales que
surgen de expresar cada función de la base B(t) = (B
0
(t), ..., B
n
(t)) en términos de las funciones
de la base de Bernstein b(t) = (bn
0
(t), ..., bn
n
(t)), esto es C es tal que:
B(t) = b(t) ∗ C
b(t) = B(t) ∗ C−1.
Entonces por (1),
B(t) ∗ S
L
= B(ct) = b(ct) ∗ C = b(t) ∗ SB
L
∗ C = B(t) ∗ C−1 ∗ SB
L
∗ C.
Por la linealidad de B(t) se verifica que
S
L
= C−1 ∗ SB
L
∗ C. (7)
XIII Congreso Argentino de Ciencias de la Computación
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
 
V Workshop de Computación Gráfica, Imágenes y Visualización
_________________________________________________________________________
 
 
713
En forma similar, se demuestra que
S
R
= C−1 ∗ SB
R
∗ C. (8)
De (7) y (8) resulta que S
L
es similar a SB
L
y que S
R
es similar a SB
R
.
Las matrices de los ejemplos que daremos en este trabajo fueron construidas usando las
ecuaciones (7) y (8).
Concluimos esta sección con algunos resultados que nos permiten asegurar con precisión
cuándo los polígonos de subdivisión permanecen en la cápsula convexa del polígono de control
original.
Lema 2 Sea T = (t
0
, ..., t
n
) una sucesión de números reales tales que 0 ≤ t
k
≤ 1. Consideremos
B(T ) =
⎛
⎜
⎝
B
0
(t
0
) · · · B
n
(t
0
)
...
...
B
0
(t
n
) · · · B
n
(t
n
)
⎞
⎟
⎠
y sea B(T )−1 = {b
ij
(T )}. Entonces
∑
j
b
ij
(T ) = 1, i = 0, ..., n. Esto es, las filas de B(T )−1
suman uno.
Demostración: Sea u = (1, ..., 1) un vector fila de n componentes. Sabemos que
n
∑
j=0
B
j
(t
i
) =
1, i = 0, ..., n, o lo que es equivalente
B(T ) ∗ ut = ut.
Multiplicamos ambos miembros por B(T )−1, obtenemos
B(T )−1 ∗ ut = ut,
es decir
∑
j
b
ij
(T ) = 1, i = 0, ..., n.
Lema 3 Las filas de S
L
= (l
ij
) suman uno. Esto es
∑
j
l
ij
= 1. Análogamente, las filas de
S
R
= (r
ij
) suman uno.
Demostración: Recordemos que B
0
(t), ..., B
n
(t) suman uno ∀t ∈ [0, 1] y como cada elemento
de cT está en [0,1], las filas de B(cT ) deben sumar uno. Esto es, si u = (1, 1, ..., 1), entonces
B(cT ) ∗ ut = ut.
Multiplicando a ambos lados por B(T )−1 y aplicando el Lema 2 y el Lema 1, obtenemos
S
L
∗ ut = B(T )−1 ∗ B(cT ) ∗ ut = B(T )−1 ∗ ut = ut.
Entonces las filas de S
L
suman uno. Un análisis similar muestra que las filas de S
R
suman
uno.
Lema 4 Se garantiza que los polígonos de subdivisión L (R) permanecen por completo en la
cápsula convexa de P si y sólo si S
L
(S
R
) consisten solamente de elementos no negativos.
XIII Congreso Argentino de Ciencias de la Computación
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
 
V Workshop de Computación Gráfica, Imágenes y Visualización
_________________________________________________________________________
 
 
714
Demostración: Sea L = (L
0
, ..., L
n
), S
L
= (l
ij
). Entonces, de (3) sigue que
L
i
=
∑
j
l
ij
P
j
.
Así, L
i
permanece en la cápsula convexa de P
j
si y sólo si l
i0
, ..., l
in
son todos no negativos y
∑
j
l
ij
= 1. (9)
Esto es, las filas de S
L
deben sumar uno y sus entradas deben ser no negativas. Pero, por el
Lema 3, se sabe que las filas suman uno, entonces, todo lo que se requiere es que las entradas
sean no negativas.
Un argumento similar se usa para probar el resultado para los puntos de control de R.
3. EJEMPLO: CURVA BETA-SPLINE CUBICA
La Beta-spline cúbica es una generalización de la B-spline cúbica uniforme, en la cual la
propiedad de continuidad paramétrica de segundo grado (C2) es reemplazada por continuidad
geométrica (G2). A continuación repasaremos estos dos conceptos.
Dada una curva paramétrica cúbica a trozos de ecuación Q(t), con t ∈ [t
0
, t
m
], el vector
tangente unitario a Q(t) está definido por :
T (t) = Q
(1)(t)
|Q(1)(t)|;
y el vector curvatura por:
K(t) = k(t)N(t) = k(t) T
(1)(t)
|T (1)(t)|;
donde k(t) es la curvatura de Q(t) en t y N(t) es el vector normal unitario. Los vectores T (t)
y K(t) representan la dirección del movimiento y la curvatura en un punto de la curva.
Notaremos Q(n)(t+
i
) y Q(n)(t−
i
), n = 0, 1, 2, los límites a derecha y a izquierda de Q(n) en t
i
,
respectivamente, siendo Q(n) la derivada n-ésima de Q(t). Si deseamos que Q(t), T (t) y K(t)
sean continuas en algún t
i
, es decir, que la curva tenga continuidad geométrica de segundo grado
(indica que sea G2) , se deben verificar las siguientes condiciones para cada t
i
y para cada β1
i
y β2
i
:
i) Q(t−
i
) = Q(t+
i
)
ii) β1
i
Q(1)(t−
i
) = Q(1)(t+
i
)
iii) β12
i
Q(2)(t−
i
) + β2
i
Q(1)(t−
i
) = Q(2)(t+
i
).
La primera condición requiere la continuidad del vector posición. La segunda, se refiere a
que las derivadas laterales primeras con respecto al parámetro en t
i
sean colineales, pero admite
que difieran en una constante; esto significa que puede existir un cambio en la velocidad pero no
en la dirección. La última condición, está relacionada con la continuidad del vector curvatura.
Estas condiciones son menos restrictivas que las que verifican las curvas B-splines cúbicas
uniformes (β1
i
= 1 y β2
i
= 0), ya que éstas tienen continuidad paramétrica de segundo grado,
es decir, verifican:
XIII Congreso Argentino de Ciencias de la Computación
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
 
V Workshop de Computación Gráfica, Imágenes y Visualización
_________________________________________________________________________
 
 
715
i) Q(t−
i
) = Q(t+
i
)
ii) Q(1)(t−
i
) = Q(1)(t+
i
)
iii) Q(2)(t−
i
) = Q(2)(t+
i
).
En el ejemplo que estamos considerando, un trozo de la curva Beta-spline cúbica está caracterizado por las funciones B
0
(t), ..., B
3
(t) definidas por:
⎧
⎪
⎪
⎪
⎪
⎨
⎪
⎪
⎪
⎪
⎪
⎩
B
0
(t) = 1
γ
[2β3
1
− 6β3
1
t + 6β3
1
t2 − 2β3
1
t3]
B
1
(t) = 1
γ
[(β
2
+ 4β2
1
+ 4β
1
) + (6β3
1
− 6β
1
)t − (3β
2
+ 6β3
1
+ 6β2
1
)t2
+(2β
2
+ 2β3
1
+ 2β2
1
+ 2β
1
)t3]
B
2
(t) = 1
γ
[2 + 6β
1
t + (3β
2
+ 6β2
1
− (2β
2
+ 2β2
1
+ 2β
1
+ 2)t3)]
B
3
(t) = 1
γ
2t3,
donde γ = 1
β
2
+12
, β
1
es el parámetro de sesgo y β
2
es el parámetro de tensión [1].
Si se desea que la curva posea la propiedad de la cápsula convexa, basta con asignarle valores
a los parámetros, de tal manera que las funciones B
0
(t), ..., B
3
(t) sean no negativas.
La matriz de subdivisión S
L
= [l
ij
] se construye a partir de la ecuación (7) S
L
= C−1∗SB
L
∗C.
La matriz S
R
= [r
ij
] es tal que r
ij
= l
5−i,5−j
con i, j = 1, ..., 4 .
Para construir la matriz C realizamos el siguiente procedimiento:
Expresamos cada B
i
(t), i = 0, ..., 3, como una combinación lineal de las funciones b3
0
(t),
b3
1
(t), b3
2
(t) y b3
3
(t).
Cada uno de los coeficientes de esta combinación lineal formarán la (i+1)-ésima columna
de C, con i = 0, ..., 3.
La matriz C presenta la siguiente forma general:
⎛
⎜
⎜
⎜
⎝
2γβ3
1
γ(β
2
+ 4β2
1
+ 4β
1
) 2γ 0
0 γ(2β3
1
+ 2β
1
+ β
2
+ 4β2
1
) γ(2β
1
+ 2) 0
0 γ(2β3
1
+ 2β2
1
) γ(β
2
+ 2β2
1
+ 4β
1
+ 2) 0
0 2γβ3
1
γ(β
2
+ 4β
1
+ 4β2
1
) 2γ
⎞
⎟
⎟
⎟
⎠
Debido a que estamos considerando n = 3, la matriz SB
L
será de orden cuatro, (ver (5)), y
cuatro serán también los puntos de control del polígono original P.
Una vez obtenidas las matrices C y SB
L
estamos en condiciones de hallar S
L
. Luego, a partir
de ésta, se calcula S
R
. Si multiplicamos S
L
y S
R
por el vector columna Pt, obtenemos los
vectores columnas Lt y Rt, respectivamente.
Utilizando el software Mathematica desarrollamos un algoritmo que nos permite hallar S
L
y S
R
para distintos valores de β
1
y β
2
y para un c cualquiera (ver Apéndice A).
En lo que respecta a la representación gráfica, hemos elaborado un algoritmo, utilizando el
software MATLab, que genera los puntos de control a izquierda y a derecha, en los distintos
pasos de la subdivisión y grafica los polígonos que estos puntos determinan, respectivamente.
En todos los ejemplos hemos considerado β
1
= 1, c = 1/2 y comenzamos la subdivisión a
partir de los cuatro puntos de control originales y su polígono asociado.
En primer lugar, sea β
2
= 0 y c = 1
2
, es decir realizamos la subdivisión en el punto medio.
Luego de realizar tres pasos en la subdivisión, la unión de las gráficas de los subpolígonos
XIII Congreso Argentino de Ciencias de la Computación
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
 
V Workshop de Computación Gráfica, Imágenes y Visualización
_________________________________________________________________________
 
 
716
0 1 2 3 4 5 6 7 8
0
1
2
3
4
5
6
7
8
9
10
Figura 1: Tres pasos de la subdivisión en el punto medio para β
1
= 1 y β
2
= 0
−4 −2 0 2 4 6 8 10 12
0
1
2
3
4
5
6
7
8
9
10
Figura 2: Tres pasos de la subdivisión en el punto medio para β
1
= 1 y β
2
= 5
obtenidos generan un polígono final que converge a la curva Beta-spline cúbica y que, además,
está contenido en la cápsula convexa del polígono original, como puede observarse en la Figura 1.
Si suponemos β
2
= 5, la primera y la última fila de S
L
contienen elementos negativos, por
lo tanto, los primeros y los últimos puntos de los polígonos de subdivisión no quedan incluidos
en la cápsula convexa del polígono original. Esto ocurre siempre que β
2
sea positivo.
El polígono formado por la unión de las gráficas de los polígonos de subdivisión L y R no
describen una curva continua, como se puede observar en la Figura 2. Sin embargo, luego de
sucesivos pasos de subdivisión, la unión de las gráficas de los polígonos de subdivisión converge
a la curva original.
Por último, consideramos β
2
= −10, y observamos, en este caso, un comportamiento similar
al caso anterior, (ver la Figura 3). Es decir, si β
2
< 0, cuanto menor es el valor de este parámetro,
la curva no pertenece a la cápsula convexa.
4. CONCLUSIONES Y TRABAJO FUTURO
En este trabajo hemos mostrado algunos ejemplos de subdivisión de curvas Beta-spline
cúbicas y sus correspondientes matrices de subdivisión.
XIII Congreso Argentino de Ciencias de la Computación
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
 
V Workshop de Computación Gráfica, Imágenes y Visualización
_________________________________________________________________________
 
 
717
−4 −2 0 2 4 6 8 10 12
−2
0
2
4
6
8
10
Figura 3: Cinco pasos de la subdivisión en el punto medio para β
1
= 1 y β
2
= −10
Se construyó un algoritmo que genera estas matrices para distintos valores de los parámetros
de sesgo y tensión y para la subdivisión tanto en el punto medio como en otros casos.
En todos los ejemplos mostrados se trabajó con funciones de la base que son continuas,
forman una partición de la unidad y son linealmente independientes, lo cual asegura la convergencia uniforme de los polígonos de subdivisión a la curva original. No se hizo uso de la
propiedad de la cápsula convexa, ya que esta propiedad no es necesaria para la convergencia
de un algoritmo de subdivisión [4].
Está claro que, a partir de cuatro puntos de control, se genera un solo trozo de la curva.
Una extensión a un conjunto con mayor número de puntos de control forma parte de un trabajo
futuro, así como la extensión al caso de la subdivisión de superficies Beta-spline cúbicas.
