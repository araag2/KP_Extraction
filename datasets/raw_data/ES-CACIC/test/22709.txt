Scrum para el desarrollo de aplicaciones TVDI
﻿ Un programa de Televisión Digital Interactiva (TVDI) es un 
software, específicamente una aplicación multimedia a través de la cual el 
televidente puede interactuar vía control remoto. En la actualidad, el enfoque de 
desarrollo de software TVDI es un tema en estudio, que aún no está 
completamente definido y por ende poco probado. Este trabajo presenta la 
adaptación de Scrum para la construcción de este tipo aplicaciones. Se 
identifican y definen roles: fases, secuencia de actividades y artefactos; los 
cuales representan las directrices que fueron puestas a prueba en un caso de 
estudio real. 
Keywords. TV Digital, Ginga, Aplicaciones interactivas, NCL, LUA, Métodos 
ágiles, Scrum, XP. 
1 Introducción 
La televisión digital terrestre [1] [2] [3] es una tecnología, que va a transformar la 
experiencia de ver televisión. Imagen y sonido en alta definición junto con la 
interactividad son posibles gracias al pasaje de la transmisión analógica a la digital, la 
cual permite enviar datos, video, audio, aplicaciones, etc. a través de los canales de 
transmisión. Estas señales digitales son más eficientes que las analógicas y tienen 
como principal ventaja la posibilidad de enviar servicios a través del mismo canal, 
permitiendo un uso eficiente del espectro de transmisiones. 
El Sistema Argentino de Televisión Digital Terrestre (SATVD-T) [4] [5] como 
todos los otros sistemas de televisión respeta el modelo broadcasting. Este modelo se 
basa en la existencia de: un conjunto reducido de emisores de contenido (canales de 
televisión) y un conjunto suficientemente grande de receptores (televidentes). En este 
modelo, los receptores no tienen control directo sobre el contenido emitido sino que 
lo tienen sobre la sintonización de un programa dado. Esto implica que el modelo 
puede implementarse sin un canal de retorno que conecte a los televidentes a los 
emisores u otros servicios. 
El SATVD-T [5] está basado en la norma Integrated Service Data Broadcasting 
(ISDB-Tb) [6] [7] [8] o Transmisión Digital de Servicios Integrados. El mismo 
consiste en un conjunto de normas japonesas (la b indica que es la Versión Brasileña), 
donde se definen formas para transmitir contenidos digitales por aire. Los datos 
pueden ser actualizaciones de aplicaciones o sistemas de archivos. Esta norma utiliza 
el middleware denominado Ginga [9] [10] que permite ejecutar aplicaciones NCL [1] 
[5] [11] [12] [13] / LUA [14]. 
El decodificador (o set-top-box) es un dispositivo que permite la recepción tanto de 
la señal digital como la analógica, y genera la señal de video y audio que alimenta el 
televisor o display. Su objetivo es realizar todas las operaciones necesarias para que 
las señales recibidas a modo de radio frecuencia se transformen en video y audio: 
captación de las señales, decodificación, descompresión, etc. El set-top-box del 
SATVD-T implementa el middleware Ginga ar [9] [15]. 
Las aplicaciones que son parte de la transmisión digital respetan el mismo modelo, 
pero son los televidentes los que tienen el control sobre el uso de las mismas, dado 
que generalmente la aplicación puede ser desactivada,  o el televidente puede cancelar 
la ejecución de la aplicación cambiando el canal que sintoniza. Las mismas están 
asociadas al video principal del canal en el cual se transmiten y por ende aumenta la 
experiencia del televidente respecto de la televisión tradicional, con nuevos tipos de 
interacciones entre el cliente y los contenidos. Es por esto que suele hablarse de 
televisión digital interactiva.  
En la actualidad, el enfoque de desarrollo de software TVDI es un tema en estudio, 
que aún no está completamente definido y por ende poco probado, sin embargo 
observamos una tendencia hacia el uso de métodos ágiles [16] [17]. En este trabajo 
presentamos la adaptación de Scrum [18] [19] [20] para el desarrollo de aplicaciones 
de TVDI y las experiencias iniciales de su uso. 
2 Motivaciones  
En términos computacionales, un programa de TVDI es un software, específicamente 
una aplicación multimedia a través de la cual el televidente puede interactuar vía 
control remoto [1]. Esto significa que el televidente también puede recibir 
video/audio, software que posibilita que interactúe con el contenido “vinculado”. 
La reciente aparición de este tipo de software, sumado a sus particulares 
características y categorizaciones, revela como problema actual que aún no exista una 
metodología aceptada que permita guiar al desarrollador en el proceso de 
construcción de aplicaciones TVDI. Las metodologías tradicionales no proporcionan 
técnicas y notaciones adecuadas para modelar este tipo de aplicaciones. En general, al 
ser pesadas no facilitan la implementación rápida.  
La herramienta disponible en la actualidad que da soporte al proceso es el 
diagrama NCL [11] [12] [13], el mismo permite expresar requerimientos, 
componentes a implementar, relaciones entre los elementos, acciones entre los objetos 
multimedia, diálogos con los clientes en aplicaciones simples. Se comprobó en 
experiencias previas que esta notación gráfica no resultó útil para aplicaciones 
complejas, que requieren o demandan muchos componentes. Por esta razón, fue 
necesaria la búsqueda de un enfoque que facilite el diseño e implementación del 
proceso de desarrollo de aplicaciones TVDI. La alternativa que más se adecua,  por la  
naturaleza de este tipo de aplicaciones, y sumado a la experiencia de trabajo del 
equipo, motivó a volcarse a métodos ágiles [18] como Scrum, [18] [19] [20] [21], XP 
[22] [23], entre otros. En particular, Scrum resultó muy conveniente debido a que se 
presenta como un Framework que ofrece una estructura que permite crear procesos 
ligeros particulares para el desarrollo de nuevos productos. 
3 El camino de Scrum para TVDI 
Scrum es un método ágil, en el que se aplican de manera regular un conjunto de 
buenas prácticas para trabajar colaborativamente, en equipo, y obtener el mejor 
resultado posible de un proyecto. Por ello, está especialmente indicado para 
desarrollos en entornos complejos, que tienen la necesidad de obtener resultados 
rápidos, con requisitos que son cambiantes o poco definidos, donde la innovación, la 
competitividad, la flexibilidad y la productividad son fundamentales. Este es el caso 
de las aplicaciones TVDI.  
El proceso de este enfoque se ejecuta en bloques temporales, cortos y fijos. Donde 
cada iteración, tiene que proporcionar un resultado completo, es decir, un incremento 
del producto final para ser entregado al cliente.  
Se parte de la lista de objetivos/requisitos priorizados del producto, que actúa como 
plan del proyecto. En esta lista los objetivos quedan repartidos en iteraciones y 
entregas parciales del incremento del producto final. De manera regular el cliente 
puede maximizar la utilidad de lo que se desarrolla y el retorno de inversión mediante 
la replanificación de objetivos se realiza al inicio de cada iteración. 
Los roles del equipo de Scrum TVDI que se muestran en la Tabla 1 son los que nos 
proporciona el framework Scrum. En nuestro proceso ligero los Stakeholders se 
representan por el staff que conforma el programa de televisión CAMPUS. Los cuales 
se relacionan y participan con el team en diferentes actividades como la creación de la 
lista de requisitos priorizados, diseño gráfico, contenido audiovisual, entre otras. 
Además ellos determinan si un demo cumple con el product backlog (inventario de 
funcionalidades, mejoras, tecnologías y corrección de errores, que se van 
incorporando a través de las iteraciones de desarrollo) [17] [18]. 
Tabla 1.  Miembros del equipo Scrum TVDI 
Miembro Scrum Scrum TVDI 
Stakeholders 
Es el cliente el que está interesado en la 
realización del producto. 
Pueden ser: productores, 
diseñadores, guionistas, 
conductores. 
Master o 
Facilitador 
Un nexo entre el team y el cliente,  el cual 
coordinará y negociará entre las partes. 
Idem Scrum 
Team o 
Grupo 
Son los miembros que forman parte del 
proyecto en todo su desarrollo, incluidos los 
antes mencionados. 
Colaboradores: productores, 
diseñadores, guionistas. 
Programadores, Tester. 
 
En la Fig. 1 podemos ver cómo se adaptó el proceso ágil en base a Scrum, 
presentado en una estructura general, Fig. 1.a, involucra una o varias iteraciones 
específicas de la Fig. 1.b. La visión general que es similar al framework original, 
consta de las siguientes actividades y/o artefactos involucrados: requerimientos 
valorizados, determinación de la fase, integración - validación y retroalimentación - 
entrega al cliente. Esta propuesta plantea una adaptación y una organización que se 
adecua al desarrollo de aplicaciones TVDI al adicionar Storyboard [24] [25] y 
selección de escenas. La iteración específica de la Fig. 1.b incorpora actividades al 
proceso que son útiles para el desarrollo de estas aplicaciones no clásicas, con 
requisitos variables, que necesitan de un respaldo gráfico y de un desarrollo 
inmediato. La cual incluye: Storyboard detallado, división de tareas, selección de 
tareas, implementación, integración -  validación y finalización de la iteración 
específica. 
 
Fig. 1. Diagrama de Proceso Ágil 
En la Tabla 2 la cual hace referencia a la Fig. 1.a., es el Workflow General donde 
se presentan las tareas generales y secuencia de las mismas, donde se agrega una 
actividad propia de las aplicaciones TVDI denominada Storyboard, que representa a 
modo de guión gráfico una visión global del proyecto. Con el resultado del 
Storyboard se realiza la selección de las escenas. 
FIGURA 1.a 
Requerimientos 
Valorizados 
StoryBoard 
General 
Retroalimentación y 
Entrega al Cliente 
Integración + 
validación 
Determinación de 
la Fase 
Selección 
Requerimiento 
y/o Escenas 
FIGURA 1.b 
StoryBoard 
División de 
Tareas 
Finalización 
 Fase 
Integración y 
Validación 
Implementación 
Selección Tareas 
Tabla 2. Workflow General 
Scrum Scrum TVDI Descripción Scrum TVDI 
Product 
backlog 
Requerimientos 
Valorizados 
El staff del programa de televisión será el responsable de 
priorizar esta lista, teniendo en cuenta el material fílmico y el 
grado de interactividad que se quiera lograr. 
Visión Storyboard 
Es la visión general del proyecto en desarrollo. El equipo diseña 
el guión gráfico contemplando todas las escenas que forman la 
aplicación, distribuyendo los componentes mediales, el tiempo 
de vida de los mismos entre escenas y sus limitaciones, entre 
otras. 
Sprint 
backlog 
Selección de 
requerimientos 
y/o escenas 
Es la descomposición del product backlog en tareas para lograr 
un incremento del producto operativo. El equipo seleccionará 
algunas escenas del Storyboard que conforman el sprint a 
realizar.  
Planning 
session 
Determinación 
de la Fase 
El master y el team determinarán el tiempo y los recursos para 
el sprint.    
Product 
increment 
Sprint review 
Integración y 
Validación 
Se incorpora un incremento de un sprint al proyecto, se verifica 
que el mismo cumpla con la funcionalidad y se contrasta con el 
Storyboard. Generando un producto operativo. 
Impediment 
backlog 
retrospective 
Retroalimetación 
y entrega al 
cliente 
Reunión que se realiza al finalizar un sprint en la que el equipo 
muestra la tecnología desarrollada, y se genera retroinformación entre todos los participantes para actualizar el 
product backlog para el inicio del siguiente sprint. 
 
La Tabla 3 presenta las tareas involucradas en el Workflow Específico de la Fig. 
1.b, las cuales nos dan soporte para el desarrollo de aplicaciones TVDI. Esto implica 
el desarrollo por completo del guión gráfico de las escenas seleccionadas del 
Storyboard general. El equipo implementará un producto funcional trabajando con las 
escenas segmentadas durante el tiempo establecido para este sprint. La finalización se 
dará al integrar lo generado y se validará mediante un conjunto de pruebas.  
Tabla 3. Workflow Específico 
Scrum Scrum TVDI Descripción TVDI 
Sprint 
Storyboard 
especifico 
Desarrollo en detalle de las escenas, requisitos y restricciones 
que conforman la fase.  
 
División de 
tareas 
El equipo reducirá el Storyboard específico en tareas simples. 
 
Selección de 
tareas 
En base a la división de tareas cada integrante del equipo podrá 
elegir el trabajo que considera adecuado para su 
implementación. 
 Implementación Elaboración del trabajo seleccionado. 
Integración - 
Validación 
 
El equipo integrará el trabajo realizado y validará el mismo 
mediante plantillas de pruebas definidas para aplicaciones 
TVDI. 
Se ejecuta tantas veces el equipo lo considere necesario. 
Finalización 
Fase 
 
El equipo entregará un incremento listo para su integración y 
validación con el proyecto total. Mediante el cual a posteriori 
generará un producto funcional. 
4 EXPERIENCIAS 
La iniciativa propuesta en la Sección anterior fue puesta a prueba para el programa de 
televisión denominado CAMPUS. El cual es el magazine universitario de la UNPA 
UARG, producido, editado, y filmado por la universidad y que se emite 
semanalmente por canales de aire y cable,  de la provincia de Santa Cruz. Para poder 
incorporar interactividad a CAMPUS, se desarrollaron prototipos de manera 
incremental. 
El objetivo fue realizar un producto funcional en el cual se mostraba un video del 
programa, ofreciendo interactividad al televidente a través de botones de colores y las 
teclas de navegación del control remoto. Estos elementos permitían acceder a 
información adicional del staff de CAMPUS. Estos requerimientos demandaron el uso 
de distintas medias, como texto, imágenes, video, audio, etc. 
El cliente para esta experiencia estuvo constituido por un productor general, un 
diseñador, y un conductor. Mientras que el equipo de desarrollo está formado por dos 
analistas de sistemas, un licenciado en sistemas y un doctor en sistemas que dirigió el 
proyecto. 
Los primeros prototipos fueron desarrollados de manera intuitiva (sin herramientas, 
estrategias y/o directrices que guiaran la implementación de las aplicaciones). Por ello 
y ante el aumento de la complejidad del contenido de los requerimientos y 
funcionalidad de la aplicación interactiva, se decidió incorporar un proceso y 
artefactos de apoyo para la construcción de la misma. En este contexto se planteó 
adoptar una metodología ágil, ya que se pretendía lograr productividad en el equipo 
sobre una tecnología nueva y desconocida que requiere de innovación, inmediatez, 
atención a los cambios y con una presencia colaborativa de los clientes (productores 
audiovisuales, diseñadores, etc.). 
Cómo el grupo de investigación ha utilizado y se encuentra familiarizado con el 
framework Scrum para el desarrollo de aplicaciones, se decidió utilizar este enfoque 
incorporando herramientas y artefactos para este tipo de aplicaciones TVDI. 
Primero, se generó un diagrama denominado Workflow del Proyecto, como se 
visualiza en la Fig. 2 que describe el proceso adaptado, las fases a seguir y los 
artefactos a utilizar o diseñar en cada etapa. El mismo se realizó en una pizarra 
mediante una puesta en común del equipo. 
 
Fig. 2. Workflow del Proyecto 
Se partió de la definición de requerimientos valorizados con el cliente, lo cual es 
una lista de objetivos o product backlog. Una vez definidos los requerimientos, se 
elaboró el Storyboard General que se muestra en la Fig. 3, el cual es un diagrama 
representado mediante escenas (como los utilizados para la creación de dibujos 
animados). El mismo se efectuó utilizando la pizarra y luego se documentó. Este 
artefacto es uno de los más importantes dentro del desarrollo de aplicaciones TVDI, 
ya que contiene una vista general de toda la aplicación a desarrollar, muestra medias 
utilizadas, eventos y relaciones, entre otros.  
 
Fig. 3. Storyboard General 
A partir del Storyboard General, se efectuó la selección de escenas que se 
desarrollaron en el Workflow Específico. Luego de la ejecución de esta etapa, se 
integró el demo obtenido con el proyecto y se validó utilizando plantillas de prueba. 
Además se efectúo la entrega al cliente, de quien se obtuvo una retroalimentación. 
En la fase de Workflow Específico, se generó también un Storyboard detallado, 
definido en base a las escenas seleccionadas antes de iniciar esta etapa. Se 
complementó esta documentación además, con diagramas NCL como se muestra en la 
Fig.4 [11]. 
 
Fig. 4. Diagrama NCL 
 
Siguiendo dentro de la fase específica, se realizó la división de tareas utilizando 
una pizarra que se visualiza en la Fig. 5 y notas adhesivas con la descripción de las 
mismas, así cada integrante seleccionaba las que desarrollaría. 
 Fig. 5. División de Tareas en Pizarra 
Una vez seleccionadas las tareas, se realizó la implementación de las mismas 
dentro de un proceso iterativo en un periodo de tiempo definido por los integrantes 
del equipo. Se validó e integró cuando el equipo lo consideró necesario, utilizando 
para la validación las plantillas de prueba como se muestra en la Fig. 6 diseñadas para 
aplicaciones TVDI. 
 
Fig. 6. Plantilla de Prueba 
La etapa finalizaba cuando se cumplía el tiempo estipulado con las tareas 
implementadas hasta ese momento. El artefacto obtenido en esta fase específica se 
validó e integró con el proyecto, de esta manera el proceso continuo su curso en el 
Workflow General, donde el resultado generado fue el producto funcional CAMPUS 
que se representa en la Fig. 7. 
   
Fig. 7. Aplicación Interactiva CAMPUS 
5  TRABAJOS RELACIONADOS 
El trabajo propuesto en [26] presenta un modelo para el desarrollo de programas de 
TVDI, basado en metodologías ágiles, que integra actividades inherentes al proceso 
de producción de TV y actividades de desarrollo de software. El modelo es pautado 
en cuatro aspectos: 1) Filosofía de trabajo, 2) Proceso, 3) Roles y Responsabilidades y 
4) Artefactos. La definición de la filosofía de trabajo fundamenta el proceso de 
modelado e implementación. Este proceso describe fases y ciclos bien definidos con 
detalle de las actividades a realizar. La descripción del perfil de los recursos humanos 
involucrados (programador, ingeniero de prueba, consultor, guionista, director y etc.) 
así como la responsabilidad de cada uno de ellos dentro de las actividades definidas, 
evita distorsiones a lo largo de la ejecución del modelo y permite que todo el equipo 
construya de forma colaborativa un programa TVDI. El final de cada actividad da 
como resultado la producción de artefactos (documentos, códigos, medias y 
submodelos producidos durante el proceso) de los cuales se puede destacar: 
Storyboard [24] [25], timeline, flujo de interactividad y esbozos de la interface a ser 
contemplados. El modelo divide el ciclo de vida del desarrollo de programas TVDI en 
5 fases cortas, con Iteraciones constantes y con fuerte integración del usuario 
(telespectador) y el equipo de desarrollo. Siendo ellas: Concepción, Elaboración, 
Construcción, Prototipado/Prueba y Liberación. 
Buscando contribuir a la solución del problema de modelado de aplicaciones TVDI 
en [27] se presenta un modelo denominado StoryToCode. Este modelo permite 
especificar programas TVDI basados en la utilización de componentes software. 
StoryToCode permite la transformación de un modelo conceptual de alto nivel en una 
descripción del conjunto abstracto de elementos componentes y posteriormente la 
transformación de esos elementos en código. En StoryToCode un componente 
software es tratado como un elemento especial que puede ser reutilizado en otros 
contextos (otras plataformas de ejecución como Web, móvil, etc.). StoryToCode esta 
 inspirado en MDA (Model Driven Architecture) y permite proyectar e implementar 
una aplicación, independiente del contexto, llevando en consideración las 
particularidades de un programa TVDI. El objetivo de StoryToCode es disminuir la 
responsabilidad del generador de contenido a través de la descentralización de las 
etapas de producción, que está fuera de su universo de trabajo original: la 
especificación y la implementación de un artefacto software. Se espera, como 
consecuencia de su utilización, permitir la participación de otros actores en el proceso 
productivo de un programa TVDI y disminuir el esfuerzo requerido durante ese 
proceso y el reaprovechamiento de los componentes de software generados en 
dominios diferentes. 
6 CONCLUSIONES 
En este trabajo hemos presentado el desarrollo de aplicaciones para TV Digital 
interactivas con SCRUM. Este enfoque ha permitido identificar y definir los roles del 
equipo de trabajo con facilidad, determinar el conjunto de fases y actividades a 
desarrollar, su secuencia y artefactos producidos. También hemos aplicado este 
enfoque a una experiencia sencilla pero real. En este sentido, el trabajo próximo 
continúa con la aplicación de este enfoque en aplicaciones más complejas, para seguir 
validando y mejorando lo propuesto. 
Otro objetivo aún no cubierto es la inclusión de los televidentes en el grupo de 
Stakeholders, de manera diferenciada de los clientes, a quienes definimos a priori 
como usuarios finales. Analizar su experiencia y nivel de satisfacción es parte de 
nuestro trabajo futuro, para lo cual creemos importante realizar una clasificación de 
los mismos. Asimismo un acercamiento que se pondrá en práctica, consistirá en 
aplicar técnicas de cuestionarios sobre grupos que respondan a diferentes perfiles. 
Recientemente se ha creado el Laboratorio de TV Digital, en el cual se 
desarrollarán diversas aplicaciones para el canal de televisión de la universidad 
haciendo uso de técnicas de desarrollo emergentes. 
7
