Un entorno de decisión para la gestión y evaluación de la calidad en el desarrollo del software
﻿  
Actually, companies use software environments to manage critical processes. For this 
reason, the control of quality in software products has a main role in the manufacturing 
of the software programs. The methodologies of software development and the models 
of capacity contribute to improve the quality and provide global measures of 
effectiveness in the practice of Software Engineering. These models are oriented to the 
evaluation of the development processes and maintenance of systems and software 
products. In this paper, a decision environment for evaluation of software projects is 
presented. This tool allows evaluating software products to find the weaknesses and 
strengths of running projects. Also this tool is able to calculate the effectiveness of the 
different tasks of the software methodology development. 
Keywords: Software quality, evaluation methodologies, quality evaluation tools. 
Resumen   
Actualmente se ha extendido el uso, por parte de las empresas, de entornos software 
para controlar sus procesos más críticos. Por esta razón, el control de la calidad en los 
procesos de producción de productos software ha pasado a ser vital. En esta área, las 
metodologías para el desarrollo de software y los modelos de calidad contribuyen a 
mejorar la calidad aportando medidas globales de efectividad en la práctica de la 
Ingeniería del Software. Estos modelos están orientados a la evaluación de los procesos 
de desarrollo y mantenimiento de sistemas y productos software. En este trabajo se 
presenta un entorno de decisión para la evaluación de proyectos software. Esta 
herramienta permite evaluar los productos software para encontrar las debilidades y 
fortalezas de los proyectos en curso. Además permite estimar la efectividad de las 
diferentes fases y tareas de las metodologías de desarrollo del software. 
Palabras claves: Calidad de software, metodologías de evaluación, herramientas de 
evaluación de calidad. 
XIII Congreso Argentino de Ciencias de la Computación
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
 
IV Workshop de Ingeniería de Software y Bases de Datos
_________________________________________________________________________
 
 
572
1 Introducción 
La calidad en los productos software es una exigencia creciente, dado que cada vez es 
más amplio el uso del software en procesos que son críticos para las organizaciones. Por 
otra parte, el software se ha convertido en un elemento crucial en la economía mundial. 
Una definición amplia de calidad, planteada en la norma UNE-EN ISO 8402 (1995), 
expresa que “la calidad es el conjunto de propiedades y características de un producto o 
servicio que le confieren su aptitud para satisfacer unas necesidades explícitas o 
implícitas”. Llevada esta definición al campo de la ingeniería de software, la IEEE (Std 
610, 1990) señala que “la calidad del software es el grado con el que un sistema, 
componente o proceso cumple los requerimientos especificados y las necesidades o 
expectativas del cliente o usuario”. 
Por su parte Pressman (2004) se refiere a la calidad del software como “la concordancia 
con los requisitos funcionales y de rendimiento explícitamente establecidos, con los 
estándares de desarrollo explícitamente documentados, y con las características 
implícitas que se espera de todo software desarrollado profesionalmente”. 
Las definiciones anteriores resaltan tres puntos importantes: 
 Los requisitos del software son la base de las medidas de calidad. La falta de 
concordancia con los requisitos es una falta de calidad. 
 Los estándares especificados definen un conjunto de criterios de desarrollo 
que guían la forma en que se aplica la ingeniería del software. Si no se 
siguen esos criterios, casi siempre habrá falta de calidad. 
 Existe un conjunto de requisitos implícitos que a menudo no se mencionan. 
Si el software se ajusta a sus requisitos explícitos pero falla en alcanzar los 
requisitos implícitos, la calidad del software queda en entredicho. 
Se debe tener en cuenta a la hora de abordar la calidad en el software que el desarrollo 
del mismo es de naturaleza compleja, dado que tiene un conjunto de características que 
lo hace un producto peculiar: 
 Se desarrolla, no se fabrica en el sentido clásico de la palabra. 
 Se trata de un producto lógico, intangible, sin existencia física. 
 No se degrada con el uso. 
 Por la complejidad del software y la ausencia de controles adecuados, se 
suele entregar conscientemente con defectos (incluso públicamente 
declarados). 
 Un gran porcentaje de la producción se hace aún a medida en vez de emplear 
componentes existentes y ensamblar. 
XIII Congreso Argentino de Ciencias de la Computación
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
 
IV Workshop de Ingeniería de Software y Bases de Datos
_________________________________________________________________________
 
 
573
 Es muy flexible. Se puede cambiar con facilidad e incluso reutilizar 
fragmentos. 
Sommerville (2005), afirma que la mejor forma de asegurar que los requerimientos de 
calidad sean verificables, es expresándolos cuantitativamente. Esto puede lograrse 
midiendo algunas características del software que están relacionadas, de alguna manera, 
con el sistema deseado. 
Sin embargo, es necesario señalar que el proceso de aseguramiento de la calidad del 
software (SQA-Software Quality Assurance) es una actividad que se aplica a lo largo de 
todo el proceso de ingeniería de software. Si se realiza un proceso de desarrollo con 
calidad, es de esperar que se obtenga un producto de calidad. El aseguramiento de la 
calidad se realiza a través de un proceso de desarrollo guiado por modelos y 
metodologías que permiten llevar adelante procesos con final predecible. 
Metodologías de desarrollo de software 
Las metodologías de desarrollo de software son un conjunto de procedimientos, técnicas 
y ayudas a la documentación para el desarrollo de productos software. Las metodologías 
de desarrollo de software contribuyen a mejorar la calidad.  
Los programadores tradicionales argumentan que la aplicación de una metodología 
supone una gran carga. Es cierto, pero si no se emplea una metodología pueden surgir 
los siguientes problemas: 
 Resultados impredecibles 
 Detección tardía de errores 
 Cambios de organización que también afectarán al proceso 
 Resultados distintos con nuevas clases de productos 
El desarrollo del software se suele organizar en proyectos. En cada proyecto de 
desarrollo se deben aplicar las directrices de calidad fijadas a nivel de la organización. 
Para ello es imprescindible la adaptación de las mismas a las condiciones de cada 
proyecto. Las directrices contenidas en el sistema de calidad deben adecuarse a cada 
uno de los proyectos. 
En este trabajo se presenta una herramienta de software desarrollada en la Universidad 
de Málaga para evaluar la calidad a nivel de los proyectos en curso, de los proyectos 
terminados y a nivel de la empresa. La primera opción, proporcionará los métodos para 
evaluar la calidad de los proyectos en curso, las evaluaciones obtenidas permitirán 
determinar el grado evolución de la calidad y finalmente, la calidad a nivel de empresa, 
permitirá realizar una evaluación bajo el marco de trabajo CMMI-SW. 
El artículo se estructura como sigue: en la siguiente sección se introduce la metodología 
DUM y el modelo de madurez para el desarrollo de sistemas de calidad; a continuación 
se presenta una nueva herramienta para la medición de la calidad y finalmente se 
exponen las conclusiones y futuras líneas de trabajo. 
XIII Congreso Argentino de Ciencias de la Computación
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
 
IV Workshop de Ingeniería de Software y Bases de Datos
_________________________________________________________________________
 
 
574
2 Metodología DUM  
DUM (Diseño Unificado con Métrica) es una metodología evolutiva e incremental de 
desarrollo del software que ha sido creada en el departamento de Lenguajes y Ciencias 
de la Computación de Universidad de Málaga (Peláez et al. 2007). Basada en un 
enfoque iterativo incremental, esta metodología realiza una especificación exhaustiva de 
todas las actividades y tareas que se realizan en las diferentes fases, prestando especial 
atención por alcanzar un nivel superior de madurez según el marco CMMI/Carnegie 
Mellon. 
Sus características principales son: 
 Proporcionar una guía para ordenar las actividades de un equipo. 
 Dirigir las tareas de cada desarrollador por separado y del equipo en 
conjunto. 
 Especificar los artefactos que deben desarrollarse. 
 Ofrecer criterios para el control y la medición de los productos y actividades 
del proyecto. 
La metodología DUM esta dividida en 6 fases: Preliminar, Inicio, Elaboración, 
Construcción, Transición y Mantenimiento. Cada una de las fases se ejecuta mediante 
una o más iteraciones. Cada iteración esta compuesta por actividades pertenecientes a 
alguna de las siguientes líneas de trabajo: 
 Planificación 
 Estudio de viabilidad 
 Identificación y especificación de requisitos 
 Análisis del Sistema 
 Diseño del Sistema 
 Construcción del Sistema 
 Prueba del Sistema 
 Mantenimiento del Sistema 
 Labores de Calidad 
 Labores de Seguridad 
 Labores de Gestión de la Configuración 
 Labores de Gestión de Proyectos 
XIII Congreso Argentino de Ciencias de la Computación
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
 
IV Workshop de Ingeniería de Software y Bases de Datos
_________________________________________________________________________
 
 
575
La descripción detallada de estas iteraciones y de las actividades que las componen se 
puede encontrar en Peláez et al. (2007). Las actividades de dichas líneas de trabajo a su 
vez estarán compuestas por tareas. Cada una de estas tareas deberá ser ejecutada en 
función del correspondiente orden y fechas dispuestas en la planificación realizada. 
Además, en cada tarea se generará un documento y una serie productos directos de su 
ejecución. 
Modelo de Madurez 
El objetivo primordial de la ingeniería de software es producir un sistema, aplicación o 
producto de alta calidad. Para lograr este objetivo, los ingenieros del software deben 
aplicar métodos efectivos junto con herramientas modernas dentro del contexto de un 
proceso maduro de desarrollo de software. Además un buen ingeniero de software debe 
medir si la alta calidad se lleva a cabo (Pressman, 2004). 
El CMMI (Capability Maturity Model - Modelo de Madurez de Capacidad), 
proporciona una medida de efectividad global de las prácticas de Ingeniería del 
Software. Es un modelo para la mejora o evaluación de los procesos de desarrollo y 
mantenimiento de sistemas y productos de software. 
Este modelo nace como resultado del esfuerzo del Instituto de Ingeniería del Software 
(SEI) de la Universidad Carnegie Mellon, que culmina en el año 2002. El objetivo es 
unificar los modelos de ingeniería de software (SW-CMM, también conocido como 
CMM), de ingeniería de sistemas (SECMM) y de desarrollo integrado de productos 
(IPD-CMM). 
Este modelo establece un conjunto de prácticas o procesos clave agrupados en Áreas 
Clave de Proceso (KPA - Key Process Area). Para cada área de proceso define un 
conjunto de buenas prácticas a través de las cuales una organización progresivamente 
alcanza mayor calidad, productividad y menores costos en el desarrollo de software. 
CMMI tiene como objetivo el mejoramiento continuo de la calidad de los procesos y 
productos de una organización. A través de la evaluación de los procesos de una 
organización, es posible determinar una magnitud denominada Nivel de Madurez del 
Proceso. 
3 Descripción de la herramienta 
En esta sección se presenta una herramienta de software diseñada para evaluar la 
calidad a nivel de los proyectos en curso, de los proyectos terminados y a nivel de la 
empresa, donde se combinan tanto el modelo de madurez como la metodología de 
diseño unificado con métrica DUM. 
Este sistema ha sido desarrollado con el lenguaje de programación Delphi utilizando 
una base de datos SQL Server. Además, forma parte de un proyecto mayor que integra 
funciones de planificación, documentación y seguridad que permitirá dar soporte a todas 
las actividades críticas de la gestión de proyectos de software. 
XIII Congreso Argentino de Ciencias de la Computación
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
 
IV Workshop de Ingeniería de Software y Bases de Datos
_________________________________________________________________________
 
 
576
Aplicación para la evaluación de la calidad 
Al iniciar la aplicación, el interfaz muestra tres opciones que hacen referencia a los tres 
niveles citados anteriormente: Calidad a Nivel de Proyecto, Evolución de la Calidad y 
Calidad a Nivel de Empresa. 
Figura 1: Selección de opciones 
Calidad a nivel de empresa 
Si seleccionamos la primera opción, accedemos a la interfaz de Calidad a nivel de 
empresa. Esta interfaz nos permite generar una nueva evaluación teniendo acceso a los 
datos básicos de identificación de la evaluación como del modelo y alcance deseado. 
Figura 2: Nueva evaluación. Datos de Identificación 
XIII Congreso Argentino de Ciencias de la Computación
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
 
IV Workshop de Ingeniería de Software y Bases de Datos
_________________________________________________________________________
 
 
577
Figura 3: Selección del modelo y alcance de la evaluación. Representación por niveles 
En la pestaña Modelo y alcance, se puede seleccionar el tipo de representación elegida 
para el modelo, optando entre representación continua, por niveles o ambas. De igual 
manera se podrá seleccionar el alcance de la evaluación, seleccionando fácilmente qué 
prácticas, objetivos, áreas de proceso y/o niveles se desea evaluar para el modelo por 
niveles, siendo idéntica la selección del alcance para el modelo continuo. 
Una vez seleccionado el tipo y alcance de la evaluación se puede pasar a la fase de 
recopilación de artefactos, ya sea pulsando sobre el botón Siguiente situado en la parte 
superior derecha, o sobre el quinto botón de la barra de botones. 
Se visualiza el siguiente formulario: 
Figura 4: Recopilación de artefactos 
XIII Congreso Argentino de Ciencias de la Computación
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
 
IV Workshop de Ingeniería de Software y Bases de Datos
_________________________________________________________________________
 
 
578
Fácilmente se puede ir cambiando entre los dos modelos de representación elegidos. En 
la parte superior derecha tendremos un listado de botones con las distintas áreas de 
procesos de la que consta cada representación. Una vez pulsado uno de estos botones, 
en el lado izquierdo se desplegará un árbol compuesto de las distintas prácticas y 
subprácticas de la que consta cada área de proceso. Seleccionando uno de sus nodos, en 
la parte inferior al árbol aparecerá una descripción de la práctica, complementándose 
con una descripción de la subpráctica si de este tipo fuera el nodo seleccionado.  
En la parte inferior derecha se encuentra situado un listado de los distintos objetos que 
comprende cada práctica o subpráctica, los que se pueden eliminar, editar o agregar 
elementos nuevos, si este fuera el caso. Al introducir un nuevo artefacto, se puede elegir 
el tipo y el carácter, introduciendo además una descripción sobre el mismo. 
Terminada la introducción de datos, se puede proceder a la evaluación de los mismos. 
Para ello, se debe pulsar el botón de Evaluación de la interfaz principal, 
desplegándose la siguiente ventana: 
Figura 5: Evaluación del proyecto 
En su lado izquierdo, y dentro del alcance seleccionado, se selecciona el aspecto a 
evaluar. Una vez realizada la selección, sólo tendremos que pulsar sobre el botón 
Valorar para obtener la valoración sugerida. Si bajo el criterio del usuario, la valoración 
elegida no fuera la misma que la valoración sugerida, deberá dar una justificación en el 
campo dedicado para ello. 
Una vez realizada la valoración de los datos, podremos acceder mediante el botón 
de la interfaz principal a la representación gráfica de los resultados obtenidos como se 
muestra en los siguientes ejemplos: 
XIII Congreso Argentino de Ciencias de la Computación
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
 
IV Workshop de Ingeniería de Software y Bases de Datos
_________________________________________________________________________
 
 
579
Figura 6: Niveles de madurez Figura 7: Madurez por categorías 
Figura 8: Niveles de capacidad por área de proceso 
 
Figura 9: Informe del proyecto 
Como complemento a las representaciones 
gráficas, pulsando sobre el botón Informes 
de la interfaz principal, obtendremos un informe de 
resultados. 
Además se ofrece la opción de abrir, editar, guardar y cerrar la evaluación en cualquier 
momento, facilitando de esta manera que la recolección de los datos se produzca al 
mismo tiempo que se usa el software. 
Calidad a nivel de proyecto 
En esta propuesta se trabaja con la metodología DUM y el objetivo de la aplicación es 
conocer si se está aplicando dicha metodología de forma adecuada, si los documentos 
generados son los correctos y si se generan en el orden adecuado.  
Para ello, en primer lugar, el encargado de llevar a cabo la evaluación del proyecto 
deberá contestar una serie de preguntas efectuadas sobre cada tarea ejecutada. De esta 
manera, según las respuestas se podrá realizar una calificación a la tarea. 
XIII Congreso Argentino de Ciencias de la Computación
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
 
IV Workshop de Ingeniería de Software y Bases de Datos
_________________________________________________________________________
 
 
580
Dichas preguntas estarán basadas en el contenido de la documentación generada por 
cada tarea, de manera que podremos saber si los datos que contienen son los que 
deberían haberse generado con la ejecución de la misma. 
Como resultado de este cuestionario sobre la documentación se obtiene una calificación 
de calidad sobre el proyecto. Además, una de sus principales ventajas es que no es 
necesario esperar a la finalización del proyecto para realizar una evaluación del mismo, 
pudiendo efectuarse en cualquier punto de desarrollo del proyecto. 
El software mostrará en pantalla, por cada tarea, la documentación generada por la 
ejecución de la misma y el cuestionario a rellenar, de manera que con una simple lectura 
de la documentación se puedan contestar con facilidad. 
Figura 10: Formulario de evaluación de una tarea 
Además de la evaluación explicada en el punto anterior, el software de manera 
automática realiza un análisis de los retrasos que se han sufrido con respecto a la 
planificación, estableciendo los puntos más débiles de los procesos en curso.  
Como paso final en la evaluación, el software procederá a la generación del informe de 
resultados, obteniéndose una valoración de la calidad a nivel de proyecto. 
XIII Congreso Argentino de Ciencias de la Computación
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
 
IV Workshop de Ingeniería de Software y Bases de Datos
_________________________________________________________________________
 
 
581
Figura 11: Resultados de la evaluación de las distintas líneas de trabajo 
Cada una de las evaluaciones realizadas podrá ser guardada para una posterior 
actualización conforme se continúe con el desarrollo del producto, o editada ante 
posibles modificaciones.  
Evolución de la calidad 
Para poder establecer criterios de evolución de calidad, el sistema lleva un registro  
histórico de proyectos. Cada proyecto finalizado es almacenado en una base de datos 
para ser utilizado como referente para obtener un nivel de calidad de la empresa, y 
poder establecer puntos críticos de evolución para determinar la progresión de la 
empresa. 
El tener disponible esta información en tiempo de desarrollo brinda la posibilidad de 
realizar comparativas entre la calidad de los proyectos en curso y el nivel actual de 
calidad de la empresa, permitiendo establecer controles para establecer si se mejora o 
empeora el nivel de calidad de la empresa 
4 Conclusiones 
Indudablemente, el concepto de calidad está estrechamente vinculado a la cultura u 
organización del trabajo. La gestión de la calidad a nivel de empresa u organización 
consiste en la creación de una estructura organizativa apropiada para fomentar el trabajo 
por la calidad de todas las personas y departamentos de la empresa. Por lo tanto, las 
empresas que adopten metodologías o esquemas de trabajo para mejorar el proceso de 
desarrollo de software tendrán muchas más ventajas competitivas frente a las demás.  
En este contexto, la aplicación desarrollada pretende apoyar el seguimiento y evaluación 
permanente de la calidad en el desarrollo del software de una manera sencilla, confiable 
y segura, permitiendo a las empresas realizar un control permanente de los proyectos en 
curso. Asimismo, permite evaluar la eficacia con que se aplican las distintas tareas que 
componen la metodología de desarrollo. El sistema clasifica los resultados obtenidos en 
XIII Congreso Argentino de Ciencias de la Computación
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
 
IV Workshop de Ingeniería de Software y Bases de Datos
_________________________________________________________________________
 
 
582
función de la línea de trabajo a la que pertenecen, permitiendo tener una medida fiable 
del cumplimiento de la planificación prevista para los proyectos. 
Otra ventaja que provee la aplicación, está relacionada con la recolección automática de 
una serie de datos referentes a la seguridad del sistema: riesgo al que están sometidos 
los activos, riesgo umbral de los mismos, existencia de plan de contingencia por activo, 
etc. que también son empleados como indicadores del estado actual de la calidad de los 
proyectos en curso. 
Agradecimientos  
Este trabajo esta incluido en el proyecto TIN2006-14285. Ministerio de Educación y 
Ciencia. España. 
