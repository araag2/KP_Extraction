Alterando el estado de garantía mediante la incorporación de información
﻿
Motivated by its applicability on deliberative inteligent agents, this work introduces the problem of finding
what facts should be incorporated to a DeLP program in order to change the state of warrant of a particular
literal. To achieve a deeper understanding of this problem, we analize how the incorporation of a specific set
of facts affects the warrant of a particular literal. Finally, we introduce a formula that formally expresses how a
topological change in a dialectical tree affects the status of the argument on its root.
Keywords: DeLP, Intelligent Agents, state of warrant.
1. INTRODUCCI ÓN Y MOTIVACIONES
La Programación en Lógica Rebatible (DeLP) constituye un formalismo efectivo para representar
y razonar acerca de conocimiento tentativo y potencialmente contradictorio y resulta muy adecuado para aplicaciones donde se agrega y quita información en forma dinámica. Este sistema es una
extensión de la Programación en Lógica en la que se utiliza un proceso dialéctico para obtener las
respuestas basado en [5]. Una presentación completa puede encontrarse en [2].
Consideremos un agente inteligente deliberativo que utiliza DeLP como formalismo de representación de conocimiento y razonamiento. Supongamos que dicho agente utiliza hechos para representar el estado actual del mundo, incorporándolos y quitándolos para reflejar los cambios percibidos.
Además, utiliza el operador de creencia “B” introducido en [2] para definir sus creencias en base a
la noción de garantía. En este contexto, podría resultar útil para el agente contar con alguna forma de
determinar como cambiar el mundo para alterar su creencia acerca de un determinado literal.
Sobre la base de estas suposiciones y con la restricción de considerar sólo la incorporación de
hechos, surge el planteo del siguiente problema: dado un programa DeLP P y dado un literal h con
un cierto estado de garantía (garantizado/no garantizado), se desea hallar un conjunto de hechos
β tal que el estado de garantía de h cambie al incorporar β al programa.
Para avanzar en la solución de este problema necesitamos descubrir, y luego capturar formalmente,
la correlación entre un conjunto de hechos arbitrario y el estado de h luego de incorporar dicho
conjunto de hechos al programa. Como mostraremos en lo que sigue, la incorporación de un conjunto
Financiado parcialmente por CONICET (PIP 5050), Universidad Nacional del Sur (PGI 24/ZN11) y Agencia Nacional de Promoción Científica y Tecnológica (PICT 13096, PICT 15043, PAV 076)
1542
de hechos a un programa puede provocar la aparición y desaparición de ciertos argumentos 1. Además,
el árbol de dialéctica asociado a un argumento 〈A, h〉 que no desaparece, puede sufrir cambios en su
topología. Es decir, ciertos subárboles de dicho árbol pueden desaparecer y nuevos subárboles pueden
aparecer. Este cambio sufrido por el árbol de dialéctica para 〈A, h〉 puede provocar un cambio en
la marca (U/D) asociada a su raíz, es decir, un cambio en el status (derrotado/no derrotado) de
〈A, h〉. Finalmente, dado que el estado de garantía de un literal se define en términos del status de los
argumentos que soportan dicho literal, el cambio de status de ciertos argumentos soportando h puede
provocar un cambio en el estado de garantía de h.
Este trabajo se estructura de la siguiente manera. En la sección 2 se plantea formalmente el problema y se ilustra mediante un ejemplo concreto. En la sección 3 se analiza el cambio topológico
(aparición y desaparición de subárboles) sufrido por un árbol de dialéctica resultado de incorporar
un conjunto de hechos arbitrario y se introducen conceptos y notación para caracterizar formalmente
este cambio. En la sección 4 se analiza la relación entre el cambio topológico sufrido por un árbol de
dialéctica y el status del argumento de su raíz. Finalmente, en la sección 5 se introduce una fórmula
que permite capturar formalmente la relación analizada en la sección 4.
2. PLANTEO FORMAL DEL PROBLEMA
Dado un programa DeLP P = (Π,∆) y dado un literal h con un determinado estado de garantía
W ∈ {garantizado, no garantizado}, se desea obtener un conjunto de literales minimal β tal que
el status de h en P′ = (Π ∪ β,∆) sea W , el estado opuesto a W (W = no garantizado si W =
garantizado y viceversa).
Usualmente, existe más de un posible conjunto de hechos β con esas características, por lo que el
problema podría generalizarse a obtenerlos a todos. A continuación se muestra un ejemplo concreto
que ilustra el problema.
2.1. Un ejemplo concreto
Considérese un programa DeLP P1 = (Π1,∆1) donde
Π1=



∼e ← n g
∼o ← ∼q,m i
c k
d p
f r
t



∆1=



a —< b, c h —< i
a —< j, c ∼h —< i,m
a —< o, c j —< k
b —< d ∼j —< k,m
∼b —< e o —< p
∼b —< h ∼o —< q
∼b —< n q —< r
e —< f ∼q —< r, s
∼e —< f, g s —< t
∼s —< t, n



y el literal a, que se encuentra garantizado en P1 como muestra la Figura 1. Sea β1 = {m,n} y
P′1 = (Π1 ∪ β1,∆1), el programa que resulta de incorporar β1 a P1. Como puede observarse en la
Figura 2, a se encuentra no garantizado en P′1.
1Sobre la temática asociada a los sistemas argumentativos existen dos artículos que compendian el estado del arte
[1, 4]
1543
Figura 1: Arboles que justifican el estado garantizado del literal a a partir de P1.
3. CAMBIO EN UN ÁRBOL DE DIAL ÉCTICA
Como resultado de la incorporación de un conjunto de hechos a un programa, ciertos argumentos
podrían desaparecer y otros podrían aparecer. Formalmente, sea P = (Π,∆) un programa DeLP.
Sea β un conjunto de hechos tal que Π ∩ β = ∅. Sea P′ = (Π ∪ β,∆) el programa que resulta de
incorporar β a P. Sea ArgsP [ArgsP′] el conjunto de todos los argumentos que se obtienen a partir
de P[P′]. Podría ocurrir que ArgsP′ − ArgsP 6= ∅ (es decir, ciertos argumentos aparecen), y queArgsP − ArgsP′ 6= ∅ (es decir, ciertos argumentos desaparecen).
A lo largo de este trabajo diremos que un argumento 〈A, h〉 desaparece por la incorporación de
β si 〈A, h〉 ∈ ArgsP − ArgsP′ . Análogamente, diremos que un argumento 〈A, h〉 aparece por la
incorporación de β si 〈A, h〉 ∈ ArgsP′ − ArgsP.
Consideremos el programaP1 del ejemplo de la sección 2.1. El argumento A1 = 〈{∼j —< k,m},∼j〉
aparece por la incorporación de β1. El argumento A2 = 〈{(∼b —< e), (e —< f)},∼b〉 desaparece por la
incorporación de β1.
A continuación se analizarán los posibles cambios sufridos por un árbol de dialéctica T〈A0, h0〉
asociado a un argumento 〈A0, h0〉 obtenido a partir de P, como resultado de incorporar un conjunto de
hechos β. Se asumirá que 〈A0, h0〉 no desaparece por la incorporación de β (ie, 〈A0, h0〉 ∈ ArgsP′).
3.1. Análisis del cambio en un árbol de dialéctica
Consideremos el argumento 〈A1, a〉, donde A1 = {(a —< b, c), (b —< d)}, que se obtiene a partir
de P1 y P′1. En la Figura 3(a) se muestra el árbol de dialéctica T〈A1, a〉 para 〈A1, a〉 a partir de P1,
es decir, antes de la incorporación de β1. En la Figura 3(b) se muestra el árbol de dialéctica T ′〈A1, a〉
para 〈A1, a〉 a partir de P′1, es decir, luego de la incorporación de β1.
La desparición del argumento 〈A2,∼b〉 por la incorporación de β1, provoca la desaparición del
subárbol con raíz 〈A2,∼b〉. La aparición del argumento 〈A5,∼b〉 por la incorporación de β1 provoca
la aparición de un nuevo subárbol (constituido en este caso por un único nodo) como hijo de la raíz
de T〈A1, a〉. La aparición del argumento 〈A6,∼h〉 por la incorporación de β1 provoca la aparición de
1544
Figura 2: Arboles que justifican el estado no garantizado del literal a a partir de P′1.
un nuevo subárbol como hijo del nodo etiquetado con 〈A3,∼b〉 en T〈A1, a〉.
La desaparición de un subárbol no siempre es consecuencia de la desaparición del argumento de
su raíz. Consideremos el argumento 〈A7, a〉, donde A7 = {(a —< o, c), (o —< p)}, que se obtiene a partir de P1 y P′1. Consideremos los árboles de dialéctica para 〈A7, a〉 antes y después de incorporar β1,
T〈A7, a〉 y T
′
〈A7, a〉, mostrados en la Figura 4. La presencia de la regla ∼o ← ∼q,m en Π1 hace
que los argumentos 〈A7, a〉 y 〈A9,∼q〉 se tornen contradictorios al incorporar el hecho m. En consecuencia, la línea de argumentación [〈A7, a〉, 〈A8,∼o〉, 〈A9,∼q〉] deja de ser aceptable al incorporar
β1, provocando la desaparición del subárbol con raíz 〈A9,∼q〉.
Análogamente, la aparición de un subárbol no siempre es consecuencia de la aparición del argumento de su raíz. La presencia de la regla (∼o ← ∼q,m) en Π1 hace que los literales ∼q y o pasen
a ser literales en desacuerdo y por lo tanto, que el argumento 〈A9,∼q〉 se convierta en un derrotador
(de bloqueo) para 〈A7, a〉. Esto provoca la aparición de un nuevo subárbol como hijo de de la raíz de
T〈A7, a〉, como se muestra en la Figura 4.
3.2. Conceptos para caracterizar formalmente el cambio
En esta sección se introducirán algunos conceptos que permitirán caracterizar formalmente las
variaciones en un árbol como resultado de la incorporación de un conjunto de hechos.
Un árbol de dialéctica podría tener más de un nodo etiquetado con un mismo argumento. En
consecuencia, para referirnos a un nodo específico de un árbol no basta con especificar el argumento
que lo etiqueta. Esto motiva la introducción del siguiente concepto.
Sea P un programa lógico rebatible, y L = [〈A0, h0〉, 〈A1, h1〉, ..., 〈An, hn〉] una línea de argumentación aceptable (como fué definido en [2]). Sea 〈E, e〉 un argumento obtenido a partir de P.
Diremos que 〈E, e〉 exiende a L en P, si L′ = [〈A0, h0〉, 〈A1, h1〉, ..., 〈An, hn〉, 〈E, e〉] es una línea de
argumentación aceptable.
Dado un argumento 〈E, e〉 obtenido a partir de un programa P y una línea de argumentación L tal
que 〈E, e〉 extiende a L en P, usaremos M| 〈E, e〉L para referirnos al argumento 〈E, e〉 en el contexto de
la línea L. Esta notación nos permitirá hacer referencia sin ambigüedad a un nodo específico de un
árbol de dialéctica. A continuación se mostrará cómo.
1545
Figura 3: (a) Arbol de dialéctica para 〈A0, a〉 a partir de P1. (b) Arbol de dialéctica para 〈A0, a〉 a
partir de P′1.
Sea 〈A0, h0〉 un argumento obtenido a partir de P y sea T〈A0, h0〉 el árbol de dialéctica para
〈A0, h0〉. Sea N〈E, e〉 un nodo de T〈A0, h0〉 etiquetado con un argumento 〈E, e〉. Sea
L = [〈A0, h0〉, 〈A1, h1〉, ..., 〈An, hn〉] la línea de argumentación correspondiente al camino desde la
raíz de T〈A0, h0〉 hasta el padre de N〈E, e〉 inclusive. Se usará M
|
〈E, e〉
L
para referirnos a N〈E, e〉.
A modo de ilustración, consideremos el árbol de dialécitica de la Figura 3(a). Usaremos M| 〈A1, a〉[]
para referirnos a su raíz, M| 〈A2,∼b〉[〈A1, a〉] para referirnos a su hijo izquierdo y M| 〈A4,∼e〉[〈A1, a〉, 〈A2,∼b〉] para
referirnos al hijo de éste último.
Sea P un programa. Sea β un conjunto de hechos. Sea P′ = (Π ∪ β,∆). Sea L una línea de
argumentación aceptable a partir de P y P′. Diremos que:
un argumento 〈E, e〉 obtenido a partir de P′ brota a partir de L por la incorporación de β si
〈E, e〉 extiende a L en P′ y no extiende a L en P. Alternativamente diremos que M| 〈E, e〉L brota
por la incorporación de β.
un argumento 〈E, e〉 obtenido a partir de P desaparece a partir de L por la incorporación de
β si 〈E, e〉 extiende a L en P y no extiende a L en P′. Alternativamente diremos que M| 〈E, e〉L
desaparece por la incorporación de β.
Los conceptos de argumento que brota y argumento que desaparece a partir de una línea permiten
referirnos más formalmente a los cambios sufridos por un árbol como resultado de la incorporación
de un conjunto de hechos. Consideremos nuevamente los cambios sufridos por el árbol para 〈A1, a〉
como resultado de la incorporación de β1, ilustrados en la Figura 3. Empleando la terminología recién
introducida, estos cambios podrían describirse de la siguiente manera:
〈A2,∼b〉 desaparece a partir de [〈A1, a〉] por la incorporación de β1
〈A5,∼b〉 brota a partir de [〈A1, a〉] por la incorporación de β1.
1546
Figura 4: (a) Arbol de dialéctica para 〈A6, a〉 a partir de P1. (b) Arbol de dialéctica para 〈A6, a〉 a
partir de P′1.
〈A6,∼h〉 brota a partir de [〈A1, a〉, 〈A3,∼b〉] por la incorporación de β1.
De la misma forma, los cambios sufridos por el árbol para 〈A7, a〉 podrían describirse como se
hace a continuación:
〈A9,∼q〉 desaparece a partir de [〈A7, a〉, 〈A8,∼o〉] por la incorporación de β1
〈A9,∼q〉 brota a partir de [〈A7, a〉] por la incorporación de β1.
4. STATUS DE LA RAÍZ DE UN ÁRBOL EN FUNCI ÓN DEL CAMBIO
En esta sección se analizará y caracterizará formalmente la relación entre el cambio sufrido por un
árbol de dialéctica (en términos del brote y desaparicion de subárboles) y el status de su raíz, resultado
de la incorporación de un conjunto de hechos β. Este análisis se hará abstrayéndonos del contenido
de los argumentos del árbol (es decir, de las reglas que conforman los argumentos).
4.1. Análisis de la relación entre el status de la raíz de un árbol y el cambio
Consideremos en primera instancia el brote de subárboles con raíz marcada D. Como muestra la
Figura 5, el brote de un subárbol con raíz marcada D debajo de un argumento marcado con U no
altera el marcado de dicho argumento. Así mismo, como se muestra en la Figura 6, el brote de un
subárbol con raíz marcada D debajo de un argumento marcado con D tampoco altera el marcado de
dicho argumento.
En conclusión, el brote de un subárbol con raíz marcada D a partir de una línea L nunca repercutirá en el status de la raíz del árbol completo ya que nunca provocará un cambio en la marca siquiera
del último argumento de L, a partir del cual brota. De aquí en adelante cada vez que se hable de
subárboles que brotan o desaparecen se estará haciendo referencia a subárboles con raíz marcada con
U, salvo que se diga explícitamente lo contrario.
1547
Figura 5: Brote de subárbol con raíz marcada D debajo de un nodo marcado U.
Figura 6: Brote de subárbol con raíz marcada D debajo de un nodo marcado D.
A continuación se analizará, mediante algunos ejemplos, como afecta el brote y la desaparción de
subárboles al status de la raíz de un árbol.
Considérese el árbol de la Figura 7. Veamos en primera instacia como afecta el brote de subárboles
a partir de ciertas líneas de ese árbol. Para abreviar, utilizaremos M| Ak[1, 2, ..., n] en lugar de
M| 〈Ak, hk〉[〈A1, h1〉, 〈A2, h2〉, ..., 〈An, hn〉] . En la Figura 8(a) se muestra como el brote deM| Ak[1, 3] provoca un cambio
en el status de M| A1[] . M| A3[1] pasa a estar marcado con D y en consecuencia M| A1[] pasará a estar marcado
con U por estar todos sus derrotadores marcados con D.
Observar que el brote de un único subárbol o de más de uno a partir de una misma línea L es
equivalente en términos del efectos sobre el marcado de los argumentos del árbol. Por lo tanto no
tendrá sentido considerar el brote de más de un subárbol a partir de una misma línea. Si además de
M| Ak[1, 3] brota M| Am[1, 2, 4] , como se muestra en la Figura 8(b), M| A1[] conservará su marca D, ya que uno
de sus hijos, M| A2[1] , ahora está marcado con U. Finalmente, como se ilustra en la Figura 8(c), el brote
adicional de M| An1, 2 anula el efecto del brote de M| Am1, 2, 4 , reinstalando un marcado D para M| A2[1] . Como
consecuencia, M| A1[] queda marcado con U.
Ahora consideremos la desaparición de subárboles.
En la Figura 9(a) se muestra como la desaparición de M| A3[1] provoca el marcado U de M| A1[] . Esto
ocurre porque M| A3[1] es el único derrotador de M| A1[] marcado con U. El propósito del caso mostrado en
la Figura 9(b) es recordar que la desaparición de subárboles con raíz marcada con D no tiene efecto
alguno. Las figuras 10(a) y 10(b) muestran combinaciones de brote y desaparición de subárboles.
1548
Figura 7: Árbol de dialéctica marcado para A1.
Figura 8: Repercusión de distintos brotes sobre el marcado de la raíz.
4.2. Fórmula de status de un argumento en función del cambio
En esta sección se mostrará como construir una fórmula para capturar formalmente la relación
analizada en la sección anterior, entre el cambio sufrido por un árbol y el status de su raíz, resultado
de la incorporación de un conjunto de hechos β.
A continuación se especifica la forma de los átomos a partir de los cuales se contruirá la fórmula,
junto a su significado.
U(M| AkL ): el argumento M| AkL se encuentra marcado con U luego de la incorporación de β.
D(M| AkL ): el argumento M| AkL se encuentra marcado con D luego de la incorporación de β.
dis(M| AkL ): desaparece M| AkL por la incorporación de β.
spr(M| AkL ): brota M| AkL por la incorporación de β.
1549
Figura 9: Repercusión de la desaparición de distintos subárboles sobre el marcado de la raíz.
Figura 10: Repercusión del brote y desaparición de subárboles sobre el marcado de la raíz.
Recordemos la regla para establecer la marca asociada a un nodo interno de un árbol de dialectica
en función de las marcas asociadas a los hijos de dicho nodo presentada en [2].
Sea T〈A0, h0〉 el árbol de dialéctica para un argumento 〈A0, h0〉 obtenido a partir de un programa P. Sea M| 〈A, h〉L un nodo de T〈A0, h0〉 donde L = [〈A0, h0〉, 〈A1, h1〉, ..., 〈An, hn〉]. Sea L
′ =
[〈A0, h0〉, 〈A1, h1〉, ..., 〈An, hn〉, 〈A, h〉]. M
|
〈A, h〉
L
se marcará con U ssi todo hijo M| 〈Bi, ki〉L
′
de M| 〈A, h〉L se
encuentra marcado con D.
Esta regla puede extenderse para considerar el cambio en términos de brote y desaparición de
subárboles resultado de la incorporación de un conjunto de hechos.
Sea T〈A0, h0〉 el árbol de dialéctica para un argumento 〈A0, h0〉 obtenido a partir de un programa
P. Sea β un conjunto de hechos. SeaM| 〈A, h〉L un nodo de T〈A0, h0〉 donde L = [〈A0, h0〉, 〈A1, h1〉, ..., 〈An, hn〉],
tal queM| 〈A, h〉L no desaparece por la incorporación de β. Sea L′ = [〈A0, h0〉, 〈A1, h1〉, ..., 〈An, hn〉, 〈A, h〉].
M| 〈A, h〉L se marcará con U luego de la incorporación de β ssi
todo hijo M| 〈Bi, ki〉L
′
de M| 〈A, h〉L o bien desaparece o se encuentra marcado con D luego de la inor1550
poración de β
y
no es el caso que un argumento brote a partir de la línea L luego de la incorporación de β.
Esta regla puede especificarse mediante la siguiente fórmula:
U(M| 〈A, h〉L ) ⇔
(∧
16i6n
(dis(M| 〈Bi, ki〉L
′
) ∨ ¬U(M| 〈Bi, ki〉L
′
))
)
∧ ¬(∃x)spr(M| 〈Sx, sx〉L
′
) (1)
donde 〈B1, k1〉, 〈B2, k2〉,...,〈Bn, kn〉 son los hijos de 〈A, h〉.
A continuación se mostrará como obtener la fórmula del status de M| A1[] en función del brote y
desaparición de subárboles.
En primer lugar, se instancia la fórmula (1) con cada nodo del árbol:
U(M| A1[] ) ⇔
(dis(M| A2[1] ) ∨ ¬U(M| A2[1] )
) ∧ (dis(M| A3[1] ) ∨ ¬U(M| A3[1] )
) ∧ ¬(∃x)spr(M| Ax[1] )
U(M| A2[1] ) ⇔
(dis(M| A4[1, 2] ) ∨ ¬U(M| A4[1, 2] )
) ∧ ¬(∃x)spr(M| Ax[1, 2] )
U(M| A3[1] ) ⇔¬(∃x)spr(M| Ax[1, 3] )
U(M| A4[1, 2] ) ⇔¬(∃x)spr(M| Ax[1, 2, 4] )
Se reemplaza la definición para U(M| A4[1, 2] ) en la definición para U(M| A2[1] ):
U(M| A2[1] ) ⇔ (dis(M| A4[1, 2] ) ∨ (∃x)spr(M| Ax[1, 2, 4] )) ∧ ¬(∃x)spr(M| Ax[1, 2] )
Finalmente se reemplazan las definiciones para U(M| A2[1] ) y U(M| A3[1] ) en la definición para U(M| A1[] )
y se reescribe la fórmula resultante utilizando De Morgan de forma que no queden conectivos ’∨’ ni
’∧’ dentro del alcance de un ’¬’.
U(M| A1[] ) ⇔
(
dis(M| A2[1] ) ∨ ¬dis(M| A4[1, 2] ) ∧ ¬(∃x)spr(M| Ax[1, 2, 4] ) ∨ (∃x)spr(M| Ax[1, 2] )
)
(2)
∧
(
dis(M| A3[1] ) ∨ (∃x)spr(M| Ax[1, 3] )
)
∧ ¬(∃x)spr(M| Ax[1] )
En la Figura 11 se brinda una representación gráfica de la fórmula para U(M| A1[] ) con el propósito de
facilitar su lectura y comprensión. Observar que las ramificaciones en el gráfico representan disyunción y la secuencia conjunción. De esta forma, un camino desde el punto inicial a la izquierda del
gráfico hasta el punto final a la derecha del mismo representa una forma de hacer verdadera la fórmula, y por lo tanto de lograr el marcado U para la raíz del árbol, M| A1[] .
Consideremos el camino señalado en la Figura 12. De acuerdo a este camino, una forma de hacer
verdadera la fórmula es que no desaparezca el argumento A4 a partir de [1, 2], que no brote un argumento a partir de [1, 2, 4], que brote un argumento a partir de [1, 3] y que no brote un argumento a
partir de [1]. Esta forma de hacer verdadera la fórmula corresponde al caso ilustrado en la Figura 8(a).
Dado un β cuya incorporación al programa provoca un determinado cambio en un árbol en términos de brote y desaparición de subárboles, podríamos utilizar la fórmula para determinar el status de
la raíz del árbol resultado de dicha incorporación. Una forma de hacerlo es considerar cada posible
camino en la representación gráfica para la fórmula, concluyendo que la raíz estará marcada con U
si se encuentra al menos uno cuyos átomos son todos satisfechos, y concluyendo que estará marcada
1551
Figura 11: Representación gráfica de la fórmula (2).
Figura 12: Camino representando una forma de hacer verdadera la fórmula.
con D en caso contrario. La Figura 13 ilustra este procedimiento para el caso de la Figura 8(c). Un√
sobre un átomo significa que el átomo es satisfecho, y permite avanzar por ese camino. Una ×
sobre un átomo significa que ese átomo no es satisfecho y en consecuencia no tiene sentido seguir
avanzando por ese camino. Al encontrar un camino formado por átomos satisfechos, concluimos que
la raíz estará marcada con U. Notar que la conclusión es correcta, como muestra la Figura 8(c).
Figura 13: Ilustración del procedimiento para el cambio de la Figura 8(c).
La Figura 14 ilustra el procedimiento para el caso de la Figura 10(a). Al no existir un camino
formado por átomos satisfechos, concluimos que la raíz estará marcada con D. Notar que la conclusión
es correcta, como muestra la Figura 10(a).
1552
Figura 14: Ilustración del procedimiento para el cambio de la Figura 10(a).
5. CONCLUSIONES Y TRABAJO FUTURO
Mediante este trabajo, y motivados por su aplicabilidad a agentes inteligentes deliberativos, se
planteó formalmente el problema de determinar qué hechos debería incorporarse a un programa DeLP
para alterar el estado de garantía de un determinado literal. Con el propósito de introducirnos en el
abordaje del problema se analizó el efecto de la incorporación de un conjunto de hechos arbitrario sobre el estado de garantía de un determinado literal. Finalmente, se introdujo una fórmula que permite
capturar formalmente el efecto del cambio en la topología de un árbol de dialéctica sobre el status del
argumento de su raíz.
Como trabajo futuro se analizará en mayor profundidad y caracterizará formalmente el efecto de
la incorporación de un conjunto de hechos arbitrario sobre el estado de garantía de un determinado
literal, lo que permitirá obtener una solución al problema planteado en este artículo. Finalmente se
utilizará  -DeLP ([3]) para formalizar la solución hallada. Dado que se cuenta con un intérprete para
-DeLP, dispondremos automáticamente de una implementación de la solución.
