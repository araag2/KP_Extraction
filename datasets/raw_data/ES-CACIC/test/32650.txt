Evaluación de accesibilidad del contenido web utilizando agentes
﻿o Web
Utilizando Agentes
Rafaela Mazalu12, Alejandra Cechich1, and Adriana Martín13
1 Giisco, Facultad de Informática, Universidad Nacional del Comahue,
Neuquén, Argentina
2 Concejo Nacional de Investigaciones Científicas y Técnicas, Universidad Nacional
del Comahue, Neuquén, Argentina
3 Unidad Académica Caleta Olivia, Universidad Nacional de la Patagonia Austral,
Caleta Olivia, Santa Cruz, Argentina,
rafaelamazalu@gmail.com,acechich@gmail.com,adrianaelba.martin@gmail.com
Abstract. Actualmente, existe un creciente número de herramientas
que permiten a los desarrolladores Web evaluar la accesibilidad de sus
páginas y sitios Web. Muchas herramientas también sugieren al desarrollador realizar reparaciones específicas; y algunas herramientas siguen
automáticamente los enlaces para evaluar múltiples páginas dentro de un
sitio o un dominio completo. Aunque este tipo de herramientas pueden
resultar muy útiles en la identificación de problemas de accesibilidad,
muchos problemas de accesibilidad son subjetivos y no pueden evaluarse
sin una inspección manual. Nuestro enfoque está dirigido a la evaluación
y reparación de la accesibilidad como actividades relacionadas que deben
ser soportadas de manera inteligente y en forma automática. Para ello,
se deben considerar varios aspectos, desde la identificación automática
de las discapacidades de los usuarios a la reparación en si misma. En este
artículo, introducimos una solucion basada en agentes para hacer frente
al paso de evaluación de este enfoque, que esta basado en la identificación
de aquellas barreras de accesibilidad presentes en el sitio que el usuario
está navegando y que están relacionadas con las discapacidades visuales
que el usuario posee. Además el procedimiento de evaluación se ilustra
a través de un caso motivacional.
Keywords: Discapacidades Visuales, Agente Inteligente, Barreras de
Accesibilidad, Accesibilidad Web
1 Introducción
La importancia de identificar las barreras de Accesibilidad de forma automática
acorde al perfil del usuario puede ser significativa dado que la amplia variedad
de aplicaciones Web no se encuentran organizadas según las necesidades de los
usuarios. De está manera se excluye a una gran cantidad de usuarios con limitaciones como discapacidades, limitaciones con respecto al contexto de acceso,
software, hardware, ancho de banda de la conexión, etc. [1].
Particularmente, la accesibilidad Web se refiere a la practica inclusiva de crear
827
páginas web utilizables por todas las personas. Para ello, muchos trabajos y enfoques [2, 8, 10, 12, 13, 18, 19] toman como referencia las Guias de Accesibilidad
al Contenido Web 1.0 [3] y 2.0 [4].
Actualmente, existen algunos esfuerzos hacia la automatización de los aspectos de la accesibilidad Web. Por ejemplo, la inspección se puede automatizar
mediante el uso de sistemas capaces de analizar y recomendar, como TAW [5],
Bobby [2], y WAVE [6]. Estos sistemas tienen como objetivo evaluar las fortalezas y debilidades de los sitios Web, y se focalizan en ayudar a los diseñadores a
mejorar la accesibilidad Web. También existen enfoques, que permiten evaluar
automáticamente los formatos de los documentos Web, por ejemplo mediante el
uso de GAEL [7] aprovechando sus capacidades de razonamiento.
Al enfocarnos en la evaluación y reparación automática, consideramos que las
herramientas de soporte deberían ser inteligentes, en cuanto a adaptarse a las
limitaciones individuales y a la situación actual de cada persona, para ofrecer
un servicio lo más apropiado posible en relación con las intenciones y objetivos
del usuario. La presencia de técnicas basadas en conceptos de inteligencia artificial son deseables en herramientas de reparación y transformación debido a
la necesidad de simplificar el proceso de toma de decisiones, reduciendo así la
intervención humana. Sin embargo, la limitada existencia de inteligencia en las
herramientas actuales [7–11], hace que el usuario deba decidir sobre el proceso
de operación.
La mayoría de las herramientas de evaluación y reparación existentes adhieren
a los estándares de accesibilidad Web y soportan diferentes formatos de documentos Web. Sin embargo, existe una brecha entre el soporte existente y las
necesidades reales en términos de detección automática e inteligente de barreras de accesibilidad Web. Este hecho, nos conduce a enfocarnos en resolver este
tipo de barreras, para identificar y responder las necesidades particulares de los
usuarios aplicando características inteligentes. Para ello, elegimos una solución
basada en agentes. En un primer paso, nuestra meta fue diseñar un agente que
crea y clasifica perfiles de usuarios en términos de estereotipos definidos según
las limitaciones visuales y de contexto de uso que los usuarios puedan tener
[20]. En la presente etapa, presentamos un agente cuya meta es proporcionar
información sobre las barreras de accesibilidad presentes en la página web que
el usuario está navegando de acuerdo a las características del perfil del usuario.
Este artículo se organiza de la siguiente manera. En la Sección 2 se introduce
una solución basada en agentes que evalúa y corrige potenciales barreras de accesibilidad presentes en una página de acuerdo con las caracteísticas del perfil del
usuario que navega la misma. Luego, en la Sección 3 definimos el agente evaluador de la propuesta mediante la descripción de sus objetivos, sus conocimientos,
que incluyen las potenciales barreras de accesibilidad, y como estos son utilizados
para la realización de la evaluación de paginas Web. En la Sección 4 ilustramos
nuestra propuesta con un caso motivacional. Finalmente, en la Sección 5 presentamos las conclusiones y trabajo futuro.
828
2 Evaluación Automática de Barreras Utilizando Agentes
El proceso de evaluación de la accesibilidad Web tiene por objetivo analizar,
estudiar y validar las páginas Web para que las mismas no presenten problemas de accesibilidad y cumplan con las pautas y directrices de accesibilidad
web existentes. La evaluación de accesibilidad se puede realizar tanto en forma
manual como automática. La primer forma requiere la participación de un experto para el análisis; mientras que en la segunda el análisis es realizado por
una herramienta, que automatiza la tarea. Sin embargo, una revisión de este
tipo cuenta con algunas limitaciones importantes, como por ejemplo puede no
detectar errores o señalar errores que realmente no existen (falsos positivos).
La solución propuesta por nuestro enfoque es la mejora de la automatización mediante la utilización de un sistema multiagente que realiza el análisis,
la evaluación y corrección de una página Web de manera inteligente. La solución
Fig. 1. Proceso marco para el sistema multiagente
propuesta es una herramienta Web que cumple su funcionalidad teniendo en
cuenta un proceso marco que define la forma de interacción de sus componentes
y la intervención del usuario. Dicho proceso esta conformado por dos actividades principales, las cuales son la Identificación y Reconocimiento del Usuario
y Análisis, Evaluación y Corrección de Páginas Web. La primera de las actividades se encuentra relacionada con la identificación y clasificación del usuario
de la herramienta, y es llevada a cabo mediante el subproceso Construcción del
Perfil Estereotipado [20]. De la misma manera, la segunda actividad es llevada a
cabo mediante el subproceso Evaluación y Corrección. La Fig. 1 muestra los subprocesos realizados en el marco de nuestra propuesta. El primer subproceso es
realizado una sola vez para cada usuario. En el mismo, a través del cuestionario
de registración completado por el usuario, el agente constructor de perfiles iden829
tifica el estereotipo al que pertenece, es decir, a que grupo de usuarios con
determinadas características de discapacidad visual pertenece (Usuarios ciegos,
disminuidos visuales, daltónicos, con epilepsia fotosensibles o sin discapacidad
visual). Luego el agente construye el perfil del usuario que será una pieza clave en
el resto del proceso [20]. El segundo subproceso involucra la evaluación y corrección de una página web en base al perfil del usuario generado anteriormente, y las
posibles barreras de accesibilidad que pueden presentarse para el estereotipo del
perfil. Este subproceso tendrá lugar al momento del análisis de una página Web
por parte de un usuario ya registrado. Cabe destacar que la interacción entre el
sistema multiagente y el usuario es llevada a cabo mediante una aplicación Web,
que cuenta con la funcionalidad necesaria para la realización del cuestionario y
para servir como forma de acceso y comunicación entre el sistema multiagente y
el componente cliente de la herramienta.
Para la etapa de evaluación, principal objetivo de este trabajo, el sistema multiagente cuenta con un agente deliberativo, encargado de considerar cada barrera
de accesibilidad que puede estar presente en la página Web evaluada de acuerdo
a la discapacidad del usuario. El resultado de dicha evalución es un reporte con
los errores de accesibilidad Web que presenta la página. Este reporte es procesado por el componente cliente de la herramienta y mostrado al usuario. Luego,
para la etapa de corrección, otro agente deliberativo toma los errores de accesibilidad detectados y la información sobre la página analizada para generar el script
de corrección de errores. Finalmente, el script de correcciones es interpretado y
aplicado por el componente cliente en la página Web analizada.
3 Definiendo el Agente Evaluador
Un agente inteligente define un sistema basado en el conocimiento que percibe
de su entorno [15], razona para interpretar sus percepciones, inferir y resolver
problemas. Luego el agente define las acciones y tareas a realizar sobre el entorno
para alcanzar el conjunto de objetivos para los que fue diseñado. La estructura
del agente evaluador es deliberativa, basada en el modelo BDI (creencia, deseo
e intención).
El entorno que percibe el mismo esta compuesto por los restantes agentes del
sistema, la página Web que el usuario está navegando/evaluando y el perfil del
usuario. Las creencias del agente incluyen el conocimiento que el agente tiene
de si mismo y de su entorno. En este caso, las creencias incluyen el perfil del
usuario, la página Web bajo evaluación y las posibles barreras de accesibilidad
que se pueden presentar. Los deseos son las metas que el agente quiere cumplir
a largo plazo. En nuestro caso, incluimos como objetivo identificar las barreras
de accesibilidad web que presenta la página bajo evaluación de acuerdo al perfil
del usuario, es decir, acorde a las limitaciones visuales que el usuario presenta,
e identificando que puntos de verificación de las WCAG 1.0 y criterios de éxito
de las WCAG 2.0 corresponde al caso. Las intenciones son los objetivos que el
agente intenta lograr. Para este agente, el objetivo es descubrir la mayor cantidad
posible de barreras de accesibilidad presentes en la página bajo evaluación.
830
Fig. 2. Diagrama de secuencia de la interacción del agente evaluador con su entorno
de trabajo
Dado que este agente se basa en razonamiento práctico [16], su decisión en
cada acción que realiza le facilita arribar a sus objetivos. Para ilustrar la relación
del agente evaluador con su entorno y las interacciones que realiza para alcanzar
sus objetivos, utilizamos el diagrama de secuencia que se visualiza en la Fig. 2.
En este diagrama podemos observar que las peticiones de análisis enviadas por
el AdministradorDOM para un usuario y página Web particulares. En respuesta
a esta solicitud, el agente interactúa con el GestorBaseDatos para recuperar el
perfil estereotipado del usuario [20].
Una vez recuperado el perfil, el agente determina bajo qué estereotipo fue
clasificado y nuevamente interactúa con el GestorBaseDatos para obtener todas
las posibles barreras que se pueden presentar para este tipo de estereotipo. La
representación de dichas barreras está basada en el mapeo definido en la propuesta de Bustos et al. [21]. Luego, por cada una de las potenciales barreras, el
agente evalúa las incidencias de las mismas en la página bajo análisis. El agente
evaluador puede solicitar al AdministradorDOM información adicional para enriquecer el proceso de análisis de cada barrera y arribar a una conclusión con
precisión. Una vez concluido el proceso de evaluación devuelve el resultado del
mismo de una forma que el AdministradorDOM puede interpretar y mostrar al
usuario final.
3.1 Identificando Barreras de Accesibilidad
En nuestro proceso de identificación de posibles barreras de accesibilidad, primeramente, analizaremos aquellas que normalmente pueden encontrarse en un sitio
831
Web, y que dificultan la interacción de los usuarios con discapacidades visuales.
Luego indicaremos los puntos de verificación presentes en las WCAG 1.0 [3] y los
criterios de éxito de las WCAG 2.0 [4] que tienen asociados cada una de estas
barreras y las posibles soluciones a dichas barreras. Para alcanzar este objetivo, consideramos el enfoque “BarrierWalkthrough” de Giorgio Brajnik [14]. El
mismo consiste en que un evaluador tiene que considerar un número predefinido
de posibles barreras, las cuales son interpretaciones y extensiones de los principios de Accesibilidad [3, 4, 17]. El contexto para la aplicación de este método
comprende las distintas categorías de usuarios (como usuario ciegos, disminuidos
visuales, daltónicos y fotosensibles), los escenarios de uso de los sitios Web (como
uso de un lector de pantalla), y los objetivos propios de usuario.
Fig. 3. Propuesta identificación de puntos de Verificación correspondientes a las
WCAG para evaluar sitios Web para usuarios con discapacidad visual
Para analizar, seleccionar y reorganizar las barreras de accesibilidad junto
con los puntos de verificación de las WCAG, consideramos lo siguiente: (i) El
obstáculo o barrera de accesibilidad que impide realizar la tarea o actividad al
usuario; (ii) La forma en que los elementos u objetos son innaccesibles; (iii) Las
posibles soluciones que deben aplicarse para que desaparezca el obstáculo.
Para plasmar nuestra propuesta de identificación de barreras utilizaremos el
siguiente proceso de mapeo y la plantilla de resultados. Como puede observarse
en la Fig. 3 para el proceso de mapeo consideramos cada una de las barreras
de accesibilidad propuestas por Brajnik [14] y cotejamos con ellas los puntos de
verificación de las WCAG 1.0 y criterios de éxito de las WCAG 2.0. En caso
de que el objetivo del punto de verificación (y criterios de éxito) se encuentre
incluido dentro de la descripción de la barrera de accesibilidad, entonces dicho
punto de verificación (y criterio de éxito) será considerado al momento de realizar
una evaluación para la detección de la barrera en un sitio Web.
En la plantilla para la identificación de barreras de accesibilidad que se muestra en la Tabla 1 se especifican: (i) la causa que provoca la presencia de la barrera;
(ii) las consecuencias de dicha presencia; (iii) posibles soluciones que pueden apli832
Table 1. Plantilla para la identificación de Barreras de Accesibilidad
Causa Descripción de la barrera de Accesibilidad que se encuentra en el sitio Web
Consecuencia Son los posibles problemas que afectarán los objetivos
de los usuarios cuando se encuentren con la barrera al
navegar por el sitio Web
Solución Las acciones o cambios que se deben realizar para que la
barrera desaparezca
Criterios de Éxito
WCAG 2.0:
Criterios de éxito de las WCAG 2.0 que estan incluidos
en la problemática que presenta la barrera.
Puntos de Verificación
WCAG 1.0:
Puntos de verificación de las WCAG 1.0 que estan incluidos en la problemática que presenta la barrera.
carse para eliminar dicha barrera; y los puntos de verificación de las WCAG 1.0 y
los criterios de éxito de las WCAG 2.0 que se encuentran incluidos en la barrera.
3.2 Aplicando la Propuesta de Identificación de Barreras
Para describir la propuesta de identificación de barreras de Accesibilidad tomamos
como ejemplo la barrera “Imágenes Ricas que carecen de un texto equivalente”
que afecta a usuarios con ceguera.
Causa. La página contiene alguna imagen que proporciona información (por
ejemplo, un diagrama, histograma, imagen, dibujo, gráfico), pero sólo en un
formato gráfico, no hay una descripción equivalente textual que aparezca en la
página.
Consecuencia. El usuario no puede utilizar la información transmitida por la
imagen. Reducción significativa de la eficacia y la productividad del usuario.
El usuario, incluso si percibe que hay una imagen importante, no tiene manera
de obtener la información que la misma contiene. Además, el usuario invierte
tiempo y esfuerzo extra para averiguar en que parte de la página (o sitio) puede
obtener información sobre lo que la imagen pretende trasmitir.
Solución. Añadir una descripción textual equivalente a la imagen mediante el
atributo ALT o el atributo LONGDESC de IMG, y si no es suficiente con la
etiqueta OBJECT, especificando el texto en el contenido de la etiqueta. Si esto
todavía resulta insuficiente, se puede añadir un enlace en la imagen que lleve a
una página específica donde la descripción textual esté presente. Otra estrategia
es colocar el texto equivalente cerca de la imagen de manera que también pueda
ser visto por aquellos que pueden ver en la imagen.
Criterios de Éxito WCAG 2.0. 1.1: 1.1.1
Puntos de Verificación WCAG 1.0. 1.1
4 Caso Motivacional
Para mostrar el funcionamiento del agente evaluador de una forma práctica utilizamos el sitio Web de la Facultad de Informática de la Universidad Nacional del
833
Comahue4. El mismo está destinado a jóvenes y adultos interesados en obtener
información sobre dicha facultad, tal como información institucional, académica,
de investigación y de extensión. En la Fig. 4 se visualiza la página de inicio del
mismo, la cual en primera instancia ya cuenta con algunos inconvenientes que
afectan a la accesibilidad, tal es el caso de las imágenes sin texto alternativo
como las que se señalan en la misma imagen y cuyo código HTML se muestra
resaltado.
Fig. 4. Captura de página de inicio del Sitio Web de la Facultad de Informática de la
Universidad Nacional del Comahue
Para este caso, suponemos que un usuario con ceguera visual accede al sitio,
al encontrarse con algunos inconvenientes en la navegación de la página solicita
la asistencia de nuestra herramienta. Habiéndose registrado previamente, la herramienta recupera el perfil del usuario mediante un nombre y contraseña. La
siguiente tarea a realizarse es el análisis de la página Web, para lo cual el agente
evaluador de la herramienta recupera las potenciales barreras de accesibilidad
para el estereotipo de usuarios ciegos al que pertenece el perfil del usuario. Dentro
de estas barreras se encuentra las de imágenes ricas que carecen de texto equivalente. Ya en el proceso de evaluación de las barreras el agente detecta la presencia
de imágenes con las características mencionadas, tales como las imágenes con el
logo de la Universidad5, el logo de la Plataforma para Educación a Distancia6, el
logo del sistema de gestión de alumnos que utiliza la Facultad7, utilizadas como
enlaces para acceso a los respectivos sitios. Ante esta situación el agente genera
un reporte de error, tanto para el componente cliente, que muestra al usuario
esta condición, como para el agente de corrección que intentará encontrar una
descripción alternativa para cada imagen con el fin de subsanar la presencia de
esta barrera. Cabe destacar que el agente evaluador no solo detecta la ausencia
de un texto alternativo, de la misma manera trata de detectar textos alterna4 http://faiweb.uncoma.edu.ar/
5 UNComa: http://www.uncoma.edu.ar
6 PEDCO: http://pedco.uncoma.edu.ar
7 Siu Guaraní: http://siufai.uncoma.edu.ar/
834
tivos que carecen de significado para el usuario, tal como simbolos, nombre del
archivo que contiene a la imagen, etc. El agente evaluador ha sido implementado en Spade8, un framework para sistemas multiagentes basado en python,
compatible con el estandart FIPA9, independiente del lenguaje y plataforma.
Las barreras son expresadas en lenguaje XML, lenguaje con el cual podemos
modelar y estructurar con mayor flexibilidad la información pertinente a las barreras de accesibilidad, sin perder capacidad de procesamiento por parte de la
herramienta.
5 Conclusiones y trabajo futuro
El desarrollo de aplicaciones Web accesibles es un factor fundamental para la
concreción del principio básico de acceso universal. Sin embargo, la gran mayoría
de las páginas en la Web ha sido desarrolladas desconociendo a los potenciales
beneficiarios de un desarrollo accesible. Motivados por esta realidad, presentamos
en este trabajo una solución basada en agentes inteligentes para la evaluación
automática de barreras de accesibilidad. Para ello, partimos de las necesidades
del usuario, sus discapacidades (si las presenta) y las barreras que puede llegar
a encontrarse al navegar en la Web. Primeramente identificamos y vinculamos
posibles barreras de accesibilidad a las WCAG 1.0 y 2.0. Luego, describimos el
proceso marco que abarca toda nuestra propuesta. Seguidamente, definimos las
metas, las intenciones y objetivos del agente evaluador en el que se enfoca el presente trabajo, así como el ambiente donde el mismo interactúa para alcanzar sus
objetivos y, describimos su funcionalidad a través de un caso motivacional. Sin
embargo, resta validar experimentalmente la propuesta así como extenderla para
relacionar la evaluación a un proceso de reparación automática. Nuestros esfuerzos actuales se dirigen a estos aspectos, con el objetivo de facilitar el proceso de
hacer la Web accesible para todos.
Agradecimientos Este trabajo es parcialmente soportado por el proyecto UNComa 04/F001 “Reuso Orientado a Dominios”, bajo el programa “Desarrollo
Basado en Reuso”, y el proyecto PAE-PICT 2312.
References
1. Hassan Montero, Y., Martín Fernández, F.: Qué es la accesibilidad web. Electronic
Magazine No Solo Usabilidad, 2003.
2. Martín, A., Cechich, A. and Rossi, G.: Comparing Approaches to Web Accessibility
Assessment. Calero, C., Moraga, M A., Piattini, M. (eds.) Handbook of Research
on Web Information Systems Quality, pp. 181-205. Information Science Reference,
Hershey New York, 2008.
3. Word Wide Web Consortium (W3C): Web Content Accessibility Guidelines
(WCAG) 1.0. Technical report, 1999.
8 https://github.com/javipalanca/spade
9 http://www.fipa.org/
835
4. Word Wide Web Consortium (W3C). Web Content Accessibility Guidelines
(WCAG) 2.0. Technical report, 2008.
5. Centro para el Desarrollo de Tecnologías de la Información y Comunicación: Taw
servicios de accesibilidad y movilidad web, 2013.
6. Web Accessibility in Mind (WebAIM): Wave wave is a free web accessibility evaluation tool, 2001.
7. Mosqueira Rey, E., Ríos, D. and Vázquez García, A.: Intelligent Agents in the
Evolution of Web and Applications, volume 117 of ISBN: 978-3-540-88070-7, chapter
A Multi-agent System Based on Evolutionary Learning for the Usability Analysis
of Websites, pages 1137. Springer, 2009.
8. Bigham, J., Kaminsky, R., Ladner, R. , Danielsson, O. and Hempton, G. :Webinsight: Making web images accessible. In The 8th international ACM Conference on
Assistive Technologies - ASSETS, pages 181188, 2006.
9. SSB BART Group: Infocus quick reference amp. Recovery in 2013, at
https://www.ssbbartgroup.com/reference/index.php/InFocus Quick Reference.
10. Di Lucca, G., Fasolino, A. and Tramontana, P.: Web site accessibility: Identifying
and fixing accessibility problems. In Seventh IEEE International Symposium on
Web Site Evolution WSE05, pages 7178. ACM, 2005.
11. Pontelli, E., Son, T., Kottapall, K., Ngo, C., Reddy, R. and Gillan, D.: A system for automatic structure discovery and reasoning-based navigation of the web.
Interacting with Computers, volume 16, pages 451475. Elsevier, 2004.
12. Keates, S. and Clarkson, P.: Countering design exclusion: bridging the gap between
usability and accessibility. Universal Access in Information Society, 2:pp215255,
2003.
13. Yesilada, Y., Harper,S., Goble, G. and Stevens, R.: Screen readers cannot see:
Ontology based semantic annotation for visually impaired web travelers. In Proceedings of the International Conference on Web Engineering (ICWE2004), pages
445458, 2004.
14. Brajnik, G.: Barrier walkthrough - heuristic evaluation guided by accessibility barriers. Recovery in 2013, at http://sole.dimi.uniud.it/ giorgio.brajnik/projects/bw/bw.html, 2009.
15. Russell, S. and Norvig, P.: Artificial Intelligence: A Modern Approach, PrenticeHall, Englewood Cliffs, NJ, 1995.
16. Wooldridge, M.: An Introduction to Multiagent Systems. Department of Computer
Science, University of Liverpool, UK, 2002.
17. Government U. F.: Quick reference guide to section 508 resource documents. Published in http://www.section508.va.gov/, 2003.
18. Gibson, B.: Enabling an accessible web 2.0, volume 225, pages 16. ACM, New York,
2007.
19. Matera, M., Rizzo, F. and Carughi, G.: Web usability: Principles and evaluation methods. In Emilia Mendes and Nile Mosley, editors, Web Engineering, pages
143180. Springer Berlin Heidelberg, 2006.
20. Mazalu, R., Cechich, A. and Martín, A.: Automatic Profile Generation for VisualImpaired Users. Aceptado para publicación en el 14 Simposio Argentino en Ingeniería de Software, Argentina, 2013.
21. Bustos, B., Martín, A. and Cechich, A.:Diseño de Interfaces Guiado por Restricciones de Accesibilidad Web. XIII Congreso Iberoamericano en “Software Enginnering”, Ecuador, 2010.
836
